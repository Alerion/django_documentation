# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-16 11:56+0200\n"
"PO-Revision-Date: 2015-11-17 10:48+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../internals/contributing/writing-code/javascript.txt:3
msgid "JavaScript"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:5
msgid ""
"While most of Django core is Python, the ``admin`` and ``gis`` contrib apps "
"contain JavaScript code."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:8
msgid ""
"Please follow these coding standards when writing JavaScript code for "
"inclusion in Django."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:12
msgid "Code style"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:14
msgid ""
"Please conform to the indentation style dictated in the ``.editorconfig`` "
"file. We recommend using a text editor with `EditorConfig`_ support to avoid "
"indentation and whitespace issues. Most of the JavaScript files use 4 spaces "
"for indentation, but there are some exceptions."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:19
msgid ""
"When naming variables, use ``camelCase`` instead of ``underscore_case``. "
"Different JavaScript files sometimes use a different code style. Please try "
"to conform to the code style of each file."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:23
msgid ""
"Use the `JSHint`_ code linter to check your code for bugs and style errors. "
"JSHint will be run when you run the JavaScript tests. We also recommended "
"installing a JSHint plugin in your text editor."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:27
msgid ""
"Where possible, write code that will work even if the page structure is "
"later changed with JavaScript. For instance, when binding a click handler, "
"use ``$('body').on('click', selector, func)`` instead of ``$(selector)."
"click(func)``. This makes it easier for projects to extend Django's default "
"behavior with JavaScript."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:36
msgid "JavaScript patches"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:38
msgid ""
"Django's admin system leverages the jQuery framework to increase the "
"capabilities of the admin interface. In conjunction, there is an emphasis on "
"admin JavaScript performance and minimizing overall admin media file size. "
"Serving compressed or \"minified\" versions of JavaScript files is "
"considered best practice in this regard."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:44
msgid ""
"To that end, patches for JavaScript files should include both the original "
"code for future development (e.g. ``foo.js``), and a compressed version for "
"production use (e.g. ``foo.min.js``). Any links to the file in the codebase "
"should point to the compressed version."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:50
msgid "Compressing JavaScript"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:52
msgid ""
"To simplify the process of providing optimized JavaScript code, Django "
"includes a handy Python script which should be used to create a \"minified\" "
"version. To run it:"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:61
msgid ""
"Behind the scenes, ``compress.py`` is a front-end for Google's `Closure "
"Compiler`_ which is written in Java. The Closure Compiler library is not "
"bundled with Django, but you can install it using pip as done above. The "
"Closure Compiler library requires `Java`_ 7 or higher."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:66
msgid ""
"Please don't forget to run ``compress.py`` and include the ``diff`` of the "
"minified scripts when submitting patches for Django's JavaScript."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:72
msgid "JavaScript tests"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:74
msgid ""
"Django's JavaScript tests can be run in a browser or from the command line. "
"The tests are located in a top level ``js_tests`` directory."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:78
msgid "Writing tests"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:80
msgid "Django's JavaScript tests use `QUnit`_. Here is an example test module:"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:108
msgid ""
"Please consult the QUnit documentation for information on the types of "
"`assertions supported by QUnit <https://api.qunitjs.com/assert/>`_."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:112
msgid "Running tests"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:114
msgid ""
"The JavaScript tests may be run from a web browser or from the command line."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:117
msgid "Testing from a web browser"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:119
msgid ""
"To run the tests from a web browser, open up ``js_tests/tests.html`` in your "
"browser."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:122
msgid ""
"To measure code coverage when running the tests, you need to view that file "
"over HTTP. To view code coverage:"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:125
msgid ""
"Execute ``python -m http.server`` from the root directory (not from inside "
"``js_tests``)."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:127
msgid "Open http://localhost:8000/js_tests/tests.html in your web browser."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:130
msgid "Testing from the command line"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:132
msgid ""
"To run the tests from the command line, you need to have `Node.js`_ "
"installed."
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:134
msgid ""
"After installing `Node.js`, install the JavaScript test dependencies by "
"running the following from the root of your Django checkout:"
msgstr ""

#: ../../internals/contributing/writing-code/javascript.txt:141
msgid "Then run the tests with:"
msgstr ""
