# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 11:07+0200\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 12942b84b8e747e2b3185563b2151161
#: ../../internals/contributing/committing-code.txt:3
msgid "Committing code"
msgstr ""

#: ../../internals/contributing/committing-code.txt:5
msgid ""
"This section is addressed to the :ref:`committers` and to anyone interested "
"in knowing how code gets committed into Django core. If you're a community "
"member who wants to contribute code to Django, have a look at :doc:`writing-"
"code/working-with-git` instead."
msgstr ""

# d703c92e25ce451f92d70e34b0577aa9
#: ../../internals/contributing/committing-code.txt:13
msgid "Handling pull requests"
msgstr ""

#: ../../internals/contributing/committing-code.txt:15
msgid ""
"Since Django is now hosted at GitHub, most patches are provided in the form "
"of pull requests."
msgstr ""

# c1aff74e78e54f3098a5734db84dab77
#: ../../internals/contributing/committing-code.txt:18
msgid ""
"When committing a pull request, make sure each individual commit matches the "
"commit guidelines described below. Contributors are expected to provide the "
"best pull requests possible. In practice however, committers - who will "
"likely be more familiar with the commit guidelines - may decide to bring a "
"commit up to standard themselves."
msgstr ""

#: ../../internals/contributing/committing-code.txt:26
msgid ""
"Before merging, but after reviewing, have Jenkins test the pull request by "
"commenting \"buildbot, test this please\" on the PR. See our `Jenkins wiki "
"page`_ for more details."
msgstr ""

#: ../../internals/contributing/committing-code.txt:32
msgid ""
"An easy way to checkout a pull request locally is to add an alias to your "
"``~/.gitconfig`` (``upstream`` is assumed to be ``django/django``)::"
msgstr ""

#: ../../internals/contributing/committing-code.txt:38
msgid ""
"Now you can simply run ``git pr ####`` to checkout the corresponding pull "
"request."
msgstr ""

#: ../../internals/contributing/committing-code.txt:41
msgid ""
"At this point, you can work on the code. Use ``git rebase -i`` and ``git "
"commit --amend`` to make sure the commits have the expected level of "
"quality. Once you're ready:"
msgstr ""

#: ../../internals/contributing/committing-code.txt:65
msgid ""
"For changes on your own branches, force push to your fork after rebasing on "
"master but before merging and pushing to upstream. This allows the commit "
"hashes on master and your branch to match which automatically closes the "
"pull request. Since you can't push to other contributors' branches, comment "
"on the pull request \"Merged in XXXXXXX\" (replacing with the commit hash) "
"after you merge it. Trac checks for this message format to indicate on the "
"ticket page whether or not a pull request is merged."
msgstr ""

#: ../../internals/contributing/committing-code.txt:73
msgid ""
"Avoid using GitHub's \"Merge pull request\" button on the website as it "
"creates an ugly \"merge commit\" and makes navigating history more difficult."
msgstr ""

# f03fc21cbb3245cfb0d5809e242c8986
#: ../../internals/contributing/committing-code.txt:76
msgid ""
"When rewriting the commit history of a pull request, the goal is to make "
"Django's commit history as usable as possible:"
msgstr ""

#: ../../internals/contributing/committing-code.txt:79
msgid ""
"If a patch contains back-and-forth commits, then rewrite those into one. For "
"example, if a commit adds some code and a second commit fixes stylistic "
"issues introduced in the first commit, those commits should be squashed "
"before merging."
msgstr ""

# ff063bf421d84ed488738ff9c7fa5def
#: ../../internals/contributing/committing-code.txt:84
msgid ""
"Separate changes to different commits by logical grouping: if you do a "
"stylistic cleanup at the same time as you do other changes to a file, "
"separating the changes into two different commits will make reviewing "
"history easier."
msgstr ""

# bfb8e88fc79d45dea52db06ecb5c90bd
#: ../../internals/contributing/committing-code.txt:89
msgid "Beware of merges of upstream branches in the pull requests."
msgstr ""

# c7389f1264d041c3a7a6885b8b2e5c9a
#: ../../internals/contributing/committing-code.txt:91
msgid ""
"Tests should pass and docs should build after each commit. Neither the tests "
"nor the docs should emit warnings."
msgstr ""

#: ../../internals/contributing/committing-code.txt:94
msgid ""
"Trivial and small patches usually are best done in one commit. Medium to "
"large work may be split into multiple commits if it makes sense."
msgstr ""

# 5ab79c3cf75147b1902a1a044e1fb65f
#: ../../internals/contributing/committing-code.txt:97
msgid ""
"Practicality beats purity, so it is up to each committer to decide how much "
"history mangling to do for a pull request. The main points are engaging the "
"community, getting work done, and having a usable commit history."
msgstr ""

# 2b0ca928f6d44610ac41594ad61415f4
#: ../../internals/contributing/committing-code.txt:104
msgid "Committing guidelines"
msgstr ""

# d2427d7d01f746ed9b757621067bae64
#: ../../internals/contributing/committing-code.txt:106
msgid ""
"In addition, please follow the following guidelines when committing code to "
"Django's Git repository:"
msgstr ""

# 1cb0b0d6247748dd9a491d20c587d7f1
#: ../../internals/contributing/committing-code.txt:109
msgid ""
"Never change the published history of django/django branches! **Never force- "
"push your changes to django/django.** If you absolutely must (for security "
"reasons for example) first discuss the situation with the core team."
msgstr ""

# 21dec1aa618e4efd98fc2c1819c3b2ca
#: ../../internals/contributing/committing-code.txt:113
msgid ""
"For any medium-to-big changes, where \"medium-to-big\" is according to your "
"judgment, please bring things up on the |django-developers| mailing list "
"before making the change."
msgstr ""

#: ../../internals/contributing/committing-code.txt:117
msgid ""
"If you bring something up on |django-developers| and nobody responds, please "
"don't take that to mean your idea is great and should be implemented "
"immediately because nobody contested it. Django's core developers don't have "
"a lot of time to read mailing-list discussions immediately, so you may have "
"to wait a couple of days before getting a response."
msgstr ""

# 247c62f78d564696b63248d860a460f7
#: ../../internals/contributing/committing-code.txt:124
msgid "Write detailed commit messages in the past tense, not present tense."
msgstr ""

# d65e2a6d11c844aeb19a8006f9d2999d
#: ../../internals/contributing/committing-code.txt:126
msgid "Good: \"Fixed Unicode bug in RSS API.\""
msgstr ""

# b95032481a4c4f488beae40876a88fca
#: ../../internals/contributing/committing-code.txt:127
msgid "Bad: \"Fixes Unicode bug in RSS API.\""
msgstr ""

# 0e2c0e144e4344909a04833a4380f815
#: ../../internals/contributing/committing-code.txt:128
msgid "Bad: \"Fixing Unicode bug in RSS API.\""
msgstr ""

# 07a43097e5a442b6a4e69c60d732c427
#: ../../internals/contributing/committing-code.txt:130
msgid ""
"The commit message should be in lines of 72 chars maximum. There should be a "
"subject line, separated by a blank line and then paragraphs of 72 char "
"lines. The limits are soft. For the subject line, shorter is better. In the "
"body of the commit message more detail is better than less::"
msgstr ""

# 22a326fce45a4c289c096074f1db48c9
#: ../../internals/contributing/committing-code.txt:141
msgid ""
"If the patch wasn't a pull request, you should credit the contributors in "
"the commit message: \"Thanks A for report, B for the patch and C for the "
"review.\""
msgstr ""

# 44633fb468e14eb7ab1575fc0dfff20c
#: ../../internals/contributing/committing-code.txt:145
msgid ""
"For commits to a branch, prefix the commit message with the branch name. For "
"example: \"[1.4.x] Fixed #xxxxx -- Added support for mind reading.\""
msgstr ""

#: ../../internals/contributing/committing-code.txt:148
msgid ""
"Limit commits to the most granular change that makes sense. This means, use "
"frequent small commits rather than infrequent large commits. For example, if "
"implementing feature X requires a small change to library Y, first commit "
"the change to library Y, then commit feature X in a separate commit. This "
"goes a *long way* in helping all Django core developers follow your changes."
msgstr ""

# 1ee285ad4aad4990a0b93e8aed243a3f
#: ../../internals/contributing/committing-code.txt:155
msgid ""
"Separate bug fixes from feature changes. Bugfixes may need to be backported "
"to the stable branch, according to the :ref:`backwards-compatibility policy "
"<backwards-compatibility-policy>`."
msgstr ""

# 5aec3e81e68e470bb6d7169080139e84
#: ../../internals/contributing/committing-code.txt:159
msgid ""
"If your commit closes a ticket in the Django `ticket tracker`_, begin your "
"commit message with the text \"Fixed #xxxxx\", where \"xxxxx\" is the number "
"of the ticket your commit fixes. Example: \"Fixed #123 -- Added whizbang "
"feature.\". We've rigged Trac so that any commit message in that format will "
"automatically close the referenced ticket and post a comment to it with the "
"full commit message."
msgstr ""

# 1e1fb26b586a40b59b87cb44008e04ea
#: ../../internals/contributing/committing-code.txt:166
msgid ""
"If your commit closes a ticket and is in a branch, use the branch name "
"first, then the \"Fixed #xxxxx.\" For example: \"[1.4.x] Fixed #123 -- Added "
"whizbang feature.\""
msgstr ""

# ceb33e0350154aeb868370294f70cfab
#: ../../internals/contributing/committing-code.txt:170
msgid "For the curious, we're using a `Trac plugin`_ for this."
msgstr ""

# 38bc2396de774df7b3144b830f3bd842
#: ../../internals/contributing/committing-code.txt:174
msgid ""
"Note that the Trac integration doesn't know anything about pull requests. So "
"if you try to close a pull request with the phrase \"closes #400\" in your "
"commit message, GitHub will close the pull request, but the Trac plugin will "
"also close the same numbered ticket in Trac."
msgstr ""

# 5229a07c217b4165b65f2c5fce7ffba0
#: ../../internals/contributing/committing-code.txt:181
msgid ""
"If your commit references a ticket in the Django `ticket tracker`_ but does "
"*not* close the ticket, include the phrase \"Refs #xxxxx\", where \"xxxxx\" "
"is the number of the ticket your commit references. This will automatically "
"post a comment to the appropriate ticket."
msgstr ""

# 7503bf64098548ab8ff16f971fa023f5
#: ../../internals/contributing/committing-code.txt:186
msgid "Write commit messages for backports using this pattern::"
msgstr ""

# a667ce96ffc646a8a805a2b5c67d8bf1
#: ../../internals/contributing/committing-code.txt:192
msgid "For example::"
msgstr ""

#: ../../internals/contributing/committing-code.txt:198
msgid ""
"There's a `script on the wiki <https://code.djangoproject.com/wiki/"
"CommitterTips#AutomatingBackports>`_ to automate this."
msgstr ""

# 5af1cb3de5ef43dd8243f2bca274bb86
#: ../../internals/contributing/committing-code.txt:203
msgid "Reverting commits"
msgstr ""

# b849f4a9d1e24a58995b773e921235fe
#: ../../internals/contributing/committing-code.txt:205
msgid "Nobody's perfect; mistakes will be committed."
msgstr ""

# 36615019a7bd4850abbb6932d8099bd7
#: ../../internals/contributing/committing-code.txt:207
msgid ""
"But try very hard to ensure that mistakes don't happen. Just because we have "
"a reversion policy doesn't relax your responsibility to aim for the highest "
"quality possible. Really: double-check your work, or have it checked by "
"another committer, **before** you commit it in the first place!"
msgstr ""

# 718cc01aae8341cfa4ac9c3bd591d445
#: ../../internals/contributing/committing-code.txt:212
msgid "When a mistaken commit is discovered, please follow these guidelines:"
msgstr ""

# 39d4ecb32d0d4292a4ec184510e09ae0
#: ../../internals/contributing/committing-code.txt:214
msgid "If possible, have the original author revert their own commit."
msgstr ""

# b285af408191428086a1e21be3135c2f
#: ../../internals/contributing/committing-code.txt:216
msgid ""
"Don't revert another author's changes without permission from the original "
"author."
msgstr ""

# 0b5ca603fc7f4960833f68b44598dda3
#: ../../internals/contributing/committing-code.txt:219
msgid ""
"Use git revert -- this will make a reverse commit, but the original commit "
"will still be part of the commit history."
msgstr ""

#: ../../internals/contributing/committing-code.txt:222
msgid ""
"If the original author can't be reached (within a reasonable amount of time "
"-- a day or so) and the problem is severe -- crashing bug, major test "
"failures, etc. -- then ask for objections on the |django-developers| mailing "
"list then revert if there are none."
msgstr ""

# 3690ad8a23494376bcad020b7932da27
#: ../../internals/contributing/committing-code.txt:227
msgid ""
"If the problem is small (a feature commit after feature freeze, say), wait "
"it out."
msgstr ""

# eb3a72ecaa2a496d90afc13dc56f45ef
#: ../../internals/contributing/committing-code.txt:230
msgid ""
"If there's a disagreement between the committer and the reverter-to-be then "
"try to work it out on the |django-developers| mailing list. If an agreement "
"can't be reached then it should be put to a vote."
msgstr ""

# 6155771f0e6b4e4d8441bf38b614cf75
#: ../../internals/contributing/committing-code.txt:235
msgid ""
"If the commit introduced a confirmed, disclosed security vulnerability then "
"the commit may be reverted immediately without permission from anyone."
msgstr ""

# 066a612e99fe4993b7e7ffd8a2021cb4
#: ../../internals/contributing/committing-code.txt:239
msgid ""
"The release branch maintainer may back out commits to the release branch "
"without permission if the commit breaks the release branch."
msgstr ""

# 916cf7ba2e0a41f198df422b02a2dae9
#: ../../internals/contributing/committing-code.txt:242
msgid ""
"If you mistakenly push a topic branch to django/django, just delete it. For "
"instance, if you did: ``git push upstream feature_antigravity``, just do a "
"reverse push: ``git push upstream :feature_antigravity``."
msgstr ""
