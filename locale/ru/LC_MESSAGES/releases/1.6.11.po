# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2015-03-19 15:06+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../releases/1.6.11.txt:3
msgid "Django 1.6.11 release notes"
msgstr ""

#: ../../releases/1.6.11.txt:5
msgid "*March 18, 2015*"
msgstr ""

#: ../../releases/1.6.11.txt:7
msgid "Django 1.6.11 fixes two security issues in 1.6.10."
msgstr ""

#: ../../releases/1.6.11.txt:10
msgid "Denial-of-service possibility with ``strip_tags()``"
msgstr ""

#: ../../releases/1.6.11.txt:12
msgid ""
"Last year :func:`~django.utils.html.strip_tags`  was changed to work "
"iteratively. The problem is that the size of the input it's processing can "
"increase on each iteration which results in an infinite loop in "
"``strip_tags()``. This issue only affects versions of Python that haven't "
"received  `a bugfix in HTMLParser <https://bugs.python.org/issue20288>`_; "
"namely Python < 2.7.7 and 3.3.5. Some operating system vendors have also "
"backported the fix for the Python bug into their packages of earlier "
"versions."
msgstr ""

#: ../../releases/1.6.11.txt:20
msgid ""
"To remedy this issue, ``strip_tags()`` will now return the original input if "
"it detects the length of the string it's processing increases. Remember that "
"absolutely NO guarantee is provided about the results of ``strip_tags()`` "
"being HTML safe. So NEVER mark safe the result of a ``strip_tags()`` call "
"without escaping it first, for example with :func:`~django.utils.html."
"escape`."
msgstr ""

#: ../../releases/1.6.11.txt:27
msgid "Mitigated possible XSS attack via user-supplied redirect URLs"
msgstr ""

#: ../../releases/1.6.11.txt:29
msgid ""
"Django relies on user input in some cases (e.g. ``django.contrib.auth.views."
"login()`` and :doc:`i18n </topics/i18n/index>`) to redirect the user to an "
"\"on success\" URL. The security checks for these redirects (namely ``django."
"utils.http.is_safe_url()``) accepted URLs with leading control characters "
"and so considered URLs like ``\\x08javascript:...`` safe. This issue doesn't "
"affect Django currently, since we only put this URL into the ``Location`` "
"response header and browsers seem to ignore JavaScript there. Browsers we "
"tested also treat URLs prefixed with control characters such as ``%08//"
"example.com`` as relative paths so redirection to an unsafe target isn't a "
"problem either."
msgstr ""

#: ../../releases/1.6.11.txt:40
msgid ""
"However, if a developer relies on ``is_safe_url()`` to provide safe redirect "
"targets and puts such a URL into a link, they could suffer from an XSS "
"attack as some browsers such as Google Chrome ignore control characters at "
"the start of a URL in an anchor ``href``."
msgstr ""
