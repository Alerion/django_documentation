# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-03 16:48+0300\n"
"PO-Revision-Date: 2018-08-03 16:48+0300\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../releases/2.1.txt:3
msgid "Django 2.1 release notes"
msgstr ""

#: ../../releases/2.1.txt:5
msgid "*August 1, 2018*"
msgstr ""

#: ../../releases/2.1.txt:7
msgid "Welcome to Django 2.1!"
msgstr ""

#: ../../releases/2.1.txt:9
msgid ""
"These release notes cover the :ref:`new features <whats-new-2.1>`, as well "
"as some :ref:`backwards incompatible changes <backwards-incompatible-2.1>` "
"you'll want to be aware of when upgrading from Django 2.0 or earlier. We've :"
"ref:`dropped some features<removed-features-2.1>` that have reached the end "
"of their deprecation cycle, and we've :ref:`begun the deprecation process "
"for some features <deprecated-features-2.1>`."
msgstr ""

#: ../../releases/2.1.txt:16
msgid ""
"See the :doc:`/howto/upgrade-version` guide if you're updating an existing "
"project."
msgstr ""

#: ../../releases/2.1.txt:20
msgid "Python compatibility"
msgstr ""

#: ../../releases/2.1.txt:22
msgid ""
"Django 2.1 supports Python 3.5, 3.6, and 3.7. Django 2.0 is the last version "
"to support Python 3.4.  We **highly recommend** and only officially support "
"the latest release of each series."
msgstr ""

#: ../../releases/2.1.txt:29
msgid "What's new in Django 2.1"
msgstr ""

#: ../../releases/2.1.txt:32
msgid "Model \"view\" permission"
msgstr ""

#: ../../releases/2.1.txt:34
msgid ""
"A \"view\" permission is added to the model :attr:`Meta.default_permissions "
"<django.db.models.Options.default_permissions>`. The new permissions will be "
"created automatically when running :djadmin:`migrate`."
msgstr ""

#: ../../releases/2.1.txt:38
msgid ""
"This allows giving users read-only access to models in the admin. :meth:`."
"ModelAdmin.has_view_permission` is new. The implementation is backwards "
"compatible in that there isn't a need to assign the \"view\" permission to "
"allow users who have the \"change\" permission to edit objects."
msgstr ""

#: ../../releases/2.1.txt:43
msgid ""
"There are a couple of :ref:`backwards incompatible considerations "
"<view_permission_backwards_incompatible>`."
msgstr ""

#: ../../releases/2.1.txt:47
msgid "Minor features"
msgstr ""

#: ../../releases/2.1.txt:50
msgid ":mod:`django.contrib.admin`"
msgstr ""

#: ../../releases/2.1.txt:52
msgid ""
":attr:`.ModelAdmin.search_fields` now accepts any lookup such as "
"``field__exact``."
msgstr ""

#: ../../releases/2.1.txt:55
msgid "jQuery is upgraded from version 2.2.3 to 3.3.1."
msgstr ""

#: ../../releases/2.1.txt:57
msgid ""
"The new :meth:`.ModelAdmin.delete_queryset` method allows customizing the "
"deletion process of the \"delete selected objects\" action."
msgstr ""

#: ../../releases/2.1.txt:60
msgid ""
"You can now :ref:`override the default admin site <overriding-default-admin-"
"site>`."
msgstr ""

#: ../../releases/2.1.txt:63
msgid ""
"The new :attr:`.ModelAdmin.sortable_by` attribute and :meth:`.ModelAdmin."
"get_sortable_by` method allow limiting the columns that can be sorted in the "
"change list page."
msgstr ""

#: ../../releases/2.1.txt:67
msgid ""
"The ``admin_order_field`` attribute for elements in :attr:`.ModelAdmin."
"list_display` may now be a query expression."
msgstr ""

#: ../../releases/2.1.txt:70
msgid ""
"The new :meth:`.ModelAdmin.get_deleted_objects()` method allows customizing "
"the deletion process of the delete view and the \"delete selected\" action."
msgstr ""

#: ../../releases/2.1.txt:73
msgid ""
"The ``actions.html``, ``change_list_results.html``, ``date_hierarchy.html``, "
"``pagination.html``, ``prepopulated_fields_js.html``, ``search_form.html``, "
"and ``submit_line.html`` templates can now be :ref:`overridden per app or "
"per model <admin-templates-overridden-per-app-or-model>` (besides overridden "
"globally)."
msgstr ""

#: ../../releases/2.1.txt:79
msgid ""
"The admin change list and change form object tools can now be :ref:"
"`overridden per app, per model, or globally <admin-templates-overridden-per-"
"app-or-model>` with ``change_list_object_tools.html`` and "
"``change_form_object_tools.html`` templates."
msgstr ""

#: ../../releases/2.1.txt:84
msgid ""
":meth:`.InlineModelAdmin.has_add_permission` is now passed the parent object "
"as the second positional argument, ``obj``."
msgstr ""

#: ../../releases/2.1.txt:87
msgid ""
"Admin actions may now :ref:`specify permissions <admin-action-permissions>` "
"to limit their availability to certain users."
msgstr ""

#: ../../releases/2.1.txt:91
msgid ":mod:`django.contrib.auth`"
msgstr ""

#: ../../releases/2.1.txt:93
msgid ""
":djadmin:`createsuperuser` now gives a prompt to allow bypassing the :"
"setting:`AUTH_PASSWORD_VALIDATORS` checks."
msgstr ""

#: ../../releases/2.1.txt:96
msgid ""
":class:`~django.contrib.auth.forms.UserCreationForm` and :class:`~django."
"contrib.auth.forms.UserChangeForm` no longer need to be rewritten for a "
"custom user model."
msgstr ""

#: ../../releases/2.1.txt:101 ../../releases/2.1.txt:257
msgid ":mod:`django.contrib.gis`"
msgstr ""

#: ../../releases/2.1.txt:103
msgid ""
"The new :meth:`.GEOSGeometry.buffer_with_style` method is a version of :meth:"
"`~.GEOSGeometry.buffer` that allows customizing the style of the buffer."
msgstr ""

#: ../../releases/2.1.txt:107
msgid ""
":class:`~django.contrib.gis.forms.widgets.OpenLayersWidget` is now based on "
"OpenLayers 4.6.5 (previously 3.20.1)."
msgstr ""

#: ../../releases/2.1.txt:111
msgid ":mod:`django.contrib.sessions`"
msgstr ""

#: ../../releases/2.1.txt:113
msgid ""
"Added the :setting:`SESSION_COOKIE_SAMESITE` setting to set the ``SameSite`` "
"cookie flag on session cookies."
msgstr ""

#: ../../releases/2.1.txt:117
msgid "Cache"
msgstr ""

#: ../../releases/2.1.txt:119
msgid ""
"The :ref:`local-memory cache backend <local-memory-caching>` now uses a "
"least-recently-used (LRU) culling strategy rather than a pseudo-random one."
msgstr ""

#: ../../releases/2.1.txt:122
msgid ""
"The new ``touch()`` method of the :ref:`low-level cache API <low-level-cache-"
"api>` updates the timeout of cache keys."
msgstr ""

#: ../../releases/2.1.txt:126
msgid "CSRF"
msgstr ""

#: ../../releases/2.1.txt:128
msgid ""
"Added the :setting:`CSRF_COOKIE_SAMESITE` setting to set the ``SameSite`` "
"cookie flag on CSRF cookies."
msgstr ""

#: ../../releases/2.1.txt:132
msgid "Forms"
msgstr ""

#: ../../releases/2.1.txt:134
msgid ""
"The widget for ``ImageField`` now renders with the HTML attribute ``accept="
"\"image/*\"``."
msgstr ""

#: ../../releases/2.1.txt:138
msgid "Internationalization"
msgstr ""

#: ../../releases/2.1.txt:140
msgid ""
"Added the :meth:`~django.utils.translation.get_supported_language_variant` "
"function."
msgstr ""

#: ../../releases/2.1.txt:143
msgid ""
"Untranslated strings for territorial language variants now use the "
"translations of the generic language. For example, untranslated ``pt_BR`` "
"strings use ``pt`` translations."
msgstr ""

#: ../../releases/2.1.txt:148
msgid "Management Commands"
msgstr ""

#: ../../releases/2.1.txt:150
msgid ""
"The new :option:`inspectdb --include-views` option allows creating models "
"for database views."
msgstr ""

#: ../../releases/2.1.txt:153
msgid ""
"The :class:`~django.core.management.BaseCommand` class now uses a custom "
"help formatter so that the standard options like ``--verbosity`` or ``--"
"settings`` appear last in the help output, giving a more prominent position "
"to subclassed command's options."
msgstr ""

#: ../../releases/2.1.txt:159
msgid "Migrations"
msgstr ""

#: ../../releases/2.1.txt:161
msgid "Added support for serialization of ``functools.partialmethod`` objects."
msgstr ""

#: ../../releases/2.1.txt:163
msgid ""
"To support frozen environments, migrations may be loaded from ``.pyc`` files."
msgstr ""

#: ../../releases/2.1.txt:166
msgid "Models"
msgstr ""

#: ../../releases/2.1.txt:168
msgid "Models can now use ``__init_subclass__()`` from :pep:`487`."
msgstr ""

#: ../../releases/2.1.txt:170
msgid ""
"A ``BinaryField`` may now be set to ``editable=True`` if you wish to include "
"it in model forms."
msgstr ""

#: ../../releases/2.1.txt:173
msgid ""
"A number of new text database functions are added: :class:`~django.db.models."
"functions.Chr`, :class:`~django.db.models.functions.Left`, :class:`~django."
"db.models.functions.LPad`, :class:`~django.db.models.functions.LTrim`, :"
"class:`~django.db.models.functions.Ord`, :class:`~django.db.models.functions."
"Repeat`, :class:`~django.db.models.functions.Replace`, :class:`~django.db."
"models.functions.Right`, :class:`~django.db.models.functions.RPad`, :class:"
"`~django.db.models.functions.RTrim`, and :class:`~django.db.models.functions."
"Trim`."
msgstr ""

#: ../../releases/2.1.txt:186
msgid ""
"The new :class:`~django.db.models.functions.TruncWeek` function truncates :"
"class:`~django.db.models.DateField` and :class:`~django.db.models."
"DateTimeField` to the Monday of a week."
msgstr ""

#: ../../releases/2.1.txt:190
msgid "Query expressions can now be negated using a minus sign."
msgstr ""

#: ../../releases/2.1.txt:192
msgid ""
":meth:`.QuerySet.order_by` and :meth:`distinct(*fields) <.QuerySet."
"distinct>` now support using field transforms."
msgstr ""

#: ../../releases/2.1.txt:195
msgid ""
":class:`~django.db.models.BooleanField` can now be ``null=True``. This is "
"encouraged instead of :class:`~django.db.models.NullBooleanField`, which "
"will likely be deprecated in the future."
msgstr ""

#: ../../releases/2.1.txt:199
msgid ""
"The new :meth:`.QuerySet.explain` method displays the database's execution "
"plan of a queryset's query."
msgstr ""

#: ../../releases/2.1.txt:202
msgid ":meth:`.QuerySet.raw` now supports :meth:`~.QuerySet.prefetch_related`."
msgstr ""

#: ../../releases/2.1.txt:205
msgid "Requests and Responses"
msgstr ""

#: ../../releases/2.1.txt:207
msgid "Added :meth:`.HttpRequest.get_full_path_info`."
msgstr ""

#: ../../releases/2.1.txt:209
msgid ""
"Added the ``samesite`` argument to :meth:`.HttpResponse.set_cookie` to allow "
"setting the ``SameSite`` cookie flag."
msgstr ""

#: ../../releases/2.1.txt:212
msgid ""
"The new ``as_attachment`` argument for :class:`~django.http.FileResponse` "
"sets the ``Content-Disposition`` header to make the browser ask if the user "
"wants to download the file. ``FileResponse`` also tries to set the ``Content-"
"Type`` and ``Content-Length`` headers where appropriate."
msgstr ""

#: ../../releases/2.1.txt:218
msgid "Templates"
msgstr ""

#: ../../releases/2.1.txt:220
msgid ""
"The new :tfilter:`json_script` filter safely outputs a Python object as "
"JSON, wrapped in a ``<script>`` tag, ready for use with JavaScript."
msgstr ""

#: ../../releases/2.1.txt:224
msgid "Tests"
msgstr ""

#: ../../releases/2.1.txt:226
msgid ""
"Added test :class:`~django.test.Client` support for 307 and 308 redirects."
msgstr ""

#: ../../releases/2.1.txt:228
msgid ""
"The test :class:`~django.test.Client` now serializes a request data "
"dictionary as JSON if ``content_type='application/json'``. You can customize "
"the JSON encoder with test client's ``json_encoder`` parameter."
msgstr ""

#: ../../releases/2.1.txt:232
msgid ""
"The new :meth:`.SimpleTestCase.assertWarnsMessage` method is a simpler "
"version of :meth:`~unittest.TestCase.assertWarnsRegex`."
msgstr ""

#: ../../releases/2.1.txt:238
msgid "Backwards incompatible changes in 2.1"
msgstr ""

#: ../../releases/2.1.txt:241
msgid "Database backend API"
msgstr ""

#: ../../releases/2.1.txt:243
msgid ""
"To adhere to :pep:`249`, exceptions where a database doesn't support a "
"feature are changed from :exc:`NotImplementedError` to :exc:`django.db."
"NotSupportedError`."
msgstr ""

#: ../../releases/2.1.txt:247
msgid ""
"Renamed the ``allow_sliced_subqueries`` database feature flag to "
"``allow_sliced_subqueries_with_in``."
msgstr ""

#: ../../releases/2.1.txt:250
msgid ""
"``DatabaseOperations.distinct_sql()`` now requires an additional ``params`` "
"argument and returns a tuple of SQL and parameters instead of a SQL string."
msgstr ""

#: ../../releases/2.1.txt:253
msgid ""
"``DatabaseFeatures.introspected_boolean_field_type`` is changed from a "
"method to a property."
msgstr ""

#: ../../releases/2.1.txt:259
msgid "Support for SpatiaLite 4.0 is removed."
msgstr ""

#: ../../releases/2.1.txt:262
msgid "Dropped support for MySQL 5.5"
msgstr ""

#: ../../releases/2.1.txt:264
msgid ""
"The end of upstream support for MySQL 5.5 is December 2018. Django 2.1 "
"supports MySQL 5.6 and higher."
msgstr ""

#: ../../releases/2.1.txt:268
msgid "Dropped support for PostgreSQL 9.3"
msgstr ""

#: ../../releases/2.1.txt:270
msgid ""
"The end of upstream support for PostgreSQL 9.3 is September 2018. Django 2.1 "
"supports PostgreSQL 9.4 and higher."
msgstr ""

#: ../../releases/2.1.txt:274
msgid ""
"Removed ``BCryptPasswordHasher`` from the default ``PASSWORD_HASHERS`` "
"setting"
msgstr ""

#: ../../releases/2.1.txt:276
msgid ""
"If you used bcrypt with Django 1.4 or 1.5 (before "
"``BCryptSHA256PasswordHasher`` was added in Django 1.6), you might have some "
"passwords that use the ``BCryptPasswordHasher`` hasher."
msgstr ""

#: ../../releases/2.1.txt:280
msgid "You can check if that's the case like this::"
msgstr ""

#: ../../releases/2.1.txt:286
msgid ""
"If you want to continue to allow those passwords to be used, you'll have to "
"define the :setting:`PASSWORD_HASHERS` setting (if you don't already) and "
"include ``'django.contrib.auth.hashers.BCryptPasswordHasher'``."
msgstr ""

#: ../../releases/2.1.txt:291
msgid "Moved ``wrap_label`` widget template context variable"
msgstr ""

#: ../../releases/2.1.txt:293
msgid ""
"To fix the lack of ``<label>`` when using ``RadioSelect`` and "
"``CheckboxSelectMultiple`` with ``MultiWidget``, the ``wrap_label`` context "
"variable now appears as an attribute of each option. For example, in a "
"custom ``input_option.html`` template, change ``{% if wrap_label %}`` to "
"``{% if widget.wrap_label %}``."
msgstr ""

#: ../../releases/2.1.txt:300
msgid "``SameSite`` cookies"
msgstr ""

#: ../../releases/2.1.txt:302
msgid ""
"The cookies used for ``django.contrib.sessions``, ``django.contrib."
"messages``, and Django's CSRF protection now set the ``SameSite`` flag to "
"``Lax`` by default. Browsers that respect this flag won't send these cookies "
"on cross-origin requests. If you rely on the old behavior, set the :setting:"
"`SESSION_COOKIE_SAMESITE` and/or :setting:`CSRF_COOKIE_SAMESITE` setting to "
"``None``."
msgstr ""

#: ../../releases/2.1.txt:312
msgid "Considerations for the new model \"view\" permission"
msgstr ""

#: ../../releases/2.1.txt:315
msgid "Custom admin forms need to take the view-only case into account"
msgstr ""

#: ../../releases/2.1.txt:317
msgid ""
"With the new \"view\" permission, existing custom admin forms may raise "
"errors when a user doesn't have the change permission because the form might "
"access nonexistent fields. Fix this by overriding :meth:`.ModelAdmin."
"get_form` and checking if the user has the \"change\" permissions and "
"returning the default form if not::"
msgstr ""

#: ../../releases/2.1.txt:330
msgid "New default view permission could allow unwanted access to admin views"
msgstr ""

#: ../../releases/2.1.txt:332
msgid ""
"If you have a custom permission with a codename of the form "
"``can_view_<modelname>``, the new view permission handling in the admin will "
"allow view access to the changelist and detail pages for those models. If "
"this is unwanted, you must change your custom permission codename."
msgstr ""

#: ../../releases/2.1.txt:338 ../../releases/2.1.txt:402
msgid "Miscellaneous"
msgstr ""

#: ../../releases/2.1.txt:340
msgid ""
"The minimum supported version of ``mysqlclient`` is increased from 1.3.3 to "
"1.3.7."
msgstr ""

#: ../../releases/2.1.txt:343
msgid ""
"The date format of ``Set-Cookie``'s ``Expires`` directive is changed to "
"follow :rfc:`7231#section-7.1.1.1` instead of Netscape's cookie standard. "
"Hyphens present in dates like ``Tue, 25-Dec-2018 22:26:13 GMT`` are removed. "
"This change should be merely cosmetic except perhaps for antiquated browsers "
"that don't parse the new format."
msgstr ""

#: ../../releases/2.1.txt:349
msgid ""
"``allowed_hosts`` is now a required argument of private API ``django.utils."
"http.is_safe_url()``."
msgstr ""

#: ../../releases/2.1.txt:352
msgid ""
"The ``multiple`` attribute rendered by the :class:`~django.forms."
"SelectMultiple` widget now uses HTML5 boolean syntax rather than XHTML's "
"``multiple=\"multiple\"``."
msgstr ""

#: ../../releases/2.1.txt:356
msgid ""
"HTML rendered by form widgets no longer includes a closing slash on void "
"elements, e.g. ``<br>``. This is incompatible within XHTML, although some "
"widgets already used aspects of HTML5 such as boolean attributes."
msgstr ""

#: ../../releases/2.1.txt:360
msgid ""
"The value of :class:`~django.forms.SelectDateWidget`'s empty options is "
"changed from 0 to an empty string, which mainly may require some adjustments "
"in tests that compare HTML."
msgstr ""

#: ../../releases/2.1.txt:364
msgid ""
":meth:`.User.has_usable_password` and the :func:`~django.contrib.auth."
"hashers.is_password_usable` function no longer return ``False`` if the "
"password is ``None`` or an empty string, or if the password uses a hasher "
"that's not in the :setting:`PASSWORD_HASHERS` setting. This undocumented "
"behavior was a regression in Django 1.6 and prevented users with such "
"passwords from requesting a password reset. Audit your code to confirm that "
"your usage of these APIs don't rely on the old behavior."
msgstr ""

#: ../../releases/2.1.txt:372
msgid ""
"Since migrations are now loaded from ``.pyc`` files, you might need to "
"delete them if you're working in a mixed Python 2 and Python 3 environment."
msgstr ""

#: ../../releases/2.1.txt:375
msgid ""
"Using ``None`` as a :class:`~django.contrib.postgres.fields.JSONField` "
"lookup value now matches objects that have the specified key and a null "
"value rather than objects that don't have the key."
msgstr ""

#: ../../releases/2.1.txt:379
msgid ""
"The admin CSS class ``field-box`` is renamed to ``fieldBox`` to prevent "
"conflicts with the class given to model fields named \"box\"."
msgstr ""

#: ../../releases/2.1.txt:382
msgid ""
"``QuerySet.raw()`` now caches its results like regular querysets. Use "
"``iterator()`` if you don't want caching."
msgstr ""

#: ../../releases/2.1.txt:385
msgid ""
"The database router :meth:`allow_relation` method is called in more cases. "
"Improperly written routers may need to be updated accordingly."
msgstr ""

#: ../../releases/2.1.txt:388
msgid ""
"Translations are no longer deactivated before running management commands. "
"If your custom command requires translations to be deactivated (for example, "
"to insert untranslated content into the database), use the new :ref:"
"`@no_translations decorator <management-commands-and-locales>`."
msgstr ""

#: ../../releases/2.1.txt:393
msgid ""
"Management commands no longer allow the abbreviated forms of the ``--"
"settings`` and ``--pythonpath`` arguments."
msgstr ""

#: ../../releases/2.1.txt:399
msgid "Features deprecated in 2.1"
msgstr ""

#: ../../releases/2.1.txt:404
msgid ""
"The ``ForceRHR`` GIS function is deprecated in favor of the new :class:"
"`~django.contrib.gis.db.models.functions.ForcePolygonCW` function."
msgstr ""

#: ../../releases/2.1.txt:407
msgid ""
"``django.utils.http.cookie_date()`` is deprecated in favor of :func:`~django."
"utils.http.http_date`, which follows the format of the latest RFC."
msgstr ""

#: ../../releases/2.1.txt:411
msgid ""
"``{% load staticfiles %}`` and ``{% load admin_static %}`` are deprecated in "
"favor of ``{% load static %}``, which works the same."
msgstr ""

#: ../../releases/2.1.txt:414
msgid ""
"``django.contrib.staticfiles.templatetags.static()`` is deprecated in favor "
"of ``django.templatetags.static.static()``."
msgstr ""

#: ../../releases/2.1.txt:417
msgid ""
"Support for :meth:`.InlineModelAdmin.has_add_permission` methods that don't "
"accept ``obj`` as the second positional argument will be removed in Django "
"3.0."
msgstr ""

#: ../../releases/2.1.txt:424
msgid "Features removed in 2.1"
msgstr ""

#: ../../releases/2.1.txt:426
msgid ""
"These features have reached the end of their deprecation cycle and are "
"removed in Django 2.1. See :ref:`deprecated-features-1.11` for details, "
"including how to remove usage of these features."
msgstr ""

#: ../../releases/2.1.txt:430
msgid ""
"``contrib.auth.views.login()``, ``logout()``, ``password_change()``, "
"``password_change_done()``, ``password_reset()``, ``password_reset_done()``, "
"``password_reset_confirm()``, and ``password_reset_complete()`` are removed."
msgstr ""

#: ../../releases/2.1.txt:434
msgid ""
"The ``extra_context`` parameter of ``contrib.auth.views."
"logout_then_login()`` is removed."
msgstr ""

#: ../../releases/2.1.txt:437
msgid "``django.test.runner.setup_databases()`` is removed."
msgstr ""

#: ../../releases/2.1.txt:439
msgid "``django.utils.translation.string_concat()`` is removed."
msgstr ""

#: ../../releases/2.1.txt:441
msgid ""
"``django.core.cache.backends.memcached.PyLibMCCache`` no longer supports "
"passing ``pylibmc`` behavior settings as top-level attributes of ``OPTIONS``."
msgstr ""

#: ../../releases/2.1.txt:444
msgid ""
"The ``host`` parameter of ``django.utils.http.is_safe_url()`` is removed."
msgstr ""

#: ../../releases/2.1.txt:446
msgid ""
"Silencing of exceptions raised while rendering the ``{% include %}`` "
"template tag is removed."
msgstr ""

#: ../../releases/2.1.txt:449
msgid "``DatabaseIntrospection.get_indexes()`` is removed."
msgstr ""

#: ../../releases/2.1.txt:451
msgid ""
"The ``authenticate()`` method of authentication backends requires "
"``request`` as the first positional argument."
msgstr ""

#: ../../releases/2.1.txt:454
msgid "The ``django.db.models.permalink()`` decorator is removed."
msgstr ""

#: ../../releases/2.1.txt:456
msgid ""
"The ``USE_ETAGS`` setting is removed. ``CommonMiddleware`` and ``django."
"utils.cache.patch_response_headers()`` no longer set ETags."
msgstr ""

#: ../../releases/2.1.txt:459
msgid "The ``Model._meta.has_auto_field`` attribute is removed."
msgstr ""

#: ../../releases/2.1.txt:461
msgid ""
"``url()``'s support for inline flags in regular expression groups (``(?i)``, "
"``(?L)``, ``(?m)``, ``(?s)``, and ``(?u)``) is removed."
msgstr ""

#: ../../releases/2.1.txt:464
msgid ""
"Support for ``Widget.render()`` methods without the ``renderer`` argument is "
"removed."
msgstr ""
