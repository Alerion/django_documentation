# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2014.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2014-07-11 11:43+0300\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# bd1904310c9143f797ac7583a1a34ff1
#: ../../releases/1.6.5.txt:3
msgid "Django 1.6.5 release notes"
msgstr ""

# 0e9669cd9be5491da293d00fa0b84aef
#: ../../releases/1.6.5.txt:5
msgid "*May 14, 2014*"
msgstr ""

# e2c71b7837de4d669663e6ede8c04cb9
#: ../../releases/1.6.5.txt:7
msgid "Django 1.6.5 fixes two security issues and several bugs in 1.6.4."
msgstr ""

# 6fbdf6d173ca44d9a6f7ce258de97eb1
#: ../../releases/1.6.5.txt:10
msgid ""
"Issue: Caches may incorrectly be allowed to store and serve private data"
msgstr ""

# 408e8c39881b4b1e91d905f492b88aad
#: ../../releases/1.6.5.txt:12
msgid ""
"In certain situations, Django may allow caches to store private data related "
"to a particular session and then serve that data to requests with a "
"different session, or no session at all. This can lead to information "
"disclosure and can be a vector for cache poisoning."
msgstr ""

# 96f38ff0100048ee8c98981769d3e997
#: ../../releases/1.6.5.txt:17
msgid ""
"When using Django sessions, Django will set a ``Vary: Cookie`` header to "
"ensure caches do not serve cached data to requests from other sessions. "
"However, older versions of Internet Explorer (most likely only Internet "
"Explorer 6, and Internet Explorer 7 if run on Windows XP or Windows Server "
"2003) are unable to handle the ``Vary`` header in combination with many "
"content types. Therefore, Django would remove the header if the request was "
"made by Internet Explorer."
msgstr ""

# 95e1cd81edd04d438137e40a953515b2
#: ../../releases/1.6.5.txt:25
msgid ""
"To remedy this, the special behavior for these older Internet Explorer "
"versions has been removed, and the ``Vary`` header is no longer stripped "
"from the response. In addition, modifications to the ``Cache-Control`` "
"header for all Internet Explorer requests with a ``Content-Disposition`` "
"header have also been removed as they were found to have similar issues."
msgstr ""

# 47ef81e68e954893ba184a7920e03267
#: ../../releases/1.6.5.txt:32
msgid "Issue: Malformed redirect URLs from user input not correctly validated"
msgstr ""

# f2e596e0ab4748f98e9dcd9ea152a466
#: ../../releases/1.6.5.txt:34
msgid ""
"The validation for redirects did not correctly validate some malformed URLs, "
"which are accepted by some browsers. This allows a user to be redirected to "
"an unsafe URL unexpectedly."
msgstr ""

#: ../../releases/1.6.5.txt:38
msgid ""
"Django relies on user input in some cases (e.g. ``django.contrib.auth.views."
"login()``, ``django.contrib.comments``, and :doc:`i18n </topics/i18n/"
"index>`) to redirect the user to an \"on success\" URL. The security checks "
"for these redirects (namely ``django.utils.http.is_safe_url()``) did not "
"correctly validate some malformed URLs, such as `http:\\\\\\\\\\"
"\\djangoproject.com`, which are accepted by some browsers with more liberal "
"URL parsing."
msgstr ""

# 5b8595ffb4e34bd0998b446f8d83bdf6
#: ../../releases/1.6.5.txt:46
msgid ""
"To remedy this, the validation in ``is_safe_url()`` has been tightened to be "
"able to handle and correctly validate these malformed URLs."
msgstr ""

# 40db57a046fa44f7a70856229f3c2295
#: ../../releases/1.6.5.txt:50
msgid "Bugfixes"
msgstr ""

#: ../../releases/1.6.5.txt:52
msgid ""
"Made the ``year_lookup_bounds_for_datetime_field`` Oracle backend method "
"Python 3 compatible (:ticket:`22551`)."
msgstr ""

#: ../../releases/1.6.5.txt:55
msgid ""
"Fixed ``pgettext_lazy`` crash when receiving bytestring content on Python 2 "
"(:ticket:`22565`)."
msgstr ""

#: ../../releases/1.6.5.txt:58
msgid ""
"Fixed the SQL generated when filtering by a negated ``Q`` object that "
"contains a ``F`` object. (:ticket:`22429`)."
msgstr ""

#: ../../releases/1.6.5.txt:61
msgid ""
"Avoided overwriting data fetched by ``select_related()`` in certain cases "
"which could cause minor performance regressions (:ticket:`22508`)."
msgstr ""
