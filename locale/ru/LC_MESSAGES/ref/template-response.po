# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../ref/template-response.txt:3
msgid "``TemplateResponse`` and ``SimpleTemplateResponse``"
msgstr ""

# 838b894b66254752b8ba528320e45e90
#: ../../ref/template-response.txt:8
msgid ""
"Standard :class:`~django.http.HttpResponse` objects are static structures. "
"They are provided with a block of pre-rendered content at time of "
"construction, and while that content can be modified, it isn't in a form "
"that makes it easy to perform modifications."
msgstr ""

# 3e8d6237d35d4d5da907665d0cd6009a
#: ../../ref/template-response.txt:13
msgid ""
"However, it can sometimes be beneficial to allow decorators or middleware to "
"modify a response *after* it has been constructed by the view. For example, "
"you may want to change the template that is used, or put additional data "
"into the context."
msgstr ""

# dcf67b0da1ce4d3abe27b776aa08e42d
#: ../../ref/template-response.txt:18
msgid ""
"TemplateResponse provides a way to do just that. Unlike basic :class:"
"`~django.http.HttpResponse` objects, TemplateResponse objects retain the "
"details of the template and context that was provided by the view to compute "
"the response. The final output of the response is not computed until it is "
"needed, later in the response process."
msgstr ""

#: ../../ref/template-response.txt:25
msgid "``SimpleTemplateResponse`` objects"
msgstr ""

# 8e7466c879124bb7b463c8c1a6f25acd
#: ../../ref/template-response.txt:30
msgid "Attributes"
msgstr ""

#: ../../ref/template-response.txt:34
msgid ""
"The name of the template to be rendered. Accepts a backend-dependent "
"template object (such as those returned by :func:`~django.template.loader."
"get_template()`), the name of a template, or a list of template names."
msgstr ""

# 1824ffb2e2274795b2464836da798924
#: ../../ref/template-response.txt:39
msgid "Example: ``['foo.html', 'path/to/bar.html']``"
msgstr ""

#: ../../ref/template-response.txt:43
msgid ""
"The context data to be used when rendering the template. It must be a :class:"
"`dict`."
msgstr ""

# 3d6bd91da82b4bbc84335a04b544cf3c
#: ../../ref/template-response.txt:46
msgid "Example: ``{'foo': 123}``"
msgstr ""

# b9a3ef6a8461403ba311f1c8cd2b6739
#: ../../ref/template-response.txt:50
msgid ""
"The current rendered value of the response content, using the current "
"template and context data."
msgstr ""

# df10a49ebb11409cb170a2f802b22b2e
#: ../../ref/template-response.txt:55
msgid "A boolean indicating whether the response content has been rendered."
msgstr ""

# 20f4e8a2577344d390cb66e368dbe832
# 538f99d74cfe45d190ea8d0e56c25099
#: ../../ref/template-response.txt:58 ../../ref/template-response.txt:150
msgid "Methods"
msgstr ""

#: ../../ref/template-response.txt:62
msgid ""
"Instantiates a :class:`~django.template.response.SimpleTemplateResponse` "
"object with the given template, context, content type, HTTP status, and "
"charset."
msgstr ""

#: ../../ref/template-response.txt:69 ../../ref/template-response.txt:164
msgid "``template``"
msgstr ""

#: ../../ref/template-response.txt:67 ../../ref/template-response.txt:162
msgid ""
"A backend-dependent template object (such as those returned by :func:"
"`~django.template.loader.get_template()`), the name of a template, or a list "
"of template names."
msgstr ""

#: ../../ref/template-response.txt:73 ../../ref/template-response.txt:168
msgid "``context``"
msgstr ""

#: ../../ref/template-response.txt:72 ../../ref/template-response.txt:167
msgid ""
"A :class:`dict` of values to add to the template context. By default, this "
"is an empty dictionary."
msgstr ""

#: ../../ref/template-response.txt:79 ../../ref/template-response.txt:174
msgid "``content_type``"
msgstr ""

#: ../../ref/template-response.txt:76 ../../ref/template-response.txt:171
msgid ""
"The value included in the HTTP ``Content-Type`` header, including the MIME "
"type specification and the character set encoding. If ``content_type`` is "
"specified, then its value is used. Otherwise, ``'text/html'`` is used."
msgstr ""

#: ../../ref/template-response.txt:82 ../../ref/template-response.txt:177
msgid "``status``"
msgstr ""

#: ../../ref/template-response.txt:82 ../../ref/template-response.txt:177
msgid "The HTTP status code for the response."
msgstr ""

#: ../../ref/template-response.txt:87 ../../ref/template-response.txt:182
msgid "``charset``"
msgstr ""

#: ../../ref/template-response.txt:85 ../../ref/template-response.txt:180
msgid ""
"The charset in which the response will be encoded. If not given it will be "
"extracted from ``content_type``, and if that is unsuccessful, the :setting:"
"`DEFAULT_CHARSET` setting will be used."
msgstr ""

#: ../../ref/template-response.txt:90 ../../ref/template-response.txt:185
msgid "``using``"
msgstr ""

#: ../../ref/template-response.txt:90 ../../ref/template-response.txt:185
msgid ""
"The :setting:`NAME <TEMPLATES-NAME>` of a template engine to use for loading "
"the template."
msgstr ""

#: ../../ref/template-response.txt:95
msgid ""
"Preprocesses context data that will be used for rendering a template. "
"Accepts a :class:`dict` of context data. By default, returns the same :class:"
"`dict`."
msgstr ""

#: ../../ref/template-response.txt:99
msgid "Override this method in order to customize the context."
msgstr ""

#: ../../ref/template-response.txt:103
msgid ""
"Resolves the template instance to use for rendering. Accepts a backend-"
"dependent template object (such as those returned by :func:`~django.template."
"loader.get_template()`), the name of a template, or a list of template names."
msgstr ""

#: ../../ref/template-response.txt:108
msgid "Returns the backend-dependent template object instance to be rendered."
msgstr ""

#: ../../ref/template-response.txt:110
msgid "Override this method in order to customize template loading."
msgstr ""

# ec0b8d549adb463a82841e22fc4f760c
#: ../../ref/template-response.txt:114
msgid ""
"Add a callback that will be invoked after rendering has taken place. This "
"hook can be used to defer certain processing operations (such as caching) "
"until after rendering has occurred."
msgstr ""

# 576a72929cdb4fc8b37eb2ffde5d23e6
#: ../../ref/template-response.txt:118
msgid ""
"If the :class:`~django.template.response.SimpleTemplateResponse` has already "
"been rendered, the callback will be invoked immediately."
msgstr ""

# dbd65246d8044236b96a7021e6196d2b
#: ../../ref/template-response.txt:122
msgid ""
"When called, callbacks will be passed a single argument -- the rendered :"
"class:`~django.template.response.SimpleTemplateResponse` instance."
msgstr ""

# a6aa6dba372f437181bf8fc56bb5478c
#: ../../ref/template-response.txt:126
msgid ""
"If the callback returns a value that is not ``None``, this will be used as "
"the response instead of the original response object (and will be passed to "
"the next post rendering callback etc.)"
msgstr ""

# e79d3a36a072486f88f4a57d9f5f3fc0
#: ../../ref/template-response.txt:132
msgid ""
"Sets ``response.content`` to the result obtained by :attr:"
"`SimpleTemplateResponse.rendered_content`, runs all post-rendering "
"callbacks, and returns the resulting response object."
msgstr ""

# e944bb236dbb45649a09787d640101d0
#: ../../ref/template-response.txt:136
msgid ""
"``render()`` will only have an effect the first time it is called. On "
"subsequent calls, it will return the result obtained from the first call."
msgstr ""

#: ../../ref/template-response.txt:141
msgid "``TemplateResponse`` objects"
msgstr ""

#: ../../ref/template-response.txt:145
msgid ""
"``TemplateResponse`` is a subclass of :class:`~django.template.response."
"SimpleTemplateResponse` that knows about the current :class:`~django.http."
"HttpRequest`."
msgstr ""

#: ../../ref/template-response.txt:154
msgid ""
"Instantiates a :class:`~django.template.response.TemplateResponse` object "
"with the given request, template, context, content type, HTTP status, and "
"charset."
msgstr ""

#: ../../ref/template-response.txt:159
msgid "``request``"
msgstr ""

# 9502bcd0c07642c19fd2f8b0436cc656
#: ../../ref/template-response.txt:159
msgid "An :class:`~django.http.HttpRequest` instance."
msgstr ""

# e957a6540ac94cc297a5d5940c2e4825
#: ../../ref/template-response.txt:189
msgid "The rendering process"
msgstr ""

# 32fcb1c32d2d447fb53f43ac704d44c0
#: ../../ref/template-response.txt:191
msgid ""
"Before a :class:`~django.template.response.TemplateResponse` instance can be "
"returned to the client, it must be rendered. The rendering process takes the "
"intermediate representation of template and context, and turns it into the "
"final byte stream that can be served to the client."
msgstr ""

# c31de5bf16a041a4951ec44c13ab63b7
#: ../../ref/template-response.txt:196
msgid ""
"There are three circumstances under which a ``TemplateResponse`` will be "
"rendered:"
msgstr ""

# 70579d61fc874bb3a80dbe8b3db921c8
#: ../../ref/template-response.txt:199
msgid ""
"When the ``TemplateResponse`` instance is explicitly rendered, using the :"
"meth:`SimpleTemplateResponse.render()` method."
msgstr ""

# cf8bef5aece8471dbe195619f00a42ba
#: ../../ref/template-response.txt:202
msgid ""
"When the content of the response is explicitly set by assigning ``response."
"content``."
msgstr ""

# b6e7e217758a4e2ea789f12910577d9b
#: ../../ref/template-response.txt:205
msgid ""
"After passing through template response middleware, but before passing "
"through response middleware."
msgstr ""

# e1c4c55a55cd4194a69253e2cb611686
#: ../../ref/template-response.txt:208
msgid ""
"A ``TemplateResponse`` can only be rendered once. The first call to :meth:"
"`SimpleTemplateResponse.render` sets the content of the response; subsequent "
"rendering calls do not change the response content."
msgstr ""

# 93a442eddf804d97bb73ccd78841bc44
#: ../../ref/template-response.txt:212
msgid ""
"However, when ``response.content`` is explicitly assigned, the change is "
"always applied. If you want to force the content to be re-rendered, you can "
"re-evaluate the rendered content, and assign the content of the response "
"manually::"
msgstr ""

# af4de78e40d14a9482d976e5bdc86962
#: ../../ref/template-response.txt:236
msgid "Post-render callbacks"
msgstr ""

# 441f662b7bb14c9d9f015e5a5f235417
#: ../../ref/template-response.txt:238
msgid ""
"Some operations -- such as caching -- cannot be performed on an unrendered "
"template. They must be performed on a fully complete and rendered response."
msgstr ""

#: ../../ref/template-response.txt:242
msgid ""
"If you're using middleware, you can do that. Middleware provides multiple "
"opportunities to process a response on exit from a view. If you put behavior "
"in the response middleware, it's guaranteed to execute after template "
"rendering has taken place."
msgstr ""

# 422f696ecf934afa859d11bf53e3aeef
#: ../../ref/template-response.txt:247
msgid ""
"However, if you're using a decorator, the same opportunities do not exist. "
"Any behavior defined in a decorator is handled immediately."
msgstr ""

# a3e506eb5c7c46a0a5b0c1aec4182065
#: ../../ref/template-response.txt:250
msgid ""
"To compensate for this (and any other analogous use cases), :class:"
"`TemplateResponse` allows you to register callbacks that will be invoked "
"when rendering has completed. Using this callback, you can defer critical "
"processing until a point where you can guarantee that rendered content will "
"be available."
msgstr ""

#: ../../ref/template-response.txt:256
msgid ""
"To define a post-render callback, define a function that takes a single "
"argument -- response -- and register that function with the template "
"response::"
msgstr ""

# efaedf6f5b2c4d979396c2a99036d6f1
#: ../../ref/template-response.txt:274
msgid ""
"``my_render_callback()`` will be invoked after the ``mytemplate.html`` has "
"been rendered, and will be provided the fully rendered :class:"
"`TemplateResponse` instance as an argument."
msgstr ""

# 1c0149e8f220435aa07c092a6c3f3321
#: ../../ref/template-response.txt:278
msgid ""
"If the template has already been rendered, the callback will be invoked "
"immediately."
msgstr ""

#: ../../ref/template-response.txt:282
msgid "Using ``TemplateResponse`` and ``SimpleTemplateResponse``"
msgstr ""

#: ../../ref/template-response.txt:284
msgid ""
"A :class:`TemplateResponse` object can be used anywhere that a normal :class:"
"`django.http.HttpResponse` can be used. It can also be used as an "
"alternative to calling :func:`~django.shortcuts.render()`."
msgstr ""

#: ../../ref/template-response.txt:288
msgid ""
"For example, the following view returns a :class:`TemplateResponse` with a "
"template and a context containing a queryset::"
msgstr ""
