# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-16 11:56+0200\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# fbbfb64fe94b420795e9c62a7afc56fe
#: ../../ref/contrib/sitemaps.txt:3
msgid "The sitemap framework"
msgstr ""

# ab0bb76f1a964a769900dea98efce5d0
#: ../../ref/contrib/sitemaps.txt:8
msgid ""
"Django comes with a high-level sitemap-generating framework that makes "
"creating sitemap_ XML files easy."
msgstr ""

# 50e31bf9568f4b1884db9eba28d8e5a7
#: ../../ref/contrib/sitemaps.txt:14
msgid "Overview"
msgstr ""

#: ../../ref/contrib/sitemaps.txt:16
msgid ""
"A sitemap is an XML file on your website that tells search-engine indexers "
"how frequently your pages change and how \"important\" certain pages are in "
"relation to other pages on your site. This information helps search engines "
"index your site."
msgstr ""

# 394ea7691e534c2e86078dfbfdaa0537
#: ../../ref/contrib/sitemaps.txt:21
msgid ""
"The Django sitemap framework automates the creation of this XML file by "
"letting you express this information in Python code."
msgstr ""

# f65677fd3c5742d5aa088b01a6f2cce8
#: ../../ref/contrib/sitemaps.txt:24
msgid ""
"It works much like Django's :doc:`syndication framework </ref/contrib/"
"syndication>`. To create a sitemap, just write a :class:`~django.contrib."
"sitemaps.Sitemap` class and point to it in your :doc:`URLconf </topics/http/"
"urls>`."
msgstr ""

# 7bbfa305329749c38ad13b1826aa37ca
#: ../../ref/contrib/sitemaps.txt:30
msgid "Installation"
msgstr ""

# b1f6c3d046dd478fb59f6e69c844fe7e
#: ../../ref/contrib/sitemaps.txt:32
msgid "To install the sitemap app, follow these steps:"
msgstr ""

# 60af98c539d0468ca3269ccdc2ab9776
#: ../../ref/contrib/sitemaps.txt:34
msgid ""
"Add ``'django.contrib.sitemaps'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:37
msgid ""
"Make sure your :setting:`TEMPLATES` setting contains a ``DjangoTemplates`` "
"backend whose ``APP_DIRS`` options is set to ``True``. It's in there by "
"default, so you'll only need to change this if you've changed that setting."
msgstr ""

# 9e9438bbd4724334874fdd3d43b2a06a
#: ../../ref/contrib/sitemaps.txt:41
msgid ""
"Make sure you've installed the :mod:`sites framework <django.contrib.sites>`."
msgstr ""

# 663f68f134ff4c1aa5f12dd632092984
#: ../../ref/contrib/sitemaps.txt:44
msgid ""
"(Note: The sitemap application doesn't install any database tables. The only "
"reason it needs to go into :setting:`INSTALLED_APPS` is so that the :func:"
"`~django.template.loaders.app_directories.Loader` template loader can find "
"the default templates.)"
msgstr ""

# 4cbe3b25e78841ce9e9ace7f8c11e335
#: ../../ref/contrib/sitemaps.txt:50
msgid "Initialization"
msgstr ""

# df3cfb86818a4b32b4742ff308a2dbdb
#: ../../ref/contrib/sitemaps.txt:54
msgid ""
"To activate sitemap generation on your Django site, add this line to your :"
"doc:`URLconf </topics/http/urls>`::"
msgstr ""

# 18d1e2818eae48ef9ed08ec496a54050
#: ../../ref/contrib/sitemaps.txt:62
msgid ""
"This tells Django to build a sitemap when a client accesses :file:`/sitemap."
"xml`."
msgstr ""

# 8c593b338edf45b2b13eda755c394a0c
#: ../../ref/contrib/sitemaps.txt:64
msgid ""
"The name of the sitemap file is not important, but the location is. Search "
"engines will only index links in your sitemap for the current URL level and "
"below. For instance, if :file:`sitemap.xml` lives in your root directory, it "
"may reference any URL in your site. However, if your sitemap lives at :file:"
"`/content/sitemap.xml`, it may only reference URLs that begin with :file:`/"
"content/`."
msgstr ""

# d76e43d179b6424db7e79a8ab7d40267
#: ../../ref/contrib/sitemaps.txt:71
msgid ""
"The sitemap view takes an extra, required argument: ``{'sitemaps': sitemaps}"
"``. ``sitemaps`` should be a dictionary that maps a short section label (e."
"g., ``blog`` or ``news``) to its :class:`~django.contrib.sitemaps.Sitemap` "
"class (e.g., ``BlogSitemap`` or ``NewsSitemap``). It may also map to an "
"*instance* of a :class:`~django.contrib.sitemaps.Sitemap` class (e.g., "
"``BlogSitemap(some_var)``)."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:79
msgid "``Sitemap`` classes"
msgstr ""

# c86987748a3f42a9a4a5001236553b8b
#: ../../ref/contrib/sitemaps.txt:81
msgid ""
"A :class:`~django.contrib.sitemaps.Sitemap` class is a simple Python class "
"that represents a \"section\" of entries in your sitemap. For example, one :"
"class:`~django.contrib.sitemaps.Sitemap` class could represent all the "
"entries of your Weblog, while another could represent all of the events in "
"your events calendar."
msgstr ""

# b4e565cd63134301aa912991dd6ca782
#: ../../ref/contrib/sitemaps.txt:87
msgid ""
"In the simplest case, all these sections get lumped together into one :file:"
"`sitemap.xml`, but it's also possible to use the framework to generate a "
"sitemap index that references individual sitemap files, one per section. "
"(See `Creating a sitemap index`_ below.)"
msgstr ""

# 373097a9790949a991a8ac5baa0e9be2
#: ../../ref/contrib/sitemaps.txt:92
msgid ""
":class:`~django.contrib.sitemaps.Sitemap` classes must subclass ``django."
"contrib.sitemaps.Sitemap``. They can live anywhere in your codebase."
msgstr ""

# fddd58639f42420a9a86c1805b7d3c86
#: ../../ref/contrib/sitemaps.txt:96
msgid "A simple example"
msgstr ""

# a5cb7c00776d414e8bc3b36f58bc455f
#: ../../ref/contrib/sitemaps.txt:98
msgid ""
"Let's assume you have a blog system, with an ``Entry`` model, and you want "
"your sitemap to include all the links to your individual blog entries. "
"Here's how your sitemap class might look::"
msgstr ""

# 6c511ae182ce4595a5e800455e2776d7
#: ../../ref/contrib/sitemaps.txt:115
msgid "Note:"
msgstr ""

# 2b6c3eb2d6324efc8b6ef4f5827aeabe
#: ../../ref/contrib/sitemaps.txt:117
msgid ""
":attr:`~Sitemap.changefreq` and :attr:`~Sitemap.priority` are class "
"attributes corresponding to ``<changefreq>`` and ``<priority>`` elements, "
"respectively. They can be made callable as functions, as :attr:`~Sitemap."
"lastmod` was in the example."
msgstr ""

# 4df46d3ae45d4e3db74a183a0030af51
#: ../../ref/contrib/sitemaps.txt:121
msgid ""
":attr:`~Sitemap.items()` is simply a method that returns a list of objects. "
"The objects returned will get passed to any callable methods corresponding "
"to a sitemap property (:attr:`~Sitemap.location`, :attr:`~Sitemap.lastmod`, :"
"attr:`~Sitemap.changefreq`, and :attr:`~Sitemap.priority`)."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:126
msgid ":attr:`~Sitemap.lastmod` should return a :class:`~datetime.datetime`."
msgstr ""

# 5bcb4b7a3e1f4ba7b593f5eb3881ca81
#: ../../ref/contrib/sitemaps.txt:127
msgid ""
"There is no :attr:`~Sitemap.location` method in this example, but you can "
"provide it in order to specify the URL for your object. By default, :attr:"
"`~Sitemap.location()` calls ``get_absolute_url()`` on each object and "
"returns the result."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:133
msgid "``Sitemap`` class reference"
msgstr ""

# e7499a4a080b44bb818c135e2f9982cd
#: ../../ref/contrib/sitemaps.txt:137
msgid "A ``Sitemap`` class can define the following methods/attributes:"
msgstr ""

# 319eed26463f4845886a682774d52602
#: ../../ref/contrib/sitemaps.txt:141
msgid ""
"**Required.** A method that returns a list of objects. The framework doesn't "
"care what *type* of objects they are; all that matters is that these objects "
"get passed to the :attr:`~Sitemap.location()`, :attr:`~Sitemap.lastmod()`, :"
"attr:`~Sitemap.changefreq()` and :attr:`~Sitemap.priority()` methods."
msgstr ""

# 38c0ba4bd1a2472b8e8ba39e58b13ea8
# 8f554e5d101d4951b57eb84fd071b95c
# e70797bff007497d9b6fd08cdec07e94
# a185ce72098044a0b56a90cbc43da837
#: ../../ref/contrib/sitemaps.txt:149 ../../ref/contrib/sitemaps.txt:174
#: ../../ref/contrib/sitemaps.txt:193 ../../ref/contrib/sitemaps.txt:215
msgid "**Optional.** Either a method or attribute."
msgstr ""

# 13f9f12b5f8c41bdab977b7a62b682a0
#: ../../ref/contrib/sitemaps.txt:151
msgid ""
"If it's a method, it should return the absolute path for a given object as "
"returned by :attr:`~Sitemap.items()`."
msgstr ""

# 7e28f4dc1e834a95ab4b55bf19495422
#: ../../ref/contrib/sitemaps.txt:154
msgid ""
"If it's an attribute, its value should be a string representing an absolute "
"path to use for *every* object returned by :attr:`~Sitemap.items()`."
msgstr ""

# 58fba58c5414489c88a5ae42740bb8eb
#: ../../ref/contrib/sitemaps.txt:158
msgid ""
"In both cases, \"absolute path\" means a URL that doesn't include the "
"protocol or domain. Examples:"
msgstr ""

# 24525471afa847fba78ba73d7bd9d00a
#: ../../ref/contrib/sitemaps.txt:161
msgid "Good: :file:`'/foo/bar/'`"
msgstr ""

# cb548dbbb03f48dea73f9f8c51704bfb
#: ../../ref/contrib/sitemaps.txt:162
msgid "Bad: :file:`'example.com/foo/bar/'`"
msgstr ""

#: ../../ref/contrib/sitemaps.txt:163
msgid "Bad: :file:`'https://example.com/foo/bar/'`"
msgstr ""

# 426b333a796f4d7ab37cd4e7c746c976
#: ../../ref/contrib/sitemaps.txt:165
msgid ""
"If :attr:`~Sitemap.location` isn't provided, the framework will call the "
"``get_absolute_url()`` method on each object as returned by :attr:`~Sitemap."
"items()`."
msgstr ""

# 0fa4670a8c4449df8a929e2969b711bc
#: ../../ref/contrib/sitemaps.txt:169
msgid ""
"To specify a protocol other than ``'http'``, use :attr:`~Sitemap.protocol`."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:176
msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's last-modified date/time "
"as a :class:`~datetime.datetime`."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:180
msgid ""
"If it's an attribute, its value should be a :class:`~datetime.datetime` "
"representing the last-modified date/time for *every* object returned by :"
"attr:`~Sitemap.items()`."
msgstr ""

# bf2e830e8e554e89a3e61680616a0a80
#: ../../ref/contrib/sitemaps.txt:184
msgid ""
"If all items in a sitemap have a :attr:`~Sitemap.lastmod`, the sitemap "
"generated by :func:`views.sitemap` will have a ``Last-Modified`` header "
"equal to the latest ``lastmod``. You can activate the :class:`~django."
"middleware.http.ConditionalGetMiddleware` to make Django respond "
"appropriately to requests with an ``If-Modified-Since`` header which will "
"prevent sending the sitemap if it hasn't changed."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:195
msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's change frequency as a "
"string."
msgstr ""

# 8d666d0ac4d94976b353f7155ebe1a59
#: ../../ref/contrib/sitemaps.txt:199
msgid ""
"If it's an attribute, its value should be a string representing the change "
"frequency of *every* object returned by :attr:`~Sitemap.items()`."
msgstr ""

# f44b9bcca8694f5fb74109e0580a04a0
#: ../../ref/contrib/sitemaps.txt:202
msgid ""
"Possible values for :attr:`~Sitemap.changefreq`, whether you use a method or "
"attribute, are:"
msgstr ""

# af50b591e8d943f193b08ab33ccb5317
#: ../../ref/contrib/sitemaps.txt:205
msgid "``'always'``"
msgstr ""

# c10baa9a207e4ae2ac59054b699cd07b
#: ../../ref/contrib/sitemaps.txt:206
msgid "``'hourly'``"
msgstr ""

# 62a7b77064ab4883a4aea8a2b46c1d15
#: ../../ref/contrib/sitemaps.txt:207
msgid "``'daily'``"
msgstr ""

# 31cae860281f497a808dfaa583988595
#: ../../ref/contrib/sitemaps.txt:208
msgid "``'weekly'``"
msgstr ""

# 9c2b76afb8c54b308af40db4025756d9
#: ../../ref/contrib/sitemaps.txt:209
msgid "``'monthly'``"
msgstr ""

# cd20e331edb0457a892a2ccb9f0faa74
#: ../../ref/contrib/sitemaps.txt:210
msgid "``'yearly'``"
msgstr ""

# 3fa3da2a0a5b4cc9bf6021cb8aada90a
#: ../../ref/contrib/sitemaps.txt:211
msgid "``'never'``"
msgstr ""

#: ../../ref/contrib/sitemaps.txt:217
msgid ""
"If it's a method, it should take one argument -- an object as returned by :"
"attr:`~Sitemap.items()` -- and return that object's priority as either a "
"string or float."
msgstr ""

# bf069c1353c442a194da786ececfd9e3
#: ../../ref/contrib/sitemaps.txt:221
msgid ""
"If it's an attribute, its value should be either a string or float "
"representing the priority of *every* object returned by :attr:`~Sitemap."
"items()`."
msgstr ""

# 0bf57f03911c4dccae77461ff956910d
#: ../../ref/contrib/sitemaps.txt:225
msgid ""
"Example values for :attr:`~Sitemap.priority`: ``0.4``, ``1.0``. The default "
"priority of a page is ``0.5``. See the `sitemaps.org documentation`_ for "
"more."
msgstr ""

# 8f6f1b88233a4015abc5e788173cbd2f
#: ../../ref/contrib/sitemaps.txt:233 ../../ref/contrib/sitemaps.txt:242
#: ../../ref/contrib/sitemaps.txt:251
msgid "**Optional.**"
msgstr ""

# 6ef8587573d54d10abfca46873305016
#: ../../ref/contrib/sitemaps.txt:235
msgid ""
"This attribute defines the protocol (``'http'`` or ``'https'``) of the URLs "
"in the sitemap. If it isn't set, the protocol with which the sitemap was "
"requested is used. If the sitemap is built outside the context of a request, "
"the default is ``'http'``."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:244
msgid ""
"This attribute defines the maximum number of URLs included on each page of "
"the sitemap. Its value should not exceed the default value of ``50000``, "
"which is the upper limit allowed in the `Sitemaps protocol <https://www."
"sitemaps.org/protocol.html#index>`_."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:253
msgid ""
"A boolean attribute that defines if the URLs of this sitemap should be "
"generated using all of your :setting:`LANGUAGES`. The default is ``False``."
msgstr ""

# 88c17eeaa6e64949925ad29cd73b1681
#: ../../ref/contrib/sitemaps.txt:258
msgid "Shortcuts"
msgstr ""

#: ../../ref/contrib/sitemaps.txt:260
msgid "The sitemap framework provides a convenience class for a common case:"
msgstr ""

#: ../../ref/contrib/sitemaps.txt:264
msgid ""
"The :class:`django.contrib.sitemaps.GenericSitemap` class allows you to "
"create a sitemap by passing it a dictionary which has to contain at least a "
"``queryset`` entry. This queryset will be used to generate the items of the "
"sitemap. It may also have a ``date_field`` entry that specifies a date field "
"for objects retrieved from the ``queryset``. This will be used for the :attr:"
"`~Sitemap.lastmod` attribute in the generated sitemap."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:272
msgid ""
"The :attr:`~Sitemap.priority`, :attr:`~Sitemap.changefreq`, and :attr:"
"`~Sitemap.protocol` keyword arguments allow specifying these attributes for "
"all URLs."
msgstr ""

#: ../../ref/contrib/sitemaps.txt:278
msgid "The ``protocol`` keyword argument was added."
msgstr ""

# 0ab389d2b16049e7b6b593b9c9f26d38
#: ../../ref/contrib/sitemaps.txt:281
msgid "Example"
msgstr ""

#: ../../ref/contrib/sitemaps.txt:283
msgid ""
"Here's an example of a :doc:`URLconf </topics/http/urls>` using :class:"
"`GenericSitemap`::"
msgstr ""

# bcaad34a9709479193cd748e4c35a946
#: ../../ref/contrib/sitemaps.txt:309
msgid "Sitemap for static views"
msgstr ""

#: ../../ref/contrib/sitemaps.txt:311
msgid ""
"Often you want the search engine crawlers to index views which are neither "
"object detail pages nor flatpages. The solution is to explicitly list URL "
"names for these views in ``items`` and call :func:`~django.urls.reverse` in "
"the ``location`` method of the sitemap. For example::"
msgstr ""

# b784758afe0c4413ab0336a6b98665c5
#: ../../ref/contrib/sitemaps.txt:352
msgid "Creating a sitemap index"
msgstr ""

# d0d98bf923d4434182e570874438084b
#: ../../ref/contrib/sitemaps.txt:356
msgid ""
"The sitemap framework also has the ability to create a sitemap index that "
"references individual sitemap files, one per each section defined in your "
"``sitemaps`` dictionary. The only differences in usage are:"
msgstr ""

# ea64eccb763f4bd99e59d61790f97a16
#: ../../ref/contrib/sitemaps.txt:360
msgid ""
"You use two views in your URLconf: :func:`django.contrib.sitemaps.views."
"index` and :func:`django.contrib.sitemaps.views.sitemap`."
msgstr ""

# 6f6d7b6f65f84c2bb82f0660df29fb9d
#: ../../ref/contrib/sitemaps.txt:362
msgid ""
"The :func:`django.contrib.sitemaps.views.sitemap` view should take a "
"``section`` keyword argument."
msgstr ""

# ad949848426a41eebf7352b842b0633a
#: ../../ref/contrib/sitemaps.txt:365
msgid ""
"Here's what the relevant URLconf lines would look like for the example "
"above::"
msgstr ""

# 471f8c4ddc274c7fae487756cad63f7a
#: ../../ref/contrib/sitemaps.txt:375
msgid ""
"This will automatically generate a :file:`sitemap.xml` file that references "
"both :file:`sitemap-flatpages.xml` and :file:`sitemap-blog.xml`. The :class:"
"`~django.contrib.sitemaps.Sitemap` classes and the ``sitemaps`` dict don't "
"change at all."
msgstr ""

# a170f8778b5e4f3a8765a40ea7cf8fc6
#: ../../ref/contrib/sitemaps.txt:380
msgid ""
"You should create an index file if one of your sitemaps has more than 50,000 "
"URLs. In this case, Django will automatically paginate the sitemap, and the "
"index will reflect that."
msgstr ""

# 2ae6209a5e0644f481d28dea4006ceb3
#: ../../ref/contrib/sitemaps.txt:384
msgid ""
"If you're not using the vanilla sitemap view -- for example, if it's wrapped "
"with a caching decorator -- you must name your sitemap view and pass "
"``sitemap_url_name`` to the index view::"
msgstr ""

# cfecf5f4bb514b46a91480a64d0a8afb
#: ../../ref/contrib/sitemaps.txt:402
msgid "Template customization"
msgstr ""

# 1d86017f90c94623aaa6c5404caa059f
#: ../../ref/contrib/sitemaps.txt:404
msgid ""
"If you wish to use a different template for each sitemap or sitemap index "
"available on your site, you may specify it by passing a ``template_name`` "
"parameter to the ``sitemap`` and ``index`` views via the URLconf::"
msgstr ""

# 6c5f0bcc6ac748d7a283a53dfd7dbb24
#: ../../ref/contrib/sitemaps.txt:422
msgid ""
"These views return :class:`~django.template.response.TemplateResponse` "
"instances which allow you to easily customize the response data before "
"rendering. For more details, see the :doc:`TemplateResponse documentation </"
"ref/template-response>`."
msgstr ""

# 341de021ee0f4bf0ba5c97f8a836669b
#: ../../ref/contrib/sitemaps.txt:428
msgid "Context variables"
msgstr ""

# ce66e3b7666748c3b65694de61664aa7
#: ../../ref/contrib/sitemaps.txt:430
msgid ""
"When customizing the templates for the :func:`~django.contrib.sitemaps.views."
"index` and :func:`~django.contrib.sitemaps.views.sitemap` views, you can "
"rely on the following context variables."
msgstr ""

# 18ebb4e7b151497abdbcbf6152da9306
#: ../../ref/contrib/sitemaps.txt:436
msgid "Index"
msgstr ""

# d6ecf695f12a4e65b16b038555823173
#: ../../ref/contrib/sitemaps.txt:438
msgid ""
"The variable ``sitemaps`` is a list of absolute URLs to each of the sitemaps."
msgstr ""

# 405c35cd19674c46aee0b3d8b3ccbfbf
#: ../../ref/contrib/sitemaps.txt:441
msgid "Sitemap"
msgstr ""

# 0c49c883b24a4383b5afc3bb184c7f32
#: ../../ref/contrib/sitemaps.txt:443
msgid ""
"The variable ``urlset`` is a list of URLs that should appear in the sitemap. "
"Each URL exposes attributes as defined in the :class:`~django.contrib."
"sitemaps.Sitemap` class:"
msgstr ""

# 1336cb813bf3429ab1001daf6646f60a
#: ../../ref/contrib/sitemaps.txt:447
msgid "``changefreq``"
msgstr ""

# c3508b9bdb9344998a6d8448ea49910a
#: ../../ref/contrib/sitemaps.txt:448
msgid "``item``"
msgstr ""

# 6110189017024f80a75a083395b03e21
#: ../../ref/contrib/sitemaps.txt:449
msgid "``lastmod``"
msgstr ""

# 91f77e3477204d3f98a546fee3617a38
#: ../../ref/contrib/sitemaps.txt:450
msgid "``location``"
msgstr ""

# 7882f99eb1a54921ad3b48c95eebf0ad
#: ../../ref/contrib/sitemaps.txt:451
msgid "``priority``"
msgstr ""

# 164f22b781ba4368a67bbc9f1946e3b1
#: ../../ref/contrib/sitemaps.txt:453
msgid ""
"The ``item`` attribute has been added for each URL to allow more flexible "
"customization of the templates, such as `Google news sitemaps`_. Assuming "
"Sitemap's :attr:`~Sitemap.items()` would return a list of items with "
"``publication_data`` and a ``tags`` field something like this would generate "
"a Google News compatible sitemap:"
msgstr ""

# 6b877958c789421bb75db47a87bd5f5f
#: ../../ref/contrib/sitemaps.txt:484
msgid "Pinging Google"
msgstr ""

# f0ce4c3b6035431abf930e62996e4a6a
#: ../../ref/contrib/sitemaps.txt:486
msgid ""
"You may want to \"ping\" Google when your sitemap changes, to let it know to "
"reindex your site. The sitemaps framework provides a function to do just "
"that: :func:`django.contrib.sitemaps.ping_google()`."
msgstr ""

# 40caedd0af444483b081740fc76698be
#: ../../ref/contrib/sitemaps.txt:492
msgid ""
":func:`ping_google` takes an optional argument, ``sitemap_url``, which "
"should be the absolute path to your site's sitemap (e.g., :file:`'/sitemap."
"xml'`). If this argument isn't provided, :func:`ping_google` will attempt to "
"figure out your sitemap by performing a reverse looking in your URLconf."
msgstr ""

# 65960bf2203f480ab8dd59d03a594418
#: ../../ref/contrib/sitemaps.txt:498
msgid ""
":func:`ping_google` raises the exception ``django.contrib.sitemaps."
"SitemapNotFound`` if it cannot determine your sitemap URL."
msgstr ""

# e2dc1a26d0bd4d84989746eb4523a83f
#: ../../ref/contrib/sitemaps.txt:502
msgid "Register with Google first!"
msgstr ""

# 096e146cda5544879337653000e3d4f7
#: ../../ref/contrib/sitemaps.txt:504
msgid ""
"The :func:`ping_google` command only works if you have registered your site "
"with `Google Webmaster Tools`_."
msgstr ""

# ad4a468f4ca14437bc602b0e3dee3b53
#: ../../ref/contrib/sitemaps.txt:509
msgid ""
"One useful way to call :func:`ping_google` is from a model's ``save()`` "
"method::"
msgstr ""

# 3e084355be934b6cb0a6bfcf246d95a8
#: ../../ref/contrib/sitemaps.txt:525
msgid ""
"A more efficient solution, however, would be to call :func:`ping_google` "
"from a cron script, or some other scheduled task. The function makes an HTTP "
"request to Google's servers, so you may not want to introduce that network "
"overhead each time you call ``save()``."
msgstr ""

# 9ee7791e5587478ba7db0722e892d8e9
#: ../../ref/contrib/sitemaps.txt:531
msgid "Pinging Google via ``manage.py``"
msgstr ""

# 1820bfbf2200487c92aa6c4c16bd9ea7
#: ../../ref/contrib/sitemaps.txt:535
msgid ""
"Once the sitemaps application is added to your project, you may also ping "
"Google using the ``ping_google`` management command::"
msgstr ""
