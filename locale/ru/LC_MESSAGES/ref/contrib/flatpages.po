# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2015, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2016-04-01 17:57+0300\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# 57702b7bc9d4473299c0e95e70b2e5aa
#: ../../ref/contrib/flatpages.txt:3
msgid "The flatpages app"
msgstr "Приложение для создания статических страниц"

# 2db10685b9b0427d92c8c3d640109622
#: ../../ref/contrib/flatpages.txt:8
#, fuzzy
msgid ""
"Django comes with an optional \"flatpages\" application. It lets you store "
"\"flat\" HTML content in a database and handles the management for you via "
"Django's admin interface and a Python API."
msgstr ""
"Django содержит приложения для создания статических страниц. Оно позволяет "
"сохранять \"статический\" HTML и управлять ним через интерфейс "
"администратора Django и Python API."

# 751c5b80c1534bb197bc7200f6a8aba4
#: ../../ref/contrib/flatpages.txt:12
#, fuzzy
msgid ""
"A flatpage is a object with a URL, title and content. Use it for one-off, "
"special-case pages, such as \"About\" or \"Privacy Policy\" pages, that you "
"want to store in a database but for which you don't want to develop a custom "
"Django application."
msgstr ""
"Статическая страница -- это простой объект с URL, заголовком и содержимым. "
"Используйте их для единичных не динамических страниц, например страницы \"О "
"нас\" или \"Политика конфиденциальности\", которые вы хотите хранить в базе "
"данных, не создавая отдельное приложение Django."

# 90f5f75602344c5595772bf51c98dc56
#: ../../ref/contrib/flatpages.txt:17
msgid ""
"A flatpage can use a custom template or a default, systemwide flatpage "
"template. It can be associated with one, or multiple, sites."
msgstr ""
"Статическая страница могжет использовать собственный шаблон, или шаблон по "
"умолчанию, общий для всех статических страниц. Они могут быть связаны с "
"одним или несколькими сайтами."

# 39b214423170431eaae1cc5a612847d8
#: ../../ref/contrib/flatpages.txt:20
msgid ""
"The content field may optionally be left blank if you prefer to put your "
"content in a custom template."
msgstr ""
"Содержимое может быть пустым, если вы предпочитаете указать его в шаблоне."

# 4e434b3bb19046cb82f45499c1686069
#: ../../ref/contrib/flatpages.txt:24
msgid "Installation"
msgstr "Установка"

# 151dbdc7883e44429e5b2fd74b2cbe7a
#: ../../ref/contrib/flatpages.txt:26
msgid "To install the flatpages app, follow these steps:"
msgstr ""
"Чтобы установить приложение статических страниц, выполните следующие "
"действия:"

# acb2846f7a7346948b85a01bfdd9781a
#: ../../ref/contrib/flatpages.txt:28
msgid ""
"Install the :mod:`sites framework <django.contrib.sites>` by adding "
"``'django.contrib.sites'`` to your :setting:`INSTALLED_APPS` setting, if "
"it's not already in there."
msgstr ""
"Установите :mod:`фреймворк для сайтов <django.contrib.sites>`, добавив "
"``'django.contrib.sites'`` в настройку :setting:`INSTALLED_APPS`, если он "
"еще не добавлен."

# d9e7251d72794d65af1c3c4c030ed48f
#: ../../ref/contrib/flatpages.txt:32
msgid ""
"Also make sure you've correctly set :setting:`SITE_ID` to the ID of the site "
"the settings file represents. This will usually be ``1`` (i.e. ``SITE_ID = "
"1``, but if you're using the sites framework to manage multiple sites, it "
"could be the ID of a different site."
msgstr ""
"Также убедитесь, что настройки содержат правильный :setting:`SITE_ID`. "
"Обычно это ``1`` (то есть ``SITE_ID = 1``, но если вы используете фреймверк "
"для управления несколькими сайтами, ID может быть другим."

# 97ed741ef4884b6dba7a602dedb0cbe4
#: ../../ref/contrib/flatpages.txt:37
msgid ""
"Add ``'django.contrib.flatpages'`` to your :setting:`INSTALLED_APPS` setting."
msgstr ""
"Добавьте ``'django.contrib.flatpages'`` в настройку :setting:"
"`INSTALLED_APPS`."

# 2057ca2809cd40ecb873199144245100
#: ../../ref/contrib/flatpages.txt:40
msgid "Then either:"
msgstr "Затем или:"

# 2766a21781d240548803e6d07367b725
#: ../../ref/contrib/flatpages.txt:42
msgid "Add an entry in your URLconf. For example::"
msgstr "Добавьте запись в URLconf. Например::"

# 567b6b5d8bbe47b794c71421c3fcb54d
#: ../../ref/contrib/flatpages.txt:48
msgid "or:"
msgstr "или:"

# 43bbe51a7f4844f69ab689322c417ea7
#: ../../ref/contrib/flatpages.txt:50
#, fuzzy
msgid ""
"Add ``'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'`` to "
"your :setting:`MIDDLEWARE` setting."
msgstr ""
"Добавьте ``'django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware'`` в настройку :setting:`MIDDLEWARE_CLASSES`."

# c539d5a727954585a5042184fcd18a5d
#: ../../ref/contrib/flatpages.txt:53
msgid "Run the command :djadmin:`manage.py migrate <migrate>`."
msgstr "Запустите команду :djadmin:`manage.py migrate <migrate>`."

# c3793c49c5b545239eb31145508a1c2c
#: ../../ref/contrib/flatpages.txt:58
msgid "How it works"
msgstr "Как это работает"

# 7ac76e2f1ebc40bc95fa9e720be6e8d5
#: ../../ref/contrib/flatpages.txt:60
#, fuzzy
msgid ""
"``manage.py migrate`` creates two tables in your database: "
"``django_flatpage`` and ``django_flatpage_sites``. ``django_flatpage`` is a "
"lookup table that maps a URL to a title and bunch of text content. "
"``django_flatpage_sites`` associates a flatpage with a site."
msgstr ""
"``manage.py migrate`` создает две таблицы в вашей базе данных: "
"``django_flatpage`` и ``django_flatpage_sites``. ``django_flatpage`` -- это "
"таблица, которая связывает URL и содержимое страницы. "
"``django_flatpage_sites`` связывает страницу с конкретным сайтом."

# 2cbcd2f34ff847f7a434ff7d1b4d1e02
#: ../../ref/contrib/flatpages.txt:66
msgid "Using the URLconf"
msgstr "Использование URLconf"

# b05afcdb7a334b8587e86e2f2fa3c3fa
#: ../../ref/contrib/flatpages.txt:68
msgid ""
"There are several ways to include the flat pages in your URLconf. You can "
"dedicate a particular path to flat pages::"
msgstr ""
"Есть несколько способов добавить статические страницы в ваш URLconf. Вы "
"можете добавить их к конкретному путю::"

# 93f87482a2cb4d77b698fd873fa90da0
#: ../../ref/contrib/flatpages.txt:75
msgid ""
"You can also set it up as a \"catchall\" pattern. In this case, it is "
"important to place the pattern at the end of the other urlpatterns::"
msgstr ""
"Или же использовать URL-шаблон, который будет перехватывать все запросы. В "
"этом случае важно добавить его в самом конце::"

# 9779ab0f1a104db08b9340cbc147d299
#: ../../ref/contrib/flatpages.txt:87
msgid ""
"If you set :setting:`APPEND_SLASH` to ``False``, you must remove the slash "
"in the catchall pattern or flatpages without a trailing slash will not be "
"matched."
msgstr ""
"Если вы указали ``False`` в :setting:`APPEND_SLASH`, вам следует убрать "
"косую черту в конце URL-шаблона."

# 5f4af54ba1b5460a8518e193e2e201c9
#: ../../ref/contrib/flatpages.txt:91
msgid ""
"Another common setup is to use flat pages for a limited set of known pages "
"and to hard code the urls, so you can reference them with the :ttag:`url` "
"template tag::"
msgstr ""
"Еще один способ -- явно указать все страницы. В этом случае вы сможете "
"ссылаться на них через шаблонный тег :ttag:`url`::"

# 3e318f095c9a4e76abccec0091250912
#: ../../ref/contrib/flatpages.txt:103
msgid "Using the middleware"
msgstr "Использование промежуточного слоя(\"middleware\")"

# e67fdd44cc13496c959c91fbd1217dd9
#: ../../ref/contrib/flatpages.txt:105
msgid ""
"The :class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` "
"can do all of the work."
msgstr ""
":class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` "
"обеспечивает работу статических страниц."

# 47d483552e9c47a490a614f81c27fe19
#: ../../ref/contrib/flatpages.txt:110
msgid ""
"Each time any Django application raises a 404 error, this middleware checks "
"the flatpages database for the requested URL as a last resort. Specifically, "
"it checks for a flatpage with the given URL with a site ID that corresponds "
"to the :setting:`SITE_ID` setting."
msgstr ""
"Каждый раз, когда приложение Django вызывает 404 ошибку, это промежуточный "
"слой проверяет базу данных статических страниц на наличие запрашиваемого "
"URL. Точнее выполняется поиск простой страницы с текущим URL и ID сайта из "
"настройки :setting:`SITE_ID`."

# 22405b9e6d4b4f7989d0b6a8b1c3a1ea
#: ../../ref/contrib/flatpages.txt:115
msgid "If it finds a match, it follows this algorithm:"
msgstr "Если страница найдена:"

# 3fef9474bc5e46c391b624e201926302
#: ../../ref/contrib/flatpages.txt:117
msgid ""
"If the flatpage has a custom template, it loads that template. Otherwise, it "
"loads the template :file:`flatpages/default.html`."
msgstr ""
"Загружается собственный шаблон для страницы, если такой указан, иначе "
"загружается :file:`flatpages/default.html`."

# a723e23d2fa041cca45651a97bcb36b9
#: ../../ref/contrib/flatpages.txt:120
msgid ""
"It passes that template a single context variable, ``flatpage``, which is "
"the flatpage object. It uses :class:`~django.template.RequestContext` in "
"rendering the template."
msgstr ""
"В шаблон передается одна переменная, ``flatpage``, которая содержит объект "
"страницы. При рендеринге шаблона используется :class:`~django.template."
"RequestContext`."

# bcd3846d0b464e79a1974d393d7a6182
#: ../../ref/contrib/flatpages.txt:125
msgid ""
"The middleware will only add a trailing slash and redirect (by looking at "
"the :setting:`APPEND_SLASH` setting) if the resulting URL refers to a valid "
"flatpage. Redirects are permanent (301 status code)."
msgstr ""
"Промежуточный слой только добавляет слэш и перенаправляет (проверяя "
"настройку :setting:`APPEND_SLASH`), если полученный URL указывает на "
"статическую страницу. Перенаправление постоянные (301 код ответа)."

# 0df71b610d664ef993165c489c17cdff
#: ../../ref/contrib/flatpages.txt:129
msgid ""
"If it doesn't find a match, the request continues to be processed as usual."
msgstr "Если страница не найдена, запрос обрабатывается как обычно."

# 5a28e0aa30f3435292e68a209ad7e6fb
#: ../../ref/contrib/flatpages.txt:131
msgid ""
"The middleware only gets activated for 404s -- not for 500s or responses of "
"any other status code."
msgstr ""
"Промежуточный слой активируется только при 404 ответе, 500 и прочие "
"игнорируются."

# fa2f0d79b3ab481bbfd2231e05bd24b7
#: ../../ref/contrib/flatpages.txt:134
msgid "Flatpages will not apply view middleware"
msgstr ""
"К простым страницам не применяется ``process_view`` промежуточных слоев"

# 2d0e0fdfc8ed4435a88498454be45914
#: ../../ref/contrib/flatpages.txt:136
msgid ""
"Because the ``FlatpageFallbackMiddleware`` is applied only after URL "
"resolution has failed and produced a 404, the response it returns will not "
"apply any :ref:`view middleware <view-middleware>` methods. Only requests "
"which are successfully routed to a view via normal URL resolution apply view "
"middleware."
msgstr ""
"Так как ``FlatpageFallbackMiddleware`` применяется после того, как поиск URL-"
"а провалился и мы получили 404, ответ не будет обрабатываться :ref:`методом "
"process_view промежуточных слоев <view-middleware>`. Только при успешной "
"обработке URL-а и вызове представления вызываются эти методы."

# e3e4bf02bed24ac98f5ad0fc4505f232
#: ../../ref/contrib/flatpages.txt:142
#, fuzzy
msgid ""
"Note that the order of :setting:`MIDDLEWARE` matters. Generally, you can "
"put :class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware` "
"at the end of the list. This means it will run first when processing the "
"response, and ensures that any other response-processing middleware see the "
"real flatpage response rather than the 404."
msgstr ""
"Обратите внимание, порядок :setting:`MIDDLEWARE_CLASSES` важен. В общем вы "
"можете указать :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` в конце списка. Он будет выполнен первым при "
"обработке ответа, и все остальные промежуточные слои(middleware) увидят "
"ответ со страницей, а не 404."

# 30e909fdeff143f694d2ee91dc023101
#: ../../ref/contrib/flatpages.txt:148
msgid ""
"For more on middleware, read the :doc:`middleware docs </topics/http/"
"middleware>`."
msgstr ""
"Подробнее смотрите в разделе о :doc:`промежуточных слоях </topics/http/"
"middleware>`."

# 63b52545821440b1ae1682bd885376fc
#: ../../ref/contrib/flatpages.txt:151
msgid "Ensure that your 404 template works"
msgstr "Убедитесь, что ваш 404 шаблон работает"

# f7c82fba0d8b42b0a4719bdcb61dab66
#: ../../ref/contrib/flatpages.txt:153
msgid ""
"Note that the :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` only steps in once another view has successfully "
"produced a 404 response. If another view or middleware class attempts to "
"produce a 404 but ends up raising an exception instead, the response will "
"become an HTTP 500 (\"Internal Server Error\") and the :class:`~django."
"contrib.flatpages.middleware.FlatpageFallbackMiddleware` will not attempt to "
"serve a flat page."
msgstr ""
"Обратите внимание, :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` выполняет, только если другое представление "
"вернуло 404 ответ. Если другое представление или промежуточный слой "
"попытается вернуть 404 и получит исключение, ответ будет HTTP 500 "
"(\"Internal Server Error\") и :class:`~django.contrib.flatpages.middleware."
"FlatpageFallbackMiddleware` не будет выполнен."

# e81a5d56363d4098b4b71aa87829f82e
#: ../../ref/contrib/flatpages.txt:165
msgid "How to add, change and delete flatpages"
msgstr "Как добавить, изменить и удалить статические страницы"

# 40bf244adf6342b38fa438ffef48ff1f
#: ../../ref/contrib/flatpages.txt:170
msgid "Via the admin interface"
msgstr "Через интерфейс администратора"

# 0b515a44e4c6438fae0aa108ef92a641
#: ../../ref/contrib/flatpages.txt:172
msgid ""
"If you've activated the automatic Django admin interface, you should see a "
"\"Flatpages\" section on the admin index page. Edit flatpages as you edit "
"any other object in the system."
msgstr ""
"Если вы активировали интерфейс администратора Django, вы увидите раздел "
"\"Flatpages\" в админке. Редактируйте статические страницы как и другие "
"объекты в базе данных."

#: ../../ref/contrib/flatpages.txt:176
msgid ""
"The ``FlatPage`` model has an ``enable_comments`` field that isn't used by "
"``contrib.flatpages``, but that could be useful for your project or third-"
"party apps. It doesn't appear in the admin interface, but you can add it by "
"registering a custom ``ModelAdmin`` for ``FlatPage``::"
msgstr ""
"Модель ``FlatPage`` содержит поле ``enable_comments``, которое не "
"используется ``contrib.flatpages``, но может быть полезно для вашего проекта "
"или приложений. Это поле не доступно через интерфейс администратора, но вы "
"можете добавить его, зарегистрировав собственный ``ModelAdmin`` для "
"``FlatPage``::"

# 40730d7629d3474fa7e6ff37a8dcdffc
#: ../../ref/contrib/flatpages.txt:205
msgid "Via the Python API"
msgstr "Через Python API"

# cb8e5f692aac4b7fb6a42ed319496b2c
#: ../../ref/contrib/flatpages.txt:209
#, fuzzy
msgid ""
"Flatpages are represented by a standard :doc:`Django model </topics/db/"
"models>`, which lives in :source:`django/contrib/flatpages/models.py`. You "
"can access flatpage objects via the :doc:`Django database API </topics/db/"
"queries>`."
msgstr ""
"Статические страницы представлены :doc:`моделью Django </topics/db/models>`, "
"которая находится в `django/contrib/flatpages/models.py`_. Вы можете "
"обратиться к объектам статических страницы через :doc:`Django ORM API </"
"topics/db/queries>`."

# 74e5a0d4b48c47238eeaf216c3f0b4de
#: ../../ref/contrib/flatpages.txt:216
msgid "Check for duplicate flatpage URLs."
msgstr "Проверка уникальности URL статической страницы."

#: ../../ref/contrib/flatpages.txt:218
msgid ""
"If you add or modify flatpages via your own code, you will likely want to "
"check for duplicate flatpage URLs within the same site. The flatpage form "
"used in the admin performs this validation check, and can be imported from "
"``django.contrib.flatpages.forms.FlatpageForm`` and used in your own views."
msgstr ""
"Если вы добавляете или изменяете статические страницы, скорее всего вам "
"необходимо проверять, что URL страницы уникален для сайта. Форма, которая "
"используется в админке, выполняет такую проверку, и может быть импортирована "
"из ``django.contrib.flatpages.forms.FlatpageForm`` для использование в ваших "
"представлениях."

# dc91d6a3dee84e0abbc7ebc5f9c3bc41
#: ../../ref/contrib/flatpages.txt:225
msgid "Flatpage templates"
msgstr "Шаблоны статических страниц"

#: ../../ref/contrib/flatpages.txt:227
msgid ""
"By default, flatpages are rendered via the template :file:`flatpages/default."
"html`, but you can override that for a particular flatpage: in the admin, a "
"collapsed fieldset titled \"Advanced options\" (clicking will expand it) "
"contains a field for specifying a template name. If you're creating a flat "
"page via the Python API you can set the template name as the field "
"``template_name`` on the ``FlatPage`` object."
msgstr ""

#: ../../ref/contrib/flatpages.txt:235
msgid ""
"Creating the :file:`flatpages/default.html` template is your responsibility; "
"in your template directory, create a :file:`flatpages` directory containing "
"a file :file:`default.html`."
msgstr ""

# dcd0aaeabb954bf1b4d725acfa5378b3
#: ../../ref/contrib/flatpages.txt:239
msgid ""
"Flatpage templates are passed a single context variable, ``flatpage``, which "
"is the flatpage object."
msgstr ""

# 4aa4fac3aa864467900dd1ff40127759
#: ../../ref/contrib/flatpages.txt:242
msgid "Here's a sample :file:`flatpages/default.html` template:"
msgstr ""

# 08a343071a9b4e06ab8a13519cc8c3cb
#: ../../ref/contrib/flatpages.txt:256
msgid ""
"Since you're already entering raw HTML into the admin page for a flatpage, "
"both ``flatpage.title`` and ``flatpage.content`` are marked as **not** "
"requiring :ref:`automatic HTML escaping <automatic-html-escaping>` in the "
"template."
msgstr ""

# a64af06abe4142da904f45f3be395a7a
#: ../../ref/contrib/flatpages.txt:262
msgid ""
"Getting a list of :class:`~django.contrib.flatpages.models.FlatPage` objects "
"in your templates"
msgstr ""

# a6cb04a9bc2e4f5eb72b4bc3e7a447f6
#: ../../ref/contrib/flatpages.txt:264
msgid ""
"The flatpages app provides a template tag that allows you to iterate over "
"all of the available flatpages on the :ref:`current site <hooking-into-"
"current-site-from-views>`."
msgstr ""

# 3a135c57530a4f1d9823b1211e28e3be
#: ../../ref/contrib/flatpages.txt:268
msgid ""
"Like all custom template tags, you'll need to :ref:`load its custom tag "
"library <loading-custom-template-libraries>` before you can use it. After "
"loading the library, you can retrieve all current flatpages via the :ttag:"
"`get_flatpages` tag:"
msgstr ""

# 42b21b820ab341d8adb59e2645372bf4
#: ../../ref/contrib/flatpages.txt:286
msgid "Displaying ``registration_required`` flatpages"
msgstr ""

#: ../../ref/contrib/flatpages.txt:288
msgid ""
"By default, the :ttag:`get_flatpages` template tag will only show flatpages "
"that are marked ``registration_required = False``. If you want to display "
"registration-protected flatpages, you need to specify an authenticated user "
"using a ``for`` clause."
msgstr ""

# 9a92684d082844b29211a758110f9ca2
# 8c7ad37953b84c1bb99fb016ac97ef86
#: ../../ref/contrib/flatpages.txt:293 ../../ref/contrib/flatpages.txt:311
msgid "For example:"
msgstr ""

# 4b9864e52d154313915afe4a44a1d6b9
#: ../../ref/contrib/flatpages.txt:299
msgid ""
"If you provide an anonymous user, :ttag:`get_flatpages` will behave the same "
"as if you hadn't provided a user -- i.e., it will only show you public "
"flatpages."
msgstr ""

# 8d5b1fa277634a878a94c608dc1c2bdf
#: ../../ref/contrib/flatpages.txt:304
msgid "Limiting flatpages by base URL"
msgstr ""

# 8bc4a40494724d60bd6352f90ffbaebf
#: ../../ref/contrib/flatpages.txt:306
msgid ""
"An optional argument, ``starts_with``, can be applied to limit the returned "
"pages to those beginning with a particular base URL. This argument may be "
"passed as a string, or as a variable to be resolved from the context."
msgstr ""

#: ../../ref/contrib/flatpages.txt:320
msgid "Integrating with :mod:`django.contrib.sitemaps`"
msgstr ""

#: ../../ref/contrib/flatpages.txt:326
msgid ""
"The :class:`sitemaps.FlatPageSitemap <django.contrib.flatpages.sitemaps."
"FlatPageSitemap>` class looks at all publicly visible :mod:`~django.contrib."
"flatpages` defined for the current :setting:`SITE_ID` (see the :mod:`sites "
"documentation <django.contrib.sites>`) and creates an entry in the sitemap. "
"These entries include only the :attr:`~django.contrib.sitemaps.Sitemap."
"location` attribute -- not :attr:`~django.contrib.sitemaps.Sitemap."
"lastmod`, :attr:`~django.contrib.sitemaps.Sitemap.changefreq` or :attr:"
"`~django.contrib.sitemaps.Sitemap.priority`."
msgstr ""

#: ../../ref/contrib/flatpages.txt:337
msgid "Example"
msgstr ""

#: ../../ref/contrib/flatpages.txt:339
msgid "Here's an example of a URLconf using :class:`FlatPageSitemap`::"
msgstr ""

# 88b0df1fbdf1437aa192d570e62c0715
#~ msgid "Here are some examples of flatpages on Django-powered sites:"
#~ msgstr "Вот пример статических страниц сайтов, сделанных на Django:"

# 4e63a8ec02844f3d813b544f0f4ca444
#~ msgid "http://www.lawrence.com/about/contact/"
#~ msgstr "http://www.lawrence.com/about/contact/"

# c00c0a011cb8402b8d77140f09a46d3d
#~ msgid "http://www2.ljworld.com/site/rules/"
#~ msgstr "http://www2.ljworld.com/site/rules/"

#~ msgid "The ``enable_comments`` field was removed from ``FlatPageAdmin``."
#~ msgstr "Поле ``enable_comments`` было удалено из ``FlatPageAdmin``."
