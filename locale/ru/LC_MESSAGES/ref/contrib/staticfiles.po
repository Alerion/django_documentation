# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012.
# Dmitriy Kostochko <alerion.um@gmail.com>, 2013, 2014, 2015, 2016.
# Dmitriy Nikitin <brain2dump@gmail.com>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-03 16:48+0300\n"
"PO-Revision-Date: 2018-06-11 19:13+0300\n"
"Last-Translator: Dmitriy Nikitin <brain2dump@gmail.com>\n"
"Language-Team: русский <>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.7\n"

# c9f1a58787fd4a268eb2384fa0e5a96f
#: ../../ref/contrib/staticfiles.txt:3
#, fuzzy
msgid "The ``staticfiles`` app"
msgstr "Приложения для работы со статическими файлами"

# a561bf6c8f744ddd8b2ac6d320943939
#: ../../ref/contrib/staticfiles.txt:8
msgid ""
"``django.contrib.staticfiles`` collects static files from each of your "
"applications (and any other places you specify) into a single location that "
"can easily be served in production."
msgstr ""
"``django.contrib.staticfiles`` собирает статические файлы со всех ваших "
"приложений (и остальных мест, которые вы укажите) в одном месте, что "
"позволяет легко настроить выдачу статических файлов на боевом сервере."

# 900b1f07b0ff48158d950037dc9ed825
#: ../../ref/contrib/staticfiles.txt:14
msgid ""
"For an introduction to the static files app and some usage examples, see :"
"doc:`/howto/static-files/index`. For guidelines on deploying static files, "
"see :doc:`/howto/static-files/deployment`."
msgstr ""
"Примеры использования этого приложения для работы со статикой можно найти в "
"разделе :doc:`/howto/static-files/index`. Как работать со статикой на боевом "
"сервере описано в разделе :doc:`/howto/static-files/deployment`."

# 4c4165c2793f45a5a725c47c8d5763e2
#: ../../ref/contrib/staticfiles.txt:21
msgid "Settings"
msgstr "Настройки"

# 4bd86afc6e0347c086a86dc38e1fde5b
#: ../../ref/contrib/staticfiles.txt:23
msgid ""
"See :ref:`staticfiles settings <settings-staticfiles>` for details on the "
"following settings:"
msgstr ""
"Смотрите :ref:`описание настроек приложения staticfiless <settings-"
"staticfiles>`:"

# cca443c7eec145368ace52eb9f2ac626
#: ../../ref/contrib/staticfiles.txt:26
msgid ":setting:`STATIC_ROOT`"
msgstr ":setting:`STATIC_ROOT`"

# 216046885f494b8094b7fa75a8493530
#: ../../ref/contrib/staticfiles.txt:27
msgid ":setting:`STATIC_URL`"
msgstr ":setting:`STATIC_URL`"

# abe1a1f914ff4343b881888c18d24a7a
#: ../../ref/contrib/staticfiles.txt:28
msgid ":setting:`STATICFILES_DIRS`"
msgstr ":setting:`STATICFILES_DIRS`"

# 72a6bc9af71c462fad47d8c7b74fffbf
#: ../../ref/contrib/staticfiles.txt:29
msgid ":setting:`STATICFILES_STORAGE`"
msgstr ":setting:`STATICFILES_STORAGE`"

# b3117be4c07045e2b866f3270bc491d4
#: ../../ref/contrib/staticfiles.txt:30
msgid ":setting:`STATICFILES_FINDERS`"
msgstr ":setting:`STATICFILES_FINDERS`"

# 5a07569ee86944dd9eee6b4a529f9190
#: ../../ref/contrib/staticfiles.txt:33
msgid "Management Commands"
msgstr "Команды"

# 261ebb11879a4046a32ee91b304d2002
#: ../../ref/contrib/staticfiles.txt:35
msgid "``django.contrib.staticfiles`` exposes three management commands."
msgstr "``django.contrib.staticfiles`` предоставляет три команды."

# 532a33ac52af402da019cbb9ed6219d3
#: ../../ref/contrib/staticfiles.txt:38
msgid "``collectstatic``"
msgstr "``collectstatic``"

# ce51182a71514dd1ac2b7d72cd93e056
#: ../../ref/contrib/staticfiles.txt:42
msgid "Collects the static files into :setting:`STATIC_ROOT`."
msgstr "Собирает статические файлы в :setting:`STATIC_ROOT`."

# dd3e0232b7a5465793be5625222ea75f
#: ../../ref/contrib/staticfiles.txt:44
msgid ""
"Duplicate file names are by default resolved in a similar way to how "
"template resolution works: the file that is first found in one of the "
"specified locations will be used. If you're confused, the :djadmin:"
"`findstatic` command can help show you which files are found."
msgstr ""
"Одинаковые имена файлов обрабатываются как и шаблоны: будет использоваться "
"первый найденный файл. Если вы запутались, команда :djadmin:`findstatic` "
"может показать какой конкретно файл используется."

#: ../../ref/contrib/staticfiles.txt:49
msgid ""
"On subsequent ``collectstatic`` runs (if ``STATIC_ROOT`` isn't empty), files "
"are copied only if they have a modified timestamp greater than the timestamp "
"of the file in ``STATIC_ROOT``. Therefore if you remove an application from :"
"setting:`INSTALLED_APPS`, it's a good idea to use the :option:`collectstatic "
"--clear` option in order to remove stale static files."
msgstr ""
"При последующем запуске ``collectstatic`` (если ``STATIC_ROOT`` не пустой), "
"файлы копируются, только если время их изменения больше, чем у файла в "
"``STATIC_ROOT``. Также, если вы удалите приложение из :setting:"
"`INSTALLED_APPS`, следует использовать опцию :option:`collectstatic --"
"clear`, чтобы удалить неиспользуемые статические файлы."

# 7cf7eb80185545c2823d63973d710afe
#: ../../ref/contrib/staticfiles.txt:55
msgid ""
"Files are searched by using the :setting:`enabled finders "
"<STATICFILES_FINDERS>`. The default is to look in all locations defined in :"
"setting:`STATICFILES_DIRS` and in the ``'static'`` directory of apps "
"specified by the :setting:`INSTALLED_APPS` setting."
msgstr ""
"Файлы ищутся используя бэкенды из :setting:`enabled finders "
"<STATICFILES_FINDERS>`. По умолчанию проверяются каталоги из :setting:"
"`STATICFILES_DIRS` и подкаталоги ``'static'`` приложений из :setting:"
"`INSTALLED_APPS`."

# 9aed5e535a7e483091939ac1fee4d7a7
#: ../../ref/contrib/staticfiles.txt:60
msgid ""
"The :djadmin:`collectstatic` management command calls the :meth:`~django."
"contrib.staticfiles.storage.StaticFilesStorage.post_process` method of the :"
"setting:`STATICFILES_STORAGE` after each run and passes a list of paths that "
"have been found by the management command. It also receives all command line "
"options of :djadmin:`collectstatic`. This is used by the :class:`~django."
"contrib.staticfiles.storage.CachedStaticFilesStorage` by default."
msgstr ""
"Команда :djadmin:`collectstatic` вызывает метод :meth:`~django.contrib."
"staticfiles.storage.StaticFilesStorage.post_process` бэкенда :setting:"
"`STATICFILES_STORAGE` и передает список найденных файлов. Также передаются "
"все опции переданные при вызове :djadmin:`collectstatic`. По умолчанию "
"используется :class:`~django.contrib.staticfiles.storage."
"CachedStaticFilesStorage`."

# f60aaeb868ba4e9ca04549366e72d401
#: ../../ref/contrib/staticfiles.txt:68
msgid ""
"By default, collected files receive permissions from :setting:"
"`FILE_UPLOAD_PERMISSIONS` and collected directories receive permissions "
"from :setting:`FILE_UPLOAD_DIRECTORY_PERMISSIONS`. If you would like "
"different permissions for these files and/or directories, you can subclass "
"either of the :ref:`static files storage classes <staticfiles-storages>` and "
"specify the ``file_permissions_mode`` and/or ``directory_permissions_mode`` "
"parameters, respectively. For example::"
msgstr ""
"По умолчанию, созданные файлы получают права доступа из :setting:"
"`FILE_UPLOAD_PERMISSIONS`, а каталоги из :setting:"
"`FILE_UPLOAD_DIRECTORY_PERMISSIONS`. Если вы хотите использовать другие "
"права доступа для файлов и/или каталогов, вы можете создать дочерний класс :"
"ref:`бэкенда статических файлов <staticfiles-storages>` и указать "
"``file_permissions_mode`` и/или ``directory_permissions_mode`` параметры "
"соответственно. Например::"

# effa5a47424445f4b21af14a0a56fe18
#: ../../ref/contrib/staticfiles.txt:84
msgid ""
"Then set the :setting:`STATICFILES_STORAGE` setting to ``'path.to."
"MyStaticFilesStorage'``."
msgstr ""
"Теперь поменяйте настройку :setting:`STATICFILES_STORAGE` на ``'path.to."
"MyStaticFilesStorage'``."

# dd347b7957f34fe79c9517cbffc1743f
#: ../../ref/contrib/staticfiles.txt:89
msgid "Some commonly used options are:"
msgstr "Обычно используются следующие параметры:"

# 8f6ccba5b4aa440a996b626bc3ad9ca8
#: ../../ref/contrib/staticfiles.txt:93
msgid "Do NOT prompt the user for input of any kind."
msgstr "Не запрашивать у пользователя ввод каких либо данных."

# df983f17840c4ac993588bb8ab1a20ae
#: ../../ref/contrib/staticfiles.txt:97
msgid ""
"Ignore files or directories matching this glob-style pattern. Use multiple "
"times to ignore more."
msgstr ""
"Игнорировать файлы и каталоги подходящие под шаблон. Используйте несколько "
"раз, если необходимо передать несколько шаблонов."

# 3b3dc4df2cef409a87267e4a769b9004
#: ../../ref/contrib/staticfiles.txt:102
msgid "Do everything except modify the filesystem."
msgstr "Выполнить все операции, кроме тех, которые изменяют файловую систему."

# 5d7b9c7f2685485e8100d5d3b77c127a
#: ../../ref/contrib/staticfiles.txt:106
msgid ""
"Clear the existing files before trying to copy or link the original file."
msgstr "Удалить существующие файлы перед копированием новых."

# 48b4e3b27c5346d89b2040f43d5b7381
#: ../../ref/contrib/staticfiles.txt:110
msgid "Create a symbolic link to each file instead of copying."
msgstr "Создать символическую ссылку для каждого файла вместо копирования."

# 6f3ac062f12f44699bf8dd64d033e5b8
#: ../../ref/contrib/staticfiles.txt:114
msgid ""
"Don't call the :meth:`~django.contrib.staticfiles.storage.StaticFilesStorage."
"post_process` method of the configured :setting:`STATICFILES_STORAGE` "
"storage backend."
msgstr ""
"Не вызывать метод :meth:`~django.contrib.staticfiles.storage."
"StaticFilesStorage.post_process` указанного в :setting:`STATICFILES_STORAGE` "
"бекенда для работы с файлами."

# e6fffed94dae478692f942950d66986f
#: ../../ref/contrib/staticfiles.txt:120
msgid ""
"Don't ignore the common private glob-style patterns ``'CVS'``, ``'.*'`` and "
"``'*~'``."
msgstr ""
"Не игнорировать файлы ``'CVS'``, ``'.*'`` and ``'*~'``(по умолчанию "
"игнорируются)."

# dc0f2a9c4ca64571bc89c2b3f8796d95
#: ../../ref/contrib/staticfiles.txt:123
msgid "For a full list of options, refer to the commands own help by running::"
msgstr "Полный список параметров можно посмотреть выполнив::"

#: ../../ref/contrib/staticfiles.txt:130
msgid "Customizing the ignored pattern list"
msgstr "Настойка списка шаблонов игнорирования"

#: ../../ref/contrib/staticfiles.txt:132
msgid ""
"The default ignored pattern list, ``['CVS', '.*', '*~']``, can be customized "
"in a more persistent way than providing the ``--ignore`` command option at "
"each ``collectstatic`` invocation. Provide a custom :class:`~django.apps."
"AppConfig` class, override the ``ignore_patterns`` attribute of this class "
"and replace ``'django.contrib.staticfiles'`` with that class path in your :"
"setting:`INSTALLED_APPS` setting:"
msgstr ""
"Если вы не хотите при каждом вызове команды ``collectstatic`` использовать "
"опцию ``--ignore`` или хотите изменить список шаблонов по умолчанию "
"(``['CVS', '.*', '*~']``), нужно предоставить собственный класс :class:"
"`~django.apps.AppConfig`. Переопределите атрибут ``ignore_patterns`` и "
"замените ``'django.contrib.staticfiles'`` своим классом в настойке :setting:"
"`INSTALLED_APPS`:"

# 4a6e101f298148f3ad5f29ad8e663ddc
#: ../../ref/contrib/staticfiles.txt:147
#, fuzzy
msgid "``findstatic``"
msgstr "findstatic"

# 42e4b352f2b9427693a382d1ba28f459
#: ../../ref/contrib/staticfiles.txt:151
msgid "Searches for one or more relative paths with the enabled finders."
msgstr ""
"Ищет файлы по указанному относительному пути(или путях) используя активные "
"бэкенды для поиска файлов."

# ef817039e7b141f8b5a119b3810dfeb0
#: ../../ref/contrib/staticfiles.txt:153
msgid "For example::"
msgstr "Например::"

# 948865d8bdb7430b96507ff75d184767
#: ../../ref/contrib/staticfiles.txt:164
msgid ""
"By default, all matching locations are found. To only return the first match "
"for each relative path, use the ``--first`` option::"
msgstr ""
"По умолчанию, выводятся все найденные файлы. Чтобы вернуть только первый "
"найденный файл, используйте параметр ``--first``::"

# 488cfcc0bae040f9b749ef45a96c89c7
#: ../../ref/contrib/staticfiles.txt:171
msgid ""
"This is a debugging aid; it'll show you exactly which static file will be "
"collected for a given path."
msgstr ""
"Предназначена для отладки, чтобы понять какие файлы будут использоваться при "
"сборе статики."

# 8a25c68536aa49e1947c9b3a2592d5e0
#: ../../ref/contrib/staticfiles.txt:174
#, fuzzy
msgid ""
"By setting the ``--verbosity`` flag to 0, you can suppress the extra output "
"and just get the path names::"
msgstr ""
"Установив :djadminopt:`--verbosity` флаг в 0, вы можете отфильтровать лишний "
"вывод и получить только пути к файлам::"

# 8a25c68536aa49e1947c9b3a2592d5e0
#: ../../ref/contrib/staticfiles.txt:181
#, fuzzy
msgid ""
"On the other hand, by setting the ``--verbosity`` flag to 2, you can get all "
"the directories which were searched::"
msgstr ""
"Установив же :djadminopt:`--verbosity` флаг в 2, вы можете увидеть все "
"каталоги, в которых выполняется поиск::"

# 1925c91448cf4e1da3fbddb7aab89e81
#: ../../ref/contrib/staticfiles.txt:196
#, fuzzy
msgid "``runserver``"
msgstr "runserver"

# f499194874794448a9dfe903d8325374
#: ../../ref/contrib/staticfiles.txt:200
#, fuzzy
msgid ""
"Overrides the core :djadmin:`runserver` command if the ``staticfiles`` app "
"is :setting:`installed<INSTALLED_APPS>` and adds automatic serving of static "
"files. File serving doesn't run through :setting:`MIDDLEWARE`."
msgstr ""
"Переопределяет встроенную команду :djadmin:`runserver`, если приложение "
"``staticfiles`` добавлено в :setting:`installed<INSTALLED_APPS>`, которая "
"автоматом добавляет раздачу статических файлов."

# dd347b7957f34fe79c9517cbffc1743f
#: ../../ref/contrib/staticfiles.txt:204
#, fuzzy
msgid "The command adds these options:"
msgstr "Обычно используются следующие параметры:"

# 054476671ad04c96a984215c52ac46d2
#: ../../ref/contrib/staticfiles.txt:208
msgid ""
"Use the ``--nostatic`` option to disable serving of static files with the :"
"doc:`staticfiles </ref/contrib/staticfiles>` app entirely. This option is "
"only available if the :doc:`staticfiles </ref/contrib/staticfiles>` app is "
"in your project's :setting:`INSTALLED_APPS` setting."
msgstr ""
"Используйте ``--nostatic`` чтобы отключить раздачу статических файлов через :"
"doc:`staticfiles </ref/contrib/staticfiles>`. Опция доступна только если "
"приложение :doc:`staticfiles </ref/contrib/staticfiles>` добавлено в :"
"setting:`INSTALLED_APPS`."

# 5b28f0ce53d5454fb26ad834bb94f172
# 1d62382a07ab494cbaccbcac4c376136
#: ../../ref/contrib/staticfiles.txt:213 ../../ref/contrib/staticfiles.txt:231
msgid "Example usage::"
msgstr "Пример использования::"

# 8149ea3f336143f9b06dddeac824556a
#: ../../ref/contrib/staticfiles.txt:219
#, fuzzy
msgid ""
"Use the ``--insecure`` option to force serving of static files with the :doc:"
"`staticfiles </ref/contrib/staticfiles>` app even if the :setting:`DEBUG` "
"setting is ``False``. By using this you acknowledge the fact that it's "
"**grossly inefficient** and probably **insecure**. This is only intended for "
"local development, should **never be used in production** and is only "
"available if the :doc:`staticfiles </ref/contrib/staticfiles>` app is in "
"your project's :setting:`INSTALLED_APPS` setting."
msgstr ""
"Используйте ``--insecure`` чтобы раздавать статические файлы через :doc:"
"`staticfiles </ref/contrib/staticfiles>` даже при :setting:`DEBUG` равном "
"``False``. Помните, что это **крайне неэффективно** и возможно "
"**небезопасно**. Используйте только при разработке, **никогда не используйте "
"на боевом сервере**. Опция доступна только если приложение :doc:`staticfiles "
"</ref/contrib/staticfiles>` добавлено в :setting:`INSTALLED_APPS`. :djadmin:"
"`runserver` ``--insecure`` не работает с :class:`~django.contrib.staticfiles."
"storage.CachedStaticFilesStorage`."

#: ../../ref/contrib/staticfiles.txt:227
msgid ""
"``--insecure`` doesn't work with :class:`~django.contrib.staticfiles.storage."
"ManifestStaticFilesStorage` or :class:`~django.contrib.staticfiles.storage."
"CachedStaticFilesStorage`."
msgstr ""

# b19036999ee94b9abf9f6d60ca36665e
#: ../../ref/contrib/staticfiles.txt:238
msgid "Storages"
msgstr "Бэкенды"

# 5786fe40eb8d4080a71458c0159e456d
#: ../../ref/contrib/staticfiles.txt:241
#, fuzzy
msgid "``StaticFilesStorage``"
msgstr "StaticFilesStorage"

# eb5268a4f9f6460f8a3af135c483b692
#: ../../ref/contrib/staticfiles.txt:245
msgid ""
"A subclass of the :class:`~django.core.files.storage.FileSystemStorage` "
"storage backend that uses the :setting:`STATIC_ROOT` setting as the base "
"file system location and the :setting:`STATIC_URL` setting respectively as "
"the base URL."
msgstr ""
"Наследуется от :class:`~django.core.files.storage.FileSystemStorage`, "
"используйте :setting:`STATIC_ROOT` как расположение файлов и :setting:"
"`STATIC_URL` как основной URL."

# f39bff57f2224d97ba5191268a6ee3a9
#: ../../ref/contrib/staticfiles.txt:252
msgid ""
"This method is called by the :djadmin:`collectstatic` management command "
"after each run and gets passed the local storages and paths of found files "
"as a dictionary, as well as the command line options."
msgstr ""
"Этот метод вызывается командой :djadmin:`collectstatic`, передается словарь "
"из бэкендов и найденных файлов, а также параметры переданные при вызове "
"команды."

# d8c8c9b982bf4d8b8cb063a4ec9d9aa2
#: ../../ref/contrib/staticfiles.txt:256
msgid ""
"The :class:`~django.contrib.staticfiles.storage.CachedStaticFilesStorage` "
"uses this behind the scenes to replace the paths with their hashed "
"counterparts and update the cache appropriately."
msgstr ""
":class:`~django.contrib.staticfiles.storage.CachedStaticFilesStorage` "
"использует этот метод, чтобы подменить путь на хешированную версию и "
"соответственно обновить кэш при необходимости."

# 5786fe40eb8d4080a71458c0159e456d
#: ../../ref/contrib/staticfiles.txt:261
#, fuzzy
msgid "``ManifestStaticFilesStorage``"
msgstr "ManifestStaticFilesStorage"

# e6424898c59b43aa906749c3b61acde1
#: ../../ref/contrib/staticfiles.txt:265
msgid ""
"A subclass of the :class:`~django.contrib.staticfiles.storage."
"StaticFilesStorage` storage backend which stores the file names it handles "
"by appending the MD5 hash of the file's content to the filename. For "
"example, the file ``css/styles.css`` would also be saved as ``css/"
"styles.55e7cbb9ba48.css``."
msgstr ""
"Подкласс :class:`~django.contrib.staticfiles.storage.StaticFilesStorage`, "
"который кеширует файлы добавляя MD5 хеш содержимого файла к его названию. "
"Например, файл ``css/styles.css`` будет сохранен как ``css/"
"styles.55e7cbb9ba48.css``."

# 22d8b65cd8994e819a682cf723f3a93d
#: ../../ref/contrib/staticfiles.txt:270
msgid ""
"The purpose of this storage is to keep serving the old files in case some "
"pages still refer to those files, e.g. because they are cached by you or a "
"3rd party proxy server. Additionally, it's very helpful if you want to apply "
"`far future Expires headers`_ to the deployed files to speed up the load "
"time for subsequent page visits."
msgstr ""
"Этот бэкенд необходим, чтобы раздавать старые версии файлов, если они все "
"еще используются некоторыми страницами, например, если страницы кэшированы "
"вами или прокси-сервером. Также, это полезно при `большом значении заголовка "
"Expires <http://developer.yahoo.com/performance/rules.html#expires>`_ для "
"статических файлов, чтобы ускорить загрузку страниц."

# 06cb4867d7f34defa66f00574a35b68e
#: ../../ref/contrib/staticfiles.txt:276
msgid ""
"The storage backend automatically replaces the paths found in the saved "
"files matching other saved files with the path of the cached copy (using "
"the :meth:`~django.contrib.staticfiles.storage.StaticFilesStorage."
"post_process` method). The regular expressions used to find those paths "
"(``django.contrib.staticfiles.storage.HashedFilesMixin.patterns``) by "
"default covers the `@import`_ rule and `url()`_ statement of `Cascading "
"Style Sheets`_. For example, the ``'css/styles.css'`` file with the content"
msgstr ""
"Бэкенд автоматом заменяет пути, найденные в статических файлах, которые "
"указывают на другие статические файлы, на кешированные версии (используя "
"метод :meth:`~django.contrib.staticfiles.storage.StaticFilesStorage."
"post_process`). Регулярки, которые используются для этого (``django.contrib."
"staticfiles.storage.HashedFilesMixin.patterns``), по умолчанию заменяют "
"`@import`_ и `url()`_ в `Cascading Style Sheets`_. Например, ``'css/styles."
"css'``, содержащий"

# 2e660b4b35c64913b428e0adb731f437
#: ../../ref/contrib/staticfiles.txt:289
msgid ""
"would be replaced by calling the :meth:`~django.core.files.storage.Storage."
"url` method of the ``ManifestStaticFilesStorage`` storage backend, "
"ultimately saving a ``'css/styles.55e7cbb9ba48.css'`` file with the "
"following content:"
msgstr ""
"был бы заменен вызовом метода :meth:`~django.core.files.storage.Storage.url` "
"бэкенда ``ManifestStaticFilesStorage``, и сохранен как ``'css/"
"styles.55e7cbb9ba48.css'``, содержащий:"

#: ../../ref/contrib/staticfiles.txt:300
msgid ""
"Since static files might reference other static files that need to have "
"their paths replaced, multiple passes of replacing paths may be needed until "
"the file hashes converge. To prevent an infinite loop due to hashes not "
"converging (for example, if ``'foo.css'`` references ``'bar.css'`` which "
"references ``'foo.css'``) there is a maximum number of passes before post-"
"processing is abandoned. In cases with a large number of references, a "
"higher number of passes might be needed. Increase the maximum number of "
"passes by subclassing ``ManifestStaticFilesStorage`` and setting the "
"``max_post_process_passes`` attribute. It defaults to 5."
msgstr ""

# fe25484be635446cb8cebf390b06a2ed
#: ../../ref/contrib/staticfiles.txt:310
msgid ""
"To enable the ``ManifestStaticFilesStorage`` you have to make sure the "
"following requirements are met:"
msgstr ""
"Чтобы включить ``ManifestStaticFilesStorage``, необходимо выполнить "
"следующие действия:"

# effa5a47424445f4b21af14a0a56fe18
#: ../../ref/contrib/staticfiles.txt:313
msgid ""
"the :setting:`STATICFILES_STORAGE` setting is set to ``'django.contrib."
"staticfiles.storage.ManifestStaticFilesStorage'``"
msgstr ""
"указать в :setting:`STATICFILES_STORAGE` ``'django.contrib.staticfiles."
"storage.ManifestStaticFilesStorage'``"

# fd72b76a319f40dabef4c14102bab1e8
#: ../../ref/contrib/staticfiles.txt:315
msgid "the :setting:`DEBUG` setting is set to ``False``"
msgstr "установить :setting:`DEBUG` в ``False``"

# 937c213f087c4b75b950cbcd165324f9
#: ../../ref/contrib/staticfiles.txt:316
msgid ""
"you've collected all your static files by using the :djadmin:`collectstatic` "
"management command"
msgstr "вы собрали статические файлы командой :djadmin:`collectstatic`"

# 94b03d678a0e47a4ac3a76f447db9653
#: ../../ref/contrib/staticfiles.txt:319
msgid ""
"Since creating the MD5 hash can be a performance burden to your website "
"during runtime, ``staticfiles`` will automatically store the mapping with "
"hashed names for all processed files in a file called ``staticfiles.json``. "
"This happens once when you run the :djadmin:`collectstatic` management "
"command."
msgstr ""
"Т.к. вычисление MD5 хеша может понизить производительность приложения, "
"``staticfiles`` автоматически сохраняет соответствия названий файлов с "
"новыми в файле ``staticfiles.json``. Это выполняется один раз при вызове "
"команды :djadmin:`collectstatic`."

#: ../../ref/contrib/staticfiles.txt:327
msgid ""
"If a file isn't found in the ``staticfiles.json`` manifest at runtime, a "
"``ValueError`` is raised. This behavior can be disabled by subclassing "
"``ManifestStaticFilesStorage`` and setting the ``manifest_strict`` attribute "
"to ``False`` -- nonexistent paths will remain unchanged."
msgstr ""

#: ../../ref/contrib/staticfiles.txt:332
msgid ""
"Due to the requirement of running :djadmin:`collectstatic`, this storage "
"typically shouldn't be used when running tests as ``collectstatic`` isn't "
"run as part of the normal test setup. During testing, ensure that the :"
"setting:`STATICFILES_STORAGE` setting is set to something else like "
"``'django.contrib.staticfiles.storage.StaticFilesStorage'`` (the default)."
msgstr ""
"Т.к. этот бэкенд требует выполнения :djadmin:`collectstatic`, его не следует "
"использовать при тестах т.к. ``collectstatic`` не выполняется при запуске "
"тестов. При тестировании укажите в настройках :setting:"
"`STATICFILES_STORAGE`  например ``'django.contrib.staticfiles.storage."
"StaticFilesStorage'`` (используется по умолчанию)."

# 6e6fcbb1f52c41e59cc448e6dbb7391e
#: ../../ref/contrib/staticfiles.txt:340
msgid ""
"The method that is used when creating the hashed name of a file. Needs to "
"return a hash for the given file name and content. By default it calculates "
"a MD5 hash from the content's chunks as mentioned above. Feel free to "
"override this method to use your own hashing algorithm."
msgstr ""
"Метод, который вычисляет хеш для файла. Должен вернуть хеш названия и "
"содержимого файла. По умолчанию вычисляет MD5 хеш содержимого файла, как "
"описано выше. Вы можете переопределить этот метод и использовать собственный "
"алгоритм хеширования."

# 4cc863a201dd4fcebbad1cfb5fbc2328
#: ../../ref/contrib/staticfiles.txt:352
#, fuzzy
msgid "``CachedStaticFilesStorage``"
msgstr "CachedStaticFilesStorage"

# d691734466b74cd98ab15216eb4971cb
#: ../../ref/contrib/staticfiles.txt:356
msgid ""
"``CachedStaticFilesStorage`` is a similar class like the :class:`~django."
"contrib.staticfiles.storage.ManifestStaticFilesStorage` class but uses "
"Django's :doc:`caching framework</topics/cache>` for storing the hashed "
"names of processed files instead of a static manifest file called "
"``staticfiles.json``. This is mostly useful for situations in which you "
"don't have access to the file system."
msgstr ""
"``CachedStaticFilesStorage`` аналогичен :class:`~django.contrib.staticfiles."
"storage.ManifestStaticFilesStorage`, но использует :doc:`кеш</topics/cache>` "
"Django, для сохранения названий файлов, вместо ``staticfiles.json``. Это "
"может быть полезно, если у вас нет доступа к файловой системе."

# 94b03d678a0e47a4ac3a76f447db9653
#: ../../ref/contrib/staticfiles.txt:363
msgid ""
"If you want to override certain options of the cache backend the storage "
"uses, simply specify a custom entry in the :setting:`CACHES` setting named "
"``'staticfiles'``. It falls back to using the ``'default'`` cache backend."
msgstr ""
"Если вы хотите настроить кеш, используйте запись в настройке :setting:"
"`CACHES` с ключом ``'staticfiles'``. По умолчанию используется кеш "
"``'default'``."

#: ../../ref/contrib/staticfiles.txt:369
msgid ""
"``CachedStaticFilesStorage`` isn't recommended --  in almost all cases "
"``ManifestStaticFilesStorage`` is a better choice. There are several "
"performance penalties when using ``CachedStaticFilesStorage`` since a cache "
"miss requires hashing files at runtime. Remote file storage require several "
"round-trips to hash a file on a cache miss, as several file accesses are "
"required to ensure that the file hash is correct in the case of nested file "
"paths."
msgstr ""

# 64de1514e45947afaceddbd56e4596f6
#: ../../ref/contrib/staticfiles.txt:378
msgid "Finders Module"
msgstr "Модуль поиска файлов"

# 7db67149f8a941d0877356723aff50db
#: ../../ref/contrib/staticfiles.txt:380
msgid ""
"``staticfiles`` finders has a ``searched_locations`` attribute which is a "
"list of directory paths in which the finders searched. Example usage::"
msgstr ""
"Модуль поиска файлов ``staticfiles`` содержит атрибут "
"``searched_locations``, который содержит список каталогов, где происходит "
"поиск файлов. Например::"

# 0b82e73c22094c49934d4bc4f37e20a9
#: ../../ref/contrib/staticfiles.txt:389
msgid "Other Helpers"
msgstr "Дополнительные функции"

# 0599ec03d1c145729060f606f757ace2
#: ../../ref/contrib/staticfiles.txt:391
msgid ""
"There are a few other helpers outside of the :mod:`staticfiles <django."
"contrib.staticfiles>` app to work with static files:"
msgstr ""
"Есть дополнительные функции вне :mod:`staticfiles <django.contrib."
"staticfiles>` для работы со статическими файлами:"

# 03aa8831fd50462b9be4137b07905923
#: ../../ref/contrib/staticfiles.txt:395
msgid ""
"The :func:`django.template.context_processors.static` context processor "
"which adds :setting:`STATIC_URL` to every template context rendered with :"
"class:`~django.template.RequestContext` contexts."
msgstr ""
"Контекстный процессор :func:`django.core.context_processors.static`, который "
"добавляет :setting:`STATIC_URL` в контекст каждого шаблона отрендеренного с "
"использованием :class:`~django.template.RequestContext`."

# ecbe209e9db8472399cd4b21618dcde3
#: ../../ref/contrib/staticfiles.txt:399
#, fuzzy
msgid ""
"The builtin template tag :ttag:`static` which takes a path and urljoins it "
"with the static prefix :setting:`STATIC_URL`. If ``django.contrib."
"staticfiles`` is installed, the tag uses the ``url()`` method of the :"
"setting:`STATICFILES_STORAGE` instead."
msgstr ""
"Шаблонный тег :ttag:`static`, который принимает путь и объединяет его с :"
"setting:`STATIC_URL`."

# 416149bb61a142fcb4c0bb495e076638
#: ../../ref/contrib/staticfiles.txt:404
msgid ""
"The builtin template tag :ttag:`get_static_prefix` which populates a "
"template variable with the static prefix :setting:`STATIC_URL` to be used as "
"a variable or directly."
msgstr ""
"Шаблонный тег :ttag:`get_static_prefix`, который создает в шаблоне "
"переменную или просто выводит значение :setting:`STATIC_URL`."

# da72015b89ca4c9fa50ed8a0a66caba1
#: ../../ref/contrib/staticfiles.txt:408
msgid ""
"The similar template tag :ttag:`get_media_prefix` which works like :ttag:"
"`get_static_prefix` but uses :setting:`MEDIA_URL`."
msgstr ""
"Шаблонный тег :ttag:`get_media_prefix`, который работает как и :ttag:"
"`get_static_prefix`, но для :setting:`MEDIA_URL`."

# efe2db1e452a4ff89208684b38daf952
#: ../../ref/contrib/staticfiles.txt:414
msgid "Static file development view"
msgstr "Представления для разработки"

# fdfb9c2dbef44057a399f65551079337
#: ../../ref/contrib/staticfiles.txt:418
msgid ""
"The static files tools are mostly designed to help with getting static files "
"successfully deployed into production. This usually means a separate, "
"dedicated static file server, which is a lot of overhead to mess with when "
"developing locally. Thus, the ``staticfiles`` app ships with a **quick and "
"dirty helper view** that you can use to serve files locally in development."
msgstr ""
"Инструменты для работой со статикой предназначены для простого развертывания "
"на боевом сервере. Обычно это выделенный сервер, которые не практично "
"использовать при разработке. Поэтому приложение ``staticfiles`` содержит "
"простые представления для раздачи статики dev-сервером."

# 3a77b7ba927c4dc1b172d63995d3d285
#: ../../ref/contrib/staticfiles.txt:429
msgid "This view function serves static files in development."
msgstr "Представление, которое раздает статические файлы при разработке."

# 96663c1f474f4e59b526151de0145bf5
#: ../../ref/contrib/staticfiles.txt:433
msgid "This view will only work if :setting:`DEBUG` is ``True``."
msgstr "Работает только при :setting:`DEBUG` равном ``True``."

# 88f4cf173e5d428a98c5f2558fec79d9
#: ../../ref/contrib/staticfiles.txt:435 ../../ref/contrib/staticfiles.txt:492
msgid ""
"That's because this view is **grossly inefficient** and probably "
"**insecure**. This is only intended for local development, and should "
"**never be used in production**."
msgstr ""
"Потому что представление **крайне неэффективно** и возможно **небезопасно**. "
"Оно предназначено для разработки и **никогда не должно использоваться на "
"боевом сервере**."

# 4323909222d747d8a3366c097884b007
#: ../../ref/contrib/staticfiles.txt:441
msgid ""
"To guess the served files' content types, this view relies on the :py:mod:"
"`mimetypes` module from the Python standard library, which itself relies on "
"the underlying platform's map files. If you find that this view doesn't "
"return proper content types for certain files, it is most likely that the "
"platform's map files need to be updated. This can be achieved, for example, "
"by installing or updating the ``mailcap`` package on a Red Hat distribution, "
"or ``mime-support`` on a Debian distribution."
msgstr ""
"Для определения \"content type\" файлов, представление использует "
"стандартный модуль Python :py:mod:`mimetypes`, который в свою очередь "
"использует системную библиотеку типов файлов. Если представление использует "
"не правильный \"content type\" файлов, скорее всего вам необходимо обновить "
"системную библиотеку. Для Red Hat, например, это пакет ``mailcap``, или "
"``mime-support`` для Debian пакетов."

# 2df92861ee8d45fd8d4f06b853a14a09
#: ../../ref/contrib/staticfiles.txt:449
msgid ""
"This view is automatically enabled by :djadmin:`runserver` (with a :setting:"
"`DEBUG` setting set to ``True``). To use the view with a different local "
"development server, add the following snippet to the end of your primary URL "
"configuration::"
msgstr ""
"Это представление автоматически используется командой :djadmin:`runserver` "
"(при :setting:`DEBUG` равном ``True``). Чтобы использовать его с другим dev-"
"сервером, добавьте следующий код в настройки URL-ов::"

# 470b70c1c4bf408d9ba25329d2a28b53
#: ../../ref/contrib/staticfiles.txt:463
msgid ""
"Note, the beginning of the pattern (``r'^static/'``) should be your :setting:"
"`STATIC_URL` setting."
msgstr ""
"Обратите внимание, что начало URL-шаблона (``r'^static/'``) должно быть "
"равным :setting:`STATIC_URL`."

# 2256d2abfff84c5b9b1512f2aa4c7214
#: ../../ref/contrib/staticfiles.txt:466
msgid ""
"Since this is a bit finicky, there's also a helper function that'll do this "
"for you:"
msgstr ""
"Т.к. это все немного сложно, можно воспользоваться специальной функцией:"

# 8d876022393048f881b95bece54e5b3d
#: ../../ref/contrib/staticfiles.txt:471
msgid ""
"This will return the proper URL pattern for serving static files to your "
"already defined pattern list. Use it like this::"
msgstr ""
"Это вернет правильный URL-шаблон для раздачи статических файлов. Используйте "
"ее следующим образом::"

# df78b89e350a48f3addbd6a60144981c
#: ../../ref/contrib/staticfiles.txt:480
msgid ""
"This will inspect your :setting:`STATIC_URL` setting and wire up the view to "
"serve static files accordingly. Don't forget to set the :setting:"
"`STATICFILES_DIRS` setting appropriately to let ``django.contrib."
"staticfiles`` know where to look for files in addition to files in app "
"directories."
msgstr ""
"Этот код будет использовать значение настройки :setting:`STATIC_URL` для "
"раздачи статических файлов. Не забывайте указать :setting:`STATICFILES_DIRS` "
"чтобы ``django.contrib.staticfiles`` мог найти статические файлы."

# a514793c86604deda9d062c2fb54f2e7
#: ../../ref/contrib/staticfiles.txt:488
msgid ""
"This helper function will only work if :setting:`DEBUG` is ``True`` and "
"your :setting:`STATIC_URL` setting is neither empty nor a full URL such as "
"``http://static.example.com/``."
msgstr ""
"Эта функция работает только при :setting:`DEBUG` равном ``True``, настройка :"
"setting:`STATIC_URL` не может быть пустой или полным URL-ом, таким как "
"``http://static.example.com/``."

# 999f94b5af434f679cbae951ecd5bc32
#: ../../ref/contrib/staticfiles.txt:497
msgid "Specialized test case to support 'live testing'"
msgstr "Специальный test case для \"живого тестирования\""

# 26cd8a388f814afe94871d49ce129c59
#: ../../ref/contrib/staticfiles.txt:501
msgid ""
"This unittest TestCase subclass extends :class:`django.test."
"LiveServerTestCase`."
msgstr ""
"Этот unittest TestCase является дочерним классом :class:`django.test."
"LiveServerTestCase`."

# e86c9d0c26be41adb4623bb92b6059f9
#: ../../ref/contrib/staticfiles.txt:503
msgid ""
"Just like its parent, you can use it to write tests that involve running the "
"code under test and consuming it with testing tools through HTTP (e.g. "
"Selenium, PhantomJS, etc.), because of which it's needed that the static "
"assets are also published."
msgstr ""
"Как и родительский класс, позволяет писать тесты с использованием Selenium, "
"PhantomJS, и др., для которых необходим доступ к статическим файлам."

# ae368c29bf594e42b9055140754e82f1
#: ../../ref/contrib/staticfiles.txt:508
msgid ""
"But given the fact that it makes use of the :func:`django.contrib."
"staticfiles.views.serve` view described above, it can transparently overlay "
"at test execution-time the assets provided by the ``staticfiles`` finders. "
"This means you don't need to run :djadmin:`collectstatic` before or as a "
"part of your tests setup."
msgstr ""
"Для раздачи статики использует :func:`django.contrib.staticfiles.views."
"serve`. Поэтому вам не нужно выполнять :djadmin:`collectstatic` перед "
"запуском тестов."

# f017f69353484d299d07ba167819789d
#~ msgid "The ``--no-input`` alias was added."
#~ msgstr "Была добавлена опция ``--no-input``."

# 0a86eebf920d49b9ba1030c6392a554e
#~ msgid ""
#~ "you use the ``staticfiles`` :ttag:`static<staticfiles-static>` template "
#~ "tag to refer to your static files in your templates"
#~ msgstr ""
#~ "используйте шаблонный тег ``staticfiles`` :ttag:`static<staticfiles-"
#~ "static>` при обращении к статическим файлам"

# 7522ad3bbf2341d1bbc5f864fb6d0359
#~ msgid "Template tags"
#~ msgstr "Шаблонные теги"

# 6a267332a6bd44ca9b65f48c2fb62362
#~ msgid "static"
#~ msgstr "static"

# ebcf633ef2e9422caac7a74b0c6d590c
#~ msgid ""
#~ "Uses the configured :setting:`STATICFILES_STORAGE` storage to create the "
#~ "full URL for the given relative path, e.g.:"
#~ msgstr ""
#~ "Использует бэкенд указанный в :setting:`STATICFILES_STORAGE` для создания "
#~ "полного URL-а для переданного относительного пути, например:"

# 2282f6b51c05496b85a24a3282a99a8c
#~ msgid ""
#~ "The previous example is equal to calling the ``url`` method of an "
#~ "instance of :setting:`STATICFILES_STORAGE` with ``\"images/hi.jpg\"``. "
#~ "This is especially useful when using a non-local storage backend to "
#~ "deploy files as documented in :ref:`staticfiles-from-cdn`."
#~ msgstr ""
#~ "Пример выше аналогичен вызову метода ``url`` экземпляра бэкенда из :"
#~ "setting:`STATICFILES_STORAGE` с аргументом ``\"images/hi.jpg\"``. Это "
#~ "очень полезно при работе с файлами на внешних хранилищах, смотрите :ref:"
#~ "`staticfiles-from-cdn`."

# b186e3db3d3a4dfa8c8aeb758d5ca381
#~ msgid ""
#~ "If you'd like to retrieve a static URL without displaying it, you can use "
#~ "a slightly different call:"
#~ msgstr ""
#~ "Если вы хотите получить URL не выводя его, используйте следующий код:"

#~ msgid "Using Jinja2 templates?"
#~ msgstr "Использование шаблонов Jinja2?"

#~ msgid ""
#~ "See :class:`django.template.backends.jinja2.Jinja2` for information on "
#~ "using the ``static`` tag with Jinja2."
#~ msgstr ""
#~ "Смотрите описание :class:`django.template.backends.jinja2.Jinja2`, чтобы "
#~ "узнать как использоват тег ``static`` с Jinja2."

# a046c15267f04525989ac81915ccb8c5
#~ msgid ""
#~ "The ability to override ``file_permissions_mode`` and "
#~ "``directory_permissions_mode`` is new in Django 1.7.  Previously the file "
#~ "permissions always used :setting:`FILE_UPLOAD_PERMISSIONS` and the "
#~ "directory permissions always used :setting:"
#~ "`FILE_UPLOAD_DIRECTORY_PERMISSIONS`."
#~ msgstr ""
#~ "Возможность переопределить ``file_permissions_mode`` и "
#~ "``directory_permissions_mode`` была добавлена в Django 1.7. Раньше всегда "
#~ "использовались права доступа из настроек :setting:"
#~ "`FILE_UPLOAD_PERMISSIONS` и :setting:`FILE_UPLOAD_DIRECTORY_PERMISSIONS`."

# a13e0e849fec428fbe8efb66187d46e4
#~ msgid "The additional output of which directories were searched was added."
#~ msgstr "Был добавлен вывод каталогов, в которых выполняется поиск."

# 3d2e8b96e1a6496787ec2666d3710e10
#~ msgid ""
#~ "This view will now raise an :exc:`~django.http.Http404` exception instead "
#~ "of :exc:`~django.core.exceptions.ImproperlyConfigured` when :setting:"
#~ "`DEBUG` is ``False``."
#~ msgstr ""
#~ "Это представление теперь вызывает исключение :exc:`~django.http.Http404` "
#~ "вместо :exc:`~django.core.exceptions.ImproperlyConfigured`, если :setting:"
#~ "`DEBUG` равна ``False``."

# 50ce954b40264a99a0dc39cb2ffcdcf8
#~ msgid ""
#~ "``StaticLiveServerTestCase`` is new in Django 1.7. Previously its "
#~ "functionality was provided by :class:`django.test.LiveServerTestCase`."
#~ msgstr ""
#~ "``StaticLiveServerTestCase`` добавлен в Django 1.7. Раньше этот "
#~ "функционал был в :class:`django.test.LiveServerTestCase`."

# d93d83f4cf6b4d7caba32045ad9656f0
#~ msgid "The following settings control the behavior of the staticfiles app."
#~ msgstr "Следующие настройки определяют работу приложения ’’staticfiles’’."

# 88f4e78741494f7e835a94fe7c4423e9
#~ msgid "Default: ``[]``"
#~ msgstr "По умолчанию: ``[]``"

# f020ca03c2b44f0b869b1debcf76170a
#~ msgid ""
#~ "This setting defines the additional locations the staticfiles app will "
#~ "traverse if the ``FileSystemFinder`` finder is enabled, e.g. if you use "
#~ "the :djadmin:`collectstatic` or :djadmin:`findstatic` management command "
#~ "or use the static file serving view."
#~ msgstr ""
#~ "Указывает каталоги, в которых бекенд ``FileSystemFinder`` будет искать "
#~ "статические файлы, например, при запуске команды :djadmin:`collectstatic` "
#~ "или :djadmin:`findstatic` или при раздачи файлов через встроенные "
#~ "представления."

# 22ee532ff1624369a0b72c793de0ef1d
#~ msgid ""
#~ "This should be set to a list or tuple of strings that contain full paths "
#~ "to your additional files directory(ies) e.g.::"
#~ msgstr ""
#~ "Это должен быть список или кортеж строк, которые содержат полный путь к "
#~ "каталогу с файлоами, например::"

# c0d863810ffd4924a06e92287f4c43b0
#~ msgid "Prefixes (optional)"
#~ msgstr "Префиксы (необязательны)"

# 6586419ad8c64bbb9b5d3638c829ac8e
#~ msgid ""
#~ "In case you want to refer to files in one of the locations with an "
#~ "additional namespace, you can **optionally** provide a prefix as "
#~ "``(prefix, path)`` tuples, e.g.::"
#~ msgstr ""
#~ "Если вам необходимо раздавать какой-то каталог со статическими файлов "
#~ "через URL с префиксом, вы можете укахать его как ``(prefix, path)``, "
#~ "например::"

# 2cab7f1b3abf4888afe4fd2c8423fbed
#~ msgid "Example:"
#~ msgstr "Например:"

# c862507720314acbb723aaa6241c93a3
#~ msgid ""
#~ "Assuming you have :setting:`STATIC_URL` set ``'/static/'``, the :djadmin:"
#~ "`collectstatic` management command would collect the \"stats\" files in a "
#~ "``'downloads'`` subdirectory of :setting:`STATIC_ROOT`."
#~ msgstr ""
#~ "Предположим :setting:`STATIC_URL` содержим ``'/static/'``, команда :"
#~ "djadmin:`collectstatic` соберет файлы из \"stats\" в подкаталоге "
#~ "``'downloads'`` каталога :setting:`STATIC_ROOT`."

# e3e60394929744d2b88f8b34fac7142c
#~ msgid ""
#~ "This would allow you to refer to the local file ``'/opt/webfiles/stats/"
#~ "polls_20101022.tar.gz'`` with ``'/static/downloads/polls_20101022.tar."
#~ "gz'`` in your templates, e.g.:"
#~ msgstr ""
#~ "Это позволить обращаться к файлу ``'/opt/webfiles/stats/polls_20101022."
#~ "tar.gz'`` по URL-у ``'/static/downloads/polls_20101022.tar.gz'`` в вашем "
#~ "шаблоне, например:"

# 764daf48146e42d39a86100b4ff29e4e
#~ msgid "Default: ``'django.contrib.staticfiles.storage.StaticFilesStorage'``"
#~ msgstr ""
#~ "По умолчанию: ``'django.contrib.staticfiles.storage.StaticFilesStorage'``"

# 6e9a406f24a8405ebb9f6422a27d0a21
#~ msgid ""
#~ "The file storage engine to use when collecting static files with the :"
#~ "djadmin:`collectstatic` management command."
#~ msgstr ""
#~ "Бекенд для работы с файлами, который будет использоваться командой :"
#~ "djadmin:`collectstatic`."

# 1e5ca17820224121a86024040280ff63
#~ msgid ""
#~ "A ready-to-use instance of the storage backend defined in this setting "
#~ "can be found at ``django.contrib.staticfiles.storage."
#~ "staticfiles_storage``."
#~ msgstr ""
#~ "Примеры бекендов можно найти в ``django.contrib.staticfiles.storage."
#~ "staticfiles_storage``."

# c15dbefcd9b74d5095197fd06732e68a
#~ msgid "For an example, see :ref:`staticfiles-from-cdn`."
#~ msgstr "Например,  :ref:`staticfiles-from-cdn`."

# f9c61ce8f78a4bfc8e5feb34adc410fc
#~ msgid "Default::"
#~ msgstr "По умолчанию::"

# f8522805ed794e359c89fcefd72d216d
#~ msgid ""
#~ "The list of finder backends that know how to find static files in various "
#~ "locations."
#~ msgstr "Список бекендов для поиска статических файлов в вашем проекте."

# 29f5dc59e4b2457796bde747408ae428
#~ msgid ""
#~ "The default will find files stored in the :setting:`STATICFILES_DIRS` "
#~ "setting (using ``django.contrib.staticfiles.finders.FileSystemFinder``) "
#~ "and in a ``static`` subdirectory of each app (using ``django.contrib."
#~ "staticfiles.finders.AppDirectoriesFinder``). If multiple files with the "
#~ "same name are present, the first file that is found will be used."
#~ msgstr ""
#~ "По умолчанию включены бекенды, которые находят файлы в каталогах "
#~ "указанных в :setting:`STATICFILES_DIRS` (``django.contrib.staticfiles."
#~ "finders.FileSystemFinder``) и подкаталогах ``static`` приложений "
#~ "(``django.contrib.staticfiles.finders.AppDirectoriesFinder``). Если "
#~ "существует несколько файлов с тем же именем, будет использоваться первый "
#~ "найденный."

# 1b08fe9d40a341e7ae38b5d208dae16c
#~ msgid ""
#~ "One finder is disabled by default: ``django.contrib.staticfiles.finders."
#~ "DefaultStorageFinder``. If added to your :setting:`STATICFILES_FINDERS` "
#~ "setting, it will look for static files in the default file storage as "
#~ "defined by the :setting:`DEFAULT_FILE_STORAGE` setting."
#~ msgstr ""
#~ "``django.contrib.staticfiles.finders.DefaultStorageFinder`` выключен по "
#~ "умолчанию. Если добавить его :setting:`STATICFILES_FINDERS`, он будет "
#~ "искать файлы через бекенд указанный в :setting:`DEFAULT_FILE_STORAGE`."

# 978b67d033e94362a4badebd0653c3ea
#~ msgid ""
#~ "When using the ``AppDirectoriesFinder`` finder, make sure your apps can "
#~ "be found by staticfiles. Simply add the app to the :setting:"
#~ "`INSTALLED_APPS` setting of your site."
#~ msgstr ""
#~ "Используя ``AppDirectoriesFinder``, убедитесь что приложение может быть "
#~ "найдено staticfiles. Просто добавьте его в :setting:`INSTALLED_APPS`."

# 685af4104463400f846cc9a6ff5c3452
#~ msgid ""
#~ "Static file finders are currently considered a private interface, and "
#~ "this interface is thus undocumented."
#~ msgstr ""
#~ "Бекенды для поиска файлов пока что не являются публичным интерфейсом, по "
#~ "этому он не задокументирован."
