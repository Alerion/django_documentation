# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-05 11:28+0300\n"
"PO-Revision-Date: 2015-03-19 15:06+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../ref/contrib/postgres/forms.txt:3
msgid "PostgreSQL specific form fields and widgets"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:5
msgid ""
"All of these fields and widgets are available from the ``django.contrib."
"postgres.forms`` module."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:11
msgid "Fields"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:14
msgid "``SimpleArrayField``"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:18
msgid ""
"A simple field which maps to an array. It is represented by an HTML "
"``<input>``."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:23
msgid "This is a required argument."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:25
msgid ""
"It specifies the underlying form field for the array. This is not used to "
"render any HTML, but it is used to process the submitted data and validate "
"it. For example::"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:47
msgid ""
"This is an optional argument which defaults to a comma: ``,``. This value is "
"used to split the submitted data. It allows you to chain "
"``SimpleArrayField`` for multidimensional data::"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:65
msgid ""
"The field does not support escaping of the delimiter, so be careful in cases "
"where the delimiter is a valid character in the underlying field. The "
"delimiter does not need to be only one character."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:71
msgid ""
"This is an optional argument which validates that the array does not exceed "
"the stated length."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:76
msgid ""
"This is an optional argument which validates that the array reaches at least "
"the stated length."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:79
#: ../../ref/contrib/postgres/forms.txt:150
#: ../../ref/contrib/postgres/forms.txt:175
msgid "User friendly forms"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:81
msgid ""
"``SimpleArrayField`` is not particularly user friendly in most cases, "
"however it is a useful way to format data from a client-side widget for "
"submission to the server."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:86
msgid "``SplitArrayField``"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:90
msgid ""
"This field handles arrays by reproducing the underlying field a fixed number "
"of times."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:95
msgid ""
"This is a required argument. It specifies the form field to be repeated."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:100
msgid "This is the fixed number of times the underlying field will be used."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:104
msgid ""
"By default, this is set to ``False``. When ``False``, each value from the "
"repeated fields is stored. When set to ``True``, any trailing values which "
"are blank will be stripped from the result. If the underlying field has "
"``required=True``, but ``remove_trailing_nulls`` is ``True``, then null "
"values are only allowed at the end, and will be stripped."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:111
msgid "Some examples::"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:142
msgid "``HStoreField``"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:146
msgid ""
"A field which accepts JSON encoded data for an :class:`~django.contrib."
"postgres.fields.HStoreField`. It casts all values (except nulls) to strings. "
"It is represented by an HTML ``<textarea>``."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:152
msgid ""
"``HStoreField`` is not particularly user friendly in most cases, however it "
"is a useful way to format data from a client-side widget for submission to "
"the server."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:158
msgid ""
"On occasions it may be useful to require or restrict the keys which are "
"valid for a given field. This can be done using the :class:`~django.contrib."
"postgres.validators.KeysValidator`."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:164
msgid "Added the ability to store nulls."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:167
msgid "``JSONField``"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:171
msgid ""
"A field which accepts JSON encoded data for a :class:`~django.contrib."
"postgres.fields.JSONField`. It is represented by an HTML ``<textarea>``."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:177
msgid ""
"``JSONField`` is not particularly user friendly in most cases, however it is "
"a useful way to format data from a client-side widget for submission to the "
"server."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:182
msgid "Range Fields"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:184
msgid ""
"This group of fields all share similar functionality for accepting range "
"data. They are based on :class:`~django.forms.MultiValueField`. They treat "
"one omitted value as an unbounded range. They also validate that the lower "
"bound is not greater than the upper bound. All of these fields use :class:"
"`~django.contrib.postgres.forms.RangeWidget`."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:191
msgid "``IntegerRangeField``"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:195
msgid ""
"Based on :class:`~django.forms.IntegerField` and translates its input into :"
"class:`~psycopg2:psycopg2.extras.NumericRange`. Default for :class:`~django."
"contrib.postgres.fields.IntegerRangeField` and :class:`~django.contrib."
"postgres.fields.BigIntegerRangeField`."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:201
msgid "``FloatRangeField``"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:205
msgid ""
"Based on :class:`~django.forms.FloatField` and translates its input into :"
"class:`~psycopg2:psycopg2.extras.NumericRange`. Default for :class:`~django."
"contrib.postgres.fields.FloatRangeField`."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:210
msgid "``DateTimeRangeField``"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:214
msgid ""
"Based on :class:`~django.forms.DateTimeField` and translates its input into :"
"class:`~psycopg2:psycopg2.extras.DateTimeTZRange`. Default for :class:"
"`~django.contrib.postgres.fields.DateTimeRangeField`."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:219
msgid "``DateRangeField``"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:223
msgid ""
"Based on :class:`~django.forms.DateField` and translates its input into :"
"class:`~psycopg2:psycopg2.extras.DateRange`. Default for :class:`~django."
"contrib.postgres.fields.DateRangeField`."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:228
msgid "Widgets"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:231
msgid "``RangeWidget``"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:235
msgid ""
"Widget used by all of the range fields. Based on :class:`~django.forms."
"MultiWidget`."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:238
msgid ":class:`~RangeWidget` has one required argument:"
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:242
msgid "A :class:`~RangeWidget` comprises a 2-tuple of ``base_widget``."
msgstr ""

#: ../../ref/contrib/postgres/forms.txt:246
msgid ""
"Takes a single \"compressed\" value of a field, for example a :class:"
"`~django.contrib.postgres.fields.DateRangeField`, and returns a tuple "
"representing and lower and upper bound."
msgstr ""
