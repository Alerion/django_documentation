# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 11:07+0200\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 9a8e6713e3894c9abb3503f1c3c4bea4
#: ../../ref/contrib/gis/layermapping.txt:3
msgid "``LayerMapping`` data import utility"
msgstr ""

# f7667f2df6584aeda4ae8e5bb08d944c
#: ../../ref/contrib/gis/layermapping.txt:10
msgid ""
"The :class:`LayerMapping` class provides a way to map the contents of vector "
"spatial data files (e.g. shapefiles) into GeoDjango models."
msgstr ""

# 35a88152fe714ee6be64d7ac94a371b0
#: ../../ref/contrib/gis/layermapping.txt:13
msgid ""
"This utility grew out of the author's personal needs to eliminate the code "
"repetition that went into pulling geometries and fields out of a vector "
"layer, converting to another coordinate system (e.g. WGS84), and then "
"inserting into a GeoDjango model."
msgstr ""

# aa75ff5e52a44ecfbd2ea46a39f1452f
#: ../../ref/contrib/gis/layermapping.txt:20
msgid "Use of :class:`LayerMapping` requires GDAL."
msgstr ""

# 8aa740c19c2342048013999c5e8d8b66
#: ../../ref/contrib/gis/layermapping.txt:24
msgid ""
"GIS data sources, like shapefiles, may be very large.  If you find that :"
"class:`LayerMapping` is using too much memory, set :setting:`DEBUG` to "
"``False`` in your settings.  When :setting:`DEBUG` is set to ``True``, "
"Django :ref:`automatically logs <faq-see-raw-sql-queries>` *every* SQL query "
"-- thus, when SQL statements contain geometries, it is easy to consume more "
"memory than is typical."
msgstr ""

# 444de8ed667140739a5a3f41600d215e
#: ../../ref/contrib/gis/layermapping.txt:32
msgid "Example"
msgstr ""

# ee41bd5e901647d98844fbdf84ce8427
#: ../../ref/contrib/gis/layermapping.txt:34
msgid ""
"You need a GDAL-supported data source, like a shapefile (here we're using a "
"simple polygon shapefile, ``test_poly.shp``, with three features)::"
msgstr ""

# 363473e91a3a466ca9d73f2bb39baea6
#: ../../ref/contrib/gis/layermapping.txt:53
msgid ""
"Now we define our corresponding Django model (make sure to use :djadmin:"
"`migrate`)::"
msgstr ""

# 79a52649895049dd8c73c0913b53551b
#: ../../ref/contrib/gis/layermapping.txt:64
msgid ""
"Use :class:`LayerMapping` to extract all the features and place them in the "
"database::"
msgstr ""

# 3c341da89755416c9fd2ae92cb822055
#: ../../ref/contrib/gis/layermapping.txt:78
msgid ""
"Here, :class:`LayerMapping` just transformed the three geometries from the "
"shapefile in their original spatial reference system (WGS84) to the spatial "
"reference system of the GeoDjango model (NAD83).  If no spatial reference "
"system is defined for the layer, use the ``source_srs`` keyword with a :"
"class:`~django.contrib.gis.gdal.SpatialReference` object to specify one."
msgstr ""

# 3e392c3faa8148fbb2e7f2ec15f92edf
#: ../../ref/contrib/gis/layermapping.txt:85
msgid "``LayerMapping`` API"
msgstr ""

# 8803d9c3cea343758d31cfae68fc495c
#: ../../ref/contrib/gis/layermapping.txt:89
msgid ""
"The following are the arguments and keywords that may be used during "
"instantiation of ``LayerMapping`` objects."
msgstr ""

# e784dcba119c461b8c38b0e057ef250a
#: ../../ref/contrib/gis/layermapping.txt:93
msgid "Argument"
msgstr ""

# 7d94952f1b854ed0bcfc946667693d64
# b1c853789d9545e8921f5417e7df4ff7
#: ../../ref/contrib/gis/layermapping.txt:93
#: ../../ref/contrib/gis/layermapping.txt:155
msgid "Description"
msgstr ""

# fbd948b613df46d4be858ea0b3cfa234
#: ../../ref/contrib/gis/layermapping.txt:95
msgid "``model``"
msgstr ""

# 3f610b58c6584e3598ba2278855d30dc
#: ../../ref/contrib/gis/layermapping.txt:95
msgid "The geographic model, *not* an instance."
msgstr ""

# 5c49e5b2c10a42608737352e7f2ddd8f
#: ../../ref/contrib/gis/layermapping.txt:97
msgid "``data_source``"
msgstr ""

# 0ca892a83c474bb1acc8ee4c29eea466
#: ../../ref/contrib/gis/layermapping.txt:97
msgid ""
"The path to the OGR-supported data source file (e.g., a shapefile).  Also "
"accepts :class:`django.contrib.gis.gdal.DataSource` instances."
msgstr ""

# 1411edae1b3f4ddf9e35da6acec654fc
#: ../../ref/contrib/gis/layermapping.txt:101
msgid "``mapping``"
msgstr ""

# 884990d1a61d4c91a1fcb443132e604b
#: ../../ref/contrib/gis/layermapping.txt:101
msgid ""
"A dictionary: keys are strings corresponding to the model field, and values "
"correspond to string field names for the OGR feature, or if the model field "
"is a geographic then it should correspond to the OGR geometry type, e.g., "
"``'POINT'``, ``'LINESTRING'``, ``'POLYGON'``."
msgstr ""

# 958e30e40d3e49bbbcc49092b57cdac8
#: ../../ref/contrib/gis/layermapping.txt:110
msgid "Keyword Arguments"
msgstr ""

# 32ea6ac48b9648c68c808b537a1afd23
#: ../../ref/contrib/gis/layermapping.txt:112
msgid "``layer``"
msgstr ""

# 01f55b5a52d54e3ca9087ee8e49e5d0d
#: ../../ref/contrib/gis/layermapping.txt:112
msgid "The index of the layer to use from the Data Source (defaults to 0)"
msgstr ""

# 1d40a440205940cdaf7ad52b1e296e9c
#: ../../ref/contrib/gis/layermapping.txt:115
msgid "``source_srs``"
msgstr ""

# 608a591c06904adca09ab135d35c33f0
#: ../../ref/contrib/gis/layermapping.txt:115
msgid ""
"Use this to specify the source SRS manually (for example, some shapefiles "
"don't come with a ``'.prj'`` file).  An integer SRID, WKT or PROJ.4 strings, "
"and :class:`django.contrib.gis.gdal.SpatialReference` objects are accepted."
msgstr ""

# 5ce7d20fe27f46a9a645354d0b3338d3
#: ../../ref/contrib/gis/layermapping.txt:121
msgid "``encoding``"
msgstr ""

# ef67f857008e4661b91d74ff2a85e7ed
#: ../../ref/contrib/gis/layermapping.txt:121
msgid ""
"Specifies the character set encoding of the strings in the OGR data source.  "
"For example, ``'latin-1'``, ``'utf-8'``, and ``'cp437'`` are all valid "
"encoding parameters."
msgstr ""

# 3962fc4a07ca4f59aa6bad1c23d54834
#: ../../ref/contrib/gis/layermapping.txt:126
msgid "``transaction_mode``"
msgstr ""

# ed293a45a4d54ca6b77f126e1e4317ae
#: ../../ref/contrib/gis/layermapping.txt:126
msgid "May be ``'commit_on_success'`` (default) or ``'autocommit'``."
msgstr ""

# 01f2303b167a40eca08185aa29c57298
#: ../../ref/contrib/gis/layermapping.txt:129
msgid "``transform``"
msgstr ""

# 2601fbf75d0c4fa3ba6766c359625f63
#: ../../ref/contrib/gis/layermapping.txt:129
msgid ""
"Setting this to False will disable coordinate transformations.  In other "
"words, geometries will be inserted into the database unmodified from their "
"original state in the data source."
msgstr ""

# e1ba87ea436d4aba83162cd0c5cc1f73
#: ../../ref/contrib/gis/layermapping.txt:134
msgid "``unique``"
msgstr ""

#: ../../ref/contrib/gis/layermapping.txt:134
msgid ""
"Setting this to the name, or a tuple of names, from the given  model will "
"create models unique only to the given name(s). Geometries from each feature "
"will be added into the collection associated with the unique model.  Forces "
"the transaction mode to be ``'autocommit'``."
msgstr ""

# 7faaa484aa19448fb7f996d671470edf
#: ../../ref/contrib/gis/layermapping.txt:141
msgid "``using``"
msgstr ""

#: ../../ref/contrib/gis/layermapping.txt:141
msgid ""
"Sets the database to use when importing spatial data. Default is "
"``'default'``."
msgstr ""

# aa53b1dab7494efcbbf938e188d64905
#: ../../ref/contrib/gis/layermapping.txt:146
msgid "``save()`` Keyword Arguments"
msgstr ""

# 06e16c1d59004423a7ef1286ae13e8be
#: ../../ref/contrib/gis/layermapping.txt:150
msgid ""
"The ``save()`` method also accepts keywords.  These keywords are used for "
"controlling output logging, error handling, and for importing specific "
"feature ranges."
msgstr ""

# ec87e51ec5894b51b24bba81b57be526
#: ../../ref/contrib/gis/layermapping.txt:155
msgid "Save Keyword Arguments"
msgstr ""

# ca92ef4d46d34bb18f630c5f396520b0
#: ../../ref/contrib/gis/layermapping.txt:157
msgid "``fid_range``"
msgstr ""

# 5850763fd93f42a195cfe28b2267a2ff
#: ../../ref/contrib/gis/layermapping.txt:157
msgid ""
"May be set with a slice or tuple of (begin, end) feature ID's to map from "
"the data source.  In other words, this keyword enables the user to "
"selectively import a subset range of features in the geographic data source."
msgstr ""

# 89d453c2329b45d1843637dee79d25e6
#: ../../ref/contrib/gis/layermapping.txt:164
msgid "``progress``"
msgstr ""

# c281ea3a4a5d4b78b8d1e9afe2ec671b
#: ../../ref/contrib/gis/layermapping.txt:164
msgid ""
"When this keyword is set, status information will be printed giving the "
"number of features processed and successfully saved.  By default, progress "
"information will be printed every 1000 features processed, however, this "
"default may be overridden by setting this keyword with an integer for the "
"desired interval."
msgstr ""

# b682e0ebfa6844178e1cce97279b9b38
#: ../../ref/contrib/gis/layermapping.txt:172
msgid "``silent``"
msgstr ""

# 37b72a9eed7b4fc4bc9aaf18a28f1bc2
#: ../../ref/contrib/gis/layermapping.txt:172
msgid ""
"By default, non-fatal error notifications are printed to ``sys.stdout``, but "
"this keyword may be set to disable these notifications."
msgstr ""

# 71c91b32eace4912a72d770b1f0156fc
#: ../../ref/contrib/gis/layermapping.txt:176
msgid "``step``"
msgstr ""

# d9b10054db764852874385e1e3d7621e
#: ../../ref/contrib/gis/layermapping.txt:176
msgid ""
"If set with an integer, transactions will occur at every step interval. For "
"example, if ``step=1000``, a commit would occur after the 1,000th feature, "
"the 2,000th feature etc."
msgstr ""

# 49d85d21d65d44c29732c0fba5718e82
#: ../../ref/contrib/gis/layermapping.txt:182
msgid "``stream``"
msgstr ""

# a878330a165b4fbbacb61fb9d69f5798
#: ../../ref/contrib/gis/layermapping.txt:182
msgid ""
"Status information will be written to this file handle.  Defaults to using "
"``sys.stdout``, but any object with a ``write`` method is supported."
msgstr ""

# a012df86a6e14d72a260cf6af456b1a8
#: ../../ref/contrib/gis/layermapping.txt:186
msgid "``strict``"
msgstr ""

# fbbd898b777646e289bdd38957ac3432
#: ../../ref/contrib/gis/layermapping.txt:186
msgid ""
"Execution of the model mapping will cease upon the first error encountered.  "
"The default value (``False``) behavior is to attempt to continue."
msgstr ""

# 9c1011346352417fb371ef20dbeadca8
#: ../../ref/contrib/gis/layermapping.txt:191
msgid "``verbose``"
msgstr ""

# 2f40bbf8b44943f289d2bb062a1a238f
#: ../../ref/contrib/gis/layermapping.txt:191
msgid ""
"If set, information will be printed subsequent to each model save executed "
"on the database."
msgstr ""

# 135d2c8e8e854abdaedec64c71e9dfc1
#: ../../ref/contrib/gis/layermapping.txt:197
msgid "Troubleshooting"
msgstr ""

# 6d30f2f1010c43fda3115e3f6bc7f671
#: ../../ref/contrib/gis/layermapping.txt:200
msgid "Running out of memory"
msgstr ""

# 86ddb9cf04004cac8a6eb04ea100c727
#: ../../ref/contrib/gis/layermapping.txt:202
msgid ""
"As noted in the warning at the top of this section, Django stores all SQL "
"queries when ``DEBUG=True``.  Set ``DEBUG=False`` in your settings, and this "
"should stop excessive memory use when running ``LayerMapping`` scripts."
msgstr ""

# fe51e24ae7e3413ca90bdc87e88a669c
#: ../../ref/contrib/gis/layermapping.txt:207
msgid "MySQL: ``max_allowed_packet`` error"
msgstr ""

# bc3b69fa72414e18ba9f17bc62bbcaec
#: ../../ref/contrib/gis/layermapping.txt:209
msgid ""
"If you encounter the following error when using ``LayerMapping`` and MySQL::"
msgstr ""

# 92f167b250834943ab6c71054cd826e2
#: ../../ref/contrib/gis/layermapping.txt:213
msgid ""
"Then the solution is to increase the value of the ``max_allowed_packet`` "
"setting in your MySQL configuration.  For example, the default value may be "
"something low like one megabyte -- the setting may be modified in MySQL's "
"configuration file (``my.cnf``) in the ``[mysqld]`` section::"
msgstr ""
