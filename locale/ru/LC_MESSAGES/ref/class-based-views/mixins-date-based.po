# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 11:07+0200\n"
"PO-Revision-Date: 2013-02-27 00:21\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 3ab7bfd55b574a80af2c7f7b928323cd
#: ../../ref/class-based-views/mixins-date-based.txt:3
msgid "Date-based mixins"
msgstr ""

# 3e88fd52ca5e4435a636cbc06daaf352
#: ../../ref/class-based-views/mixins-date-based.txt:9
msgid ""
"All the date formatting attributes in these mixins use :func:`~time."
"strftime` format characters. Do not try to use the format characters from "
"the :ttag:`now` template tag as they are not compatible."
msgstr ""

#: ../../ref/class-based-views/mixins-date-based.txt:14
msgid "``YearMixin``"
msgstr ""

# 2c5c858006004f189491cf4af5f1c8ed
#: ../../ref/class-based-views/mixins-date-based.txt:18
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"year component of a date."
msgstr ""

# 1b8e7e55470542e38e381d524273144c
# 1f33a2f1aed84091a5036ae8697170ab
# 6989f3bcbf794fc18930c79203e48518
# 1fb50b99a808485ebc6b98a70a365299
# 5c7a1a5323344a01a88abe727839d3a6
# d4693d525a0e4a7eb4443e215023b7de
#: ../../ref/class-based-views/mixins-date-based.txt:21
#: ../../ref/class-based-views/mixins-date-based.txt:73
#: ../../ref/class-based-views/mixins-date-based.txt:125
#: ../../ref/class-based-views/mixins-date-based.txt:177
#: ../../ref/class-based-views/mixins-date-based.txt:229
#: ../../ref/class-based-views/mixins-date-based.txt:288
msgid "**Methods and Attributes**"
msgstr ""

# 78f132034fe1434b84b8562cdba55363
#: ../../ref/class-based-views/mixins-date-based.txt:25
msgid ""
"The :func:`~time.strftime` format to use when parsing the year. By default, "
"this is ``'%Y'``."
msgstr ""

# e21e825f7d4f445ab507b44f62da5bb2
#: ../../ref/class-based-views/mixins-date-based.txt:30
msgid ""
"**Optional** The value for the year, as a string. By default, set to "
"``None``, which means the year will be determined using other means."
msgstr ""

# a131479c9f7c4335a2d44debf9ad1235
#: ../../ref/class-based-views/mixins-date-based.txt:35
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the year. "
"Returns :attr:`~YearMixin.year_format` by default."
msgstr ""

# 17a491458a4542e8b5160a4bd98ba16d
#: ../../ref/class-based-views/mixins-date-based.txt:40
msgid ""
"Returns the year for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""

# 7c3f0fbdedf0448a9e269906572ac208
#: ../../ref/class-based-views/mixins-date-based.txt:43
msgid "The value of the :attr:`YearMixin.year` attribute."
msgstr ""

# 90349218e9ae475681db7148e3e55d0a
#: ../../ref/class-based-views/mixins-date-based.txt:44
msgid "The value of the ``year`` argument captured in the URL pattern."
msgstr ""

# 99c79da0cd5a49bbb014a78d12341297
#: ../../ref/class-based-views/mixins-date-based.txt:45
msgid "The value of the ``year`` ``GET`` query argument."
msgstr ""

# dd7b50869e664fb7914d61c344081274
#: ../../ref/class-based-views/mixins-date-based.txt:47
msgid "Raises a 404 if no valid year specification can be found."
msgstr ""

# 623c271b388c43328b61d23ca812b4f2
#: ../../ref/class-based-views/mixins-date-based.txt:51
msgid ""
"Returns a date object containing the first day of the year after the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# fc9540f90c04472cbc6cf5a4f1767493
#: ../../ref/class-based-views/mixins-date-based.txt:59
msgid ""
"Returns a date object containing the first day of the year before the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

#: ../../ref/class-based-views/mixins-date-based.txt:66
msgid "``MonthMixin``"
msgstr ""

# 1cfcd1be19984d488f286f3aa0c0bcc8
#: ../../ref/class-based-views/mixins-date-based.txt:70
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"month component of a date."
msgstr ""

# 7b12547a7cbc4d13a2502cddd1216205
#: ../../ref/class-based-views/mixins-date-based.txt:77
msgid ""
"The :func:`~time.strftime` format to use when parsing the month. By default, "
"this is ``'%b'``."
msgstr ""

# c6ed89fb1e6642c089290d8876970e2f
#: ../../ref/class-based-views/mixins-date-based.txt:82
msgid ""
"**Optional** The value for the month, as a string. By default, set to "
"``None``, which means the month will be determined using other means."
msgstr ""

# 95ff25e50e4b4ddd9aec69dea0b99da4
#: ../../ref/class-based-views/mixins-date-based.txt:87
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the month. "
"Returns :attr:`~MonthMixin.month_format` by default."
msgstr ""

# c381d63261fa4411965f1b141979288b
#: ../../ref/class-based-views/mixins-date-based.txt:92
msgid ""
"Returns the month for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""

# 0c341e1b72b34e37a8e47f3a31f880ea
#: ../../ref/class-based-views/mixins-date-based.txt:95
msgid "The value of the :attr:`MonthMixin.month` attribute."
msgstr ""

# 74cd6470cda84f88a6246876203a1651
#: ../../ref/class-based-views/mixins-date-based.txt:96
msgid "The value of the ``month`` argument captured in the URL pattern."
msgstr ""

# a5c8086042ab49eeabf9ee92b9b7ff15
#: ../../ref/class-based-views/mixins-date-based.txt:97
msgid "The value of the ``month`` ``GET`` query argument."
msgstr ""

# f55b450cfcf3486381433eb37fc8cf71
#: ../../ref/class-based-views/mixins-date-based.txt:99
msgid "Raises a 404 if no valid month specification can be found."
msgstr ""

# aef50e5f48e9456abf776315de4c0216
#: ../../ref/class-based-views/mixins-date-based.txt:103
msgid ""
"Returns a date object containing the first day of the month after the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# 1381f5d282b44515ab719ca0229abb86
#: ../../ref/class-based-views/mixins-date-based.txt:111
msgid ""
"Returns a date object containing the first day of the month before the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

#: ../../ref/class-based-views/mixins-date-based.txt:118
msgid "``DayMixin``"
msgstr ""

# a09fa1544c224ca894f8f1aeaecf4324
#: ../../ref/class-based-views/mixins-date-based.txt:122
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"day component of a date."
msgstr ""

# c2170d5c2ee74fb89adb10fcf94aa26c
#: ../../ref/class-based-views/mixins-date-based.txt:129
msgid ""
"The :func:`~time.strftime` format to use when parsing the day. By default, "
"this is ``'%d'``."
msgstr ""

# 0a4fa71e43df410e9072e0e971ec6918
#: ../../ref/class-based-views/mixins-date-based.txt:134
msgid ""
"**Optional** The value for the day, as a string. By default, set to "
"``None``, which means the day will be determined using other means."
msgstr ""

# 358be69b4c4e4368b010cadea0e4c976
#: ../../ref/class-based-views/mixins-date-based.txt:139
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the day. "
"Returns :attr:`~DayMixin.day_format` by default."
msgstr ""

# 75b153493bfe4a1f9383fed53be4147d
#: ../../ref/class-based-views/mixins-date-based.txt:144
msgid ""
"Returns the day for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""

# a231d42421d14dc68b09412ceae65083
#: ../../ref/class-based-views/mixins-date-based.txt:147
msgid "The value of the :attr:`DayMixin.day` attribute."
msgstr ""

# 296e24b4b60f4637bb1e72e6bcc64821
#: ../../ref/class-based-views/mixins-date-based.txt:148
msgid "The value of the ``day`` argument captured in the URL pattern."
msgstr ""

# 164a08d810f847c3b503d6fadca73c71
#: ../../ref/class-based-views/mixins-date-based.txt:149
msgid "The value of the ``day`` ``GET`` query argument."
msgstr ""

# cf6917be295b47edbef386b1c7262bbb
#: ../../ref/class-based-views/mixins-date-based.txt:151
msgid "Raises a 404 if no valid day specification can be found."
msgstr ""

# 90d0be77941f4fa1a651980ff55b81cd
#: ../../ref/class-based-views/mixins-date-based.txt:155
msgid ""
"Returns a date object containing the next valid day after the date provided. "
"This function can also return ``None`` or raise an :class:`~django.http."
"Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# 611ceefc4c4640418904a4f2e671cf26
#: ../../ref/class-based-views/mixins-date-based.txt:163
msgid ""
"Returns a date object containing the previous valid day. This function can "
"also return ``None`` or raise an :class:`~django.http.Http404` exception, "
"depending on the values of :attr:`~BaseDateListView.allow_empty` and :attr:"
"`~DateMixin.allow_future`."
msgstr ""

#: ../../ref/class-based-views/mixins-date-based.txt:170
msgid "``WeekMixin``"
msgstr ""

# ae5b4bf6b8f54a1cb5f345a4f88156e9
#: ../../ref/class-based-views/mixins-date-based.txt:174
msgid ""
"A mixin that can be used to retrieve and provide parsing information for a "
"week component of a date."
msgstr ""

# d9f3ff0e6ce5429b8c585973db4d41b9
#: ../../ref/class-based-views/mixins-date-based.txt:181
msgid ""
"The :func:`~time.strftime` format to use when parsing the week. By default, "
"this is ``'%U'``, which means the week starts on Sunday. Set it to ``'%W'`` "
"if your week starts on Monday."
msgstr ""

# bbb6ade8306f41d3bd95432b9f5a6312
#: ../../ref/class-based-views/mixins-date-based.txt:187
msgid ""
"**Optional** The value for the week, as a string. By default, set to "
"``None``, which means the week will be determined using other means."
msgstr ""

# 77bceed2f83d4442a1c0638045bab069
#: ../../ref/class-based-views/mixins-date-based.txt:192
msgid ""
"Returns the :func:`~time.strftime` format to use when parsing the week. "
"Returns :attr:`~WeekMixin.week_format` by default."
msgstr ""

# b4cb7d4dafea451384bd9cb76f8a413b
#: ../../ref/class-based-views/mixins-date-based.txt:197
msgid ""
"Returns the week for which this view will display data, as a string. Tries "
"the following sources, in order:"
msgstr ""

# 1c72b179df7b4712b82e129f4b0a14d3
#: ../../ref/class-based-views/mixins-date-based.txt:200
msgid "The value of the :attr:`WeekMixin.week` attribute."
msgstr ""

# 80dde60edc2f4d23886cb63e4f3aca81
#: ../../ref/class-based-views/mixins-date-based.txt:201
msgid "The value of the ``week`` argument captured in the URL pattern"
msgstr ""

# e1b0bbe9832a42e49a22a87906d049b6
#: ../../ref/class-based-views/mixins-date-based.txt:202
msgid "The value of the ``week`` ``GET`` query argument."
msgstr ""

# 35488959f66a4cf2b57fdb6ad1f556b9
#: ../../ref/class-based-views/mixins-date-based.txt:204
msgid "Raises a 404 if no valid week specification can be found."
msgstr ""

# fe951e69c2e5457db1fa16ffb063387a
#: ../../ref/class-based-views/mixins-date-based.txt:208
msgid ""
"Returns a date object containing the first day of the week after the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

# 314c7c822cb34695bfbb1b10e1ca4c9d
#: ../../ref/class-based-views/mixins-date-based.txt:216
msgid ""
"Returns a date object containing the first day of the week before the date "
"provided. This function can also return ``None`` or raise an :class:`~django."
"http.Http404` exception, depending on the values of :attr:`~BaseDateListView."
"allow_empty` and :attr:`~DateMixin.allow_future`."
msgstr ""

#: ../../ref/class-based-views/mixins-date-based.txt:223
msgid "``DateMixin``"
msgstr ""

# b86123bfff3a4cbb8f819e7ca7141062
#: ../../ref/class-based-views/mixins-date-based.txt:227
msgid "A mixin class providing common behavior for all date-based views."
msgstr ""

# 7f527a8bfb1743ab8c12eeab04009c5e
#: ../../ref/class-based-views/mixins-date-based.txt:233
msgid ""
"The name of the ``DateField`` or ``DateTimeField`` in the ``QuerySet``’s "
"model that the date-based archive should use to determine the list of "
"objects to display on the page."
msgstr ""

# b1996c9d724f4ff98d75ed1486e2a519
#: ../../ref/class-based-views/mixins-date-based.txt:237
msgid ""
"When :doc:`time zone support </topics/i18n/timezones>` is enabled and "
"``date_field`` is a ``DateTimeField``, dates are assumed to be in the "
"current time zone. Otherwise, the queryset could include objects from the "
"previous or the next day in the end user's time zone."
msgstr ""

# 692b1f347f134365b8b5a7ab111e9d75
#: ../../ref/class-based-views/mixins-date-based.txt:244
msgid ""
"In this situation, if you have implemented per-user time zone selection, the "
"same URL may show a different set of objects, depending on the end user's "
"time zone. To avoid this, you should use a ``DateField`` as the "
"``date_field`` attribute."
msgstr ""

# 8223e32822e8415d86b086ae08bc999c
#: ../../ref/class-based-views/mixins-date-based.txt:251
msgid ""
"A boolean specifying whether to include \"future\" objects on this page, "
"where \"future\" means objects in which the field specified in "
"``date_field`` is greater than the current date/time. By default, this is "
"``False``."
msgstr ""

# b1d1332106b249f6addd03591460b57c
#: ../../ref/class-based-views/mixins-date-based.txt:258
msgid ""
"Returns the name of the field that contains the date data that this view "
"will operate on. Returns :attr:`~DateMixin.date_field` by default."
msgstr ""

# b44eb95fb7764f83a9b789c65770f7c8
#: ../../ref/class-based-views/mixins-date-based.txt:263
msgid ""
"Determine whether to include \"future\" objects on this page, where \"future"
"\" means objects in which the field specified in ``date_field`` is greater "
"than the current date/time. Returns :attr:`~DateMixin.allow_future` by "
"default."
msgstr ""

#: ../../ref/class-based-views/mixins-date-based.txt:269
msgid "``BaseDateListView``"
msgstr ""

# 75b5cc0b658549039ccc6f2e03fb8a41
#: ../../ref/class-based-views/mixins-date-based.txt:273
msgid ""
"A base class that provides common behavior for all date-based views. There "
"won't normally be a reason to instantiate :class:`~django.views.generic."
"dates.BaseDateListView`; instantiate one of the subclasses instead."
msgstr ""

# 606235ccaafd469da2832024e72cc4f7
#: ../../ref/class-based-views/mixins-date-based.txt:278
msgid ""
"While this view (and its subclasses) are executing, ``self.object_list`` "
"will contain the list of objects that the view is operating upon, and ``self."
"date_list`` will contain the list of dates for which data is available."
msgstr ""

# e468c044945f433dba9f8d459c323d57
#: ../../ref/class-based-views/mixins-date-based.txt:283
msgid "**Mixins**"
msgstr ""

# 11550885ceba42cfae825f56c3d8e197
#: ../../ref/class-based-views/mixins-date-based.txt:285
msgid ":class:`~django.views.generic.dates.DateMixin`"
msgstr ""

# 07a640473d1749bb9b4f8df93a9d9c24
#: ../../ref/class-based-views/mixins-date-based.txt:286
msgid ":class:`~django.views.generic.list.MultipleObjectMixin`"
msgstr ""

# 392adb27a694497794c1525a90dafdc6
#: ../../ref/class-based-views/mixins-date-based.txt:292
msgid ""
"A boolean specifying whether to display the page if no objects are "
"available. If this is ``True`` and no objects are available, the view will "
"display an empty page instead of raising a 404."
msgstr ""

# 41689143f9f9469ebbc3e68475662c9f
#: ../../ref/class-based-views/mixins-date-based.txt:296
msgid ""
"This is identical to :attr:`django.views.generic.list.MultipleObjectMixin."
"allow_empty`, except for the default value, which is ``False``."
msgstr ""

# 7b1fd2f854d640b0a0ae47b1c9892c32
#: ../../ref/class-based-views/mixins-date-based.txt:302
msgid ""
"**Optional** A string defining the aggregation period for ``date_list``. It "
"must be one of ``'year'`` (default), ``'month'``, or ``'day'``."
msgstr ""

# 20c16a0510d741e9915b04ee16ad660a
#: ../../ref/class-based-views/mixins-date-based.txt:308
msgid ""
"Returns a 3-tuple containing (``date_list``, ``object_list``, "
"``extra_context``)."
msgstr ""

# a18c0acf42174b06994db47545664544
#: ../../ref/class-based-views/mixins-date-based.txt:311
msgid ""
"``date_list`` is the list of dates for which data is available. "
"``object_list`` is the list of objects. ``extra_context`` is a dictionary of "
"context data that will be added to any context data provided by the :class:"
"`~django.views.generic.list.MultipleObjectMixin`."
msgstr ""

# ed0b653a79b64d30be2d340b10047dc0
#: ../../ref/class-based-views/mixins-date-based.txt:319
msgid ""
"Returns a queryset, filtered using the query arguments defined by "
"``lookup``. Enforces any restrictions on the queryset, such as "
"``allow_empty`` and ``allow_future``."
msgstr ""

# e48c94f7ed6d4f02aada21aa0048ba9b
#: ../../ref/class-based-views/mixins-date-based.txt:325
msgid ""
"Returns the aggregation period for ``date_list``. Returns :attr:"
"`~BaseDateListView.date_list_period` by default."
msgstr ""

# 6a43ced77e1f492e976d3f589f3d07c6
#: ../../ref/class-based-views/mixins-date-based.txt:330
msgid ""
"Returns the list of dates of type ``date_type`` for which ``queryset`` "
"contains entries. For example, ``get_date_list(qs, 'year')`` will return the "
"list of years for which ``qs`` has entries. If ``date_type`` isn't provided, "
"the result of :meth:`~BaseDateListView.get_date_list_period` is used. "
"``date_type`` and ``ordering`` are simply passed to :meth:`QuerySet."
"dates()<django.db.models.query.QuerySet.dates>`."
msgstr ""
