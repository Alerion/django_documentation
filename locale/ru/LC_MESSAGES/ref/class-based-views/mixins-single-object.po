# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
# Dmitriy Kostochko <alerion.um@gmail.com>, 2014, 2015, 2016, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-16 11:56+0200\n"
"PO-Revision-Date: 2017-11-17 17:33+0200\n"
"Last-Translator: Dmitriy Kostochko <alerion.um@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# 9f9e933ea62c4922bb172a200894fe14
#: ../../ref/class-based-views/mixins-single-object.txt:3
msgid "Single object mixins"
msgstr "Примеси для работы с одиночным объектом(Single object mixins)"

# b09fdc0147444cd58868dd2238607d54
#: ../../ref/class-based-views/mixins-single-object.txt:6
msgid "``SingleObjectMixin``"
msgstr "``SingleObjectMixin``"

# 833a37992dec43e08fd426619d9c3b0a
#: ../../ref/class-based-views/mixins-single-object.txt:10
msgid ""
"Provides a mechanism for looking up an object associated with the current "
"HTTP request."
msgstr ""
"Предоставляет механизм для поиска объекта, связанного с текущим запросом "
"HTTP."

# 7bb90542a582450584c63f842df0b460
# 7cda2b7f39fd41299d0d32570d985879
#: ../../ref/class-based-views/mixins-single-object.txt:13
#: ../../ref/class-based-views/mixins-single-object.txt:150
msgid "**Methods and Attributes**"
msgstr "**Методы и Атрибуты**"

# 8c18f59eede5435881c88966ed435dec
#: ../../ref/class-based-views/mixins-single-object.txt:17
msgid ""
"The model that this view will display data for. Specifying ``model = Foo`` "
"is effectively the same as specifying ``queryset = Foo.objects.all()``, "
"where ``objects`` stands for ``Foo``’s :ref:`default manager <default-"
"managers>`."
msgstr ""
"Модель с которой \"работает\" данное представление(представление будет "
"отображать данные этой модели). Указать  ``model = Foo`` эквивалентно "
"инструкции ``queryset = Foo.objects.all()``, где ``objects`` является :ref:"
"`менеджером по умолчанию <default-managers>` для модели ``Foo``."

# bcbfe50797d64cd6b983ca2e5c884cce
#: ../../ref/class-based-views/mixins-single-object.txt:24
msgid ""
"A ``QuerySet`` that represents the objects. If provided, the value of "
"``queryset`` supersedes the value provided for :attr:`model`."
msgstr ""
"Запрос ``QuerySet``,  представляющий объекты. Если указан, то значение  "
"``queryset`` замещает значение в  :attr:`model`."

# 55d9e496aa2446159ecf72de0dbe69c6
#: ../../ref/class-based-views/mixins-single-object.txt:29
msgid ""
"``queryset`` is a class attribute with a *mutable* value so care must be "
"taken when using it directly. Before using it, either call its :meth:"
"`~django.db.models.query.QuerySet.all` method or retrieve it with :meth:"
"`get_queryset` which takes care of the cloning behind the scenes."
msgstr ""
"``queryset`` -- атрибут класса с *изменяемым* значением, так что будьте "
"осторожны при его использовании. Используя его, лучше вызывать метод :meth:"
"`~django.db.models.query.QuerySet.all`, или получить его значение через "
"метод :meth:`get_queryset`, которые сделает копию атрибута."

# 0059e17e84b44a99ae5f44c701fbde42
#: ../../ref/class-based-views/mixins-single-object.txt:37
msgid ""
"The name of the field on the model that contains the slug. By default, "
"``slug_field`` is ``'slug'``."
msgstr ""
"Имя поля модели, содержащего слаг(slug). По умолчанию, ``slug_field`` это "
"``'slug'``."

# a363ff59d7a8454c9250fe4d25ccd6bf
#: ../../ref/class-based-views/mixins-single-object.txt:42
msgid ""
"The name of the URLConf keyword argument that contains the slug. By default, "
"``slug_url_kwarg`` is ``'slug'``."
msgstr ""
"Имя переданного ключевого аргумента(именованной группы) в URLConf, "
"содержащего значение слага(slug). По умолчанию, ``slug_url_kwarg`` это "
"``'slug'``."

# 5e767bc9715d4a93b4934f4c46835012
#: ../../ref/class-based-views/mixins-single-object.txt:47
msgid ""
"The name of the URLConf keyword argument that contains the primary key. By "
"default, ``pk_url_kwarg`` is ``'pk'``."
msgstr ""
"Имя переданного ключевого аргумента(именованной группы) в URLConf, "
"содержащего значение первичного ключа(primary key). По умолчанию, "
"``pk_url_kwarg`` равен ``'pk'``."

# fd7ea5f9e96047bdbcccb3520abe844c
#: ../../ref/class-based-views/mixins-single-object.txt:52
msgid "Designates the name of the variable to use in the context."
msgstr "Задает имя переменной для использования в текущем контексте."

#: ../../ref/class-based-views/mixins-single-object.txt:56
msgid ""
"If ``True``, causes :meth:`get_object()` to perform its lookup using both "
"the primary key and the slug. Defaults to ``False``."
msgstr ""
"При ``True`` метод :meth:`get_object()` ищет объект по первичному ключу и "
"\"слагу\". По умолчанию ``False``."

#: ../../ref/class-based-views/mixins-single-object.txt:59
msgid ""
"This attribute can help mitigate `insecure direct object reference`_ "
"attacks. When applications allow access to individual objects by a "
"sequential primary key, an attacker could brute-force guess all URLs; "
"thereby obtaining a list of all objects in the application. If users with "
"access to individual objects should be prevented from obtaining this list, "
"setting ``query_pk_and_slug`` to ``True`` will help prevent the guessing of "
"URLs as each URL will require two correct, non-sequential arguments. Simply "
"using a unique slug may serve the same purpose, but this scheme allows you "
"to have non-unique slugs."
msgstr ""
"Этот атрибут может помочь предотвратить атаку на `незащищенный ресурс и "
"прямой доступ к объектам <https://www.owasp.org/index.php/Top_10_2013-A4-"
"Insecure_Direct_Object_References>`_. Если приложение предоставляет доступ к "
"объектам через последовательный первичный ключ, атакующий может перебрать "
"URL-ы и получить все объекты в приложении. Если пользователи не должны иметь "
"доступ к списку всех объект, опция ``query_pk_and_slug`` позволит "
"предотвратить подбор URL-ов через первичный ключ т.к. каждый URL будет "
"требовать два правильных непоследовательных аргумента. Вы также можете "
"просто использовать уникальный \"slug\" для этой цели, но эта опция позволит "
"хранить не уникальный \"slug\"."

# 9936e482510f491a8f24ef1453358114
#: ../../ref/class-based-views/mixins-single-object.txt:73
msgid ""
"Returns the single object that this view will display. If ``queryset`` is "
"provided, that queryset will be used as the source of objects; otherwise, :"
"meth:`get_queryset` will be used. ``get_object()`` looks for a :attr:"
"`pk_url_kwarg` argument in the arguments to the view; if this argument is "
"found, this method performs a primary-key based lookup using that value. If "
"this argument is not found, it looks for a :attr:`slug_url_kwarg` argument, "
"and performs a slug lookup using the :attr:`slug_field`."
msgstr ""
"Возвращает объект, который отображается данным представлением. Если "
"предоставлено значение  ``queryset``, то этот queryset будет использован для "
"получения объекта; в противном случае будет использован результат вызова "
"метода :meth:`get_queryset`.  Метод ``get_object()`` проверяет значение "
"аргумента :attr:`pk_url_kwarg`, из списка переданных представлению; если "
"этот аргумент найден, то метод выполнит поиск по первичному ключу(по "
"переданному значению). Если этот аргумент не найден, то будет проверено "
"наличие аргумента :attr:`slug_url_kwarg`, и выполнен поиск по значению "
"слага(используя :attr:`slug_field`)."

#: ../../ref/class-based-views/mixins-single-object.txt:82
msgid ""
"When :attr:`query_pk_and_slug` is ``True``, ``get_object()`` will perform "
"its lookup using both the primary key and the slug."
msgstr ""
"Если :attr:`query_pk_and_slug` равен ``True``, ``get_object()`` будет искать "
"объект по первичному ключу и значению \"slug\"."

# dac17fc5c50f4407a62e27e5152d4a6d
#: ../../ref/class-based-views/mixins-single-object.txt:87
msgid ""
"Returns the queryset that will be used to retrieve the object that this view "
"will display. By default, :meth:`get_queryset` returns the value of the :"
"attr:`queryset` attribute if it is set, otherwise it constructs a :class:"
"`~django.db.models.query.QuerySet` by calling the ``all()`` method on the :"
"attr:`model` attribute's default manager."
msgstr ""
"Возвращает объект queryset, который буден использован для получения объекта "
"для данного представления.  По умолчанию, метод :meth:`get_queryset` "
"возвращает значение атрибута :attr:`queryset` (если он установлен), - в "
"противном случае будет создан экземпляр класса  :class:`~django.db.models."
"query.QuerySet` вызовом метода  `all()` у атрибута  :attr:`model`( с помощью "
"менеджера по умолчанию)."

# 6f1dc49887034c95b55677f4fdc38c08
#: ../../ref/class-based-views/mixins-single-object.txt:95
msgid ""
"Return the context variable name that will be used to contain the data that "
"this view is manipulating. If :attr:`context_object_name` is not set, the "
"context name will be constructed from the ``model_name`` of the model that "
"the queryset is composed from. For example, the model ``Article`` would have "
"context object named ``'article'``."
msgstr ""
"Возвращает имя переменной контекста(context variable), которая будет "
"доступна в шаблоне и будет содержать данные, с которыми работает "
"представление. Если атрибут :attr:`context_object_name` не установлен, то "
"имя переменной контекста будет составлено из ``model_name`` модели, "
"\"породившей\" текущий queryset. Например, модель  ``Article`` будет иметь "
"переменную контекста с именем ``'article'``."

# f62b32114c1d4f7394c7011758004fef
#: ../../ref/class-based-views/mixins-single-object.txt:103
msgid "Returns context data for displaying the object."
msgstr "Возвращает данные контекста для отображения объекта."

# 9e03fb97b4124ea5a5ad0e71bc7a4094
#: ../../ref/class-based-views/mixins-single-object.txt:105
msgid ""
"The base implementation of this method requires that the ``self.object`` "
"attribute be set by the view (even if ``None``). Be sure to do this if you "
"are using this mixin without one of the built-in views that does so."
msgstr ""
"Встроенная реализация этого метода требует чтобы атрибут ``self.object`` был "
"установлен в представлении (пускай даже в ``None``). Не забудьте об этом, "
"когда будете использовать этот mixin без одного из встроенных представлений, "
"которое уже делает это."

#: ../../ref/class-based-views/mixins-single-object.txt:109
msgid "It returns a dictionary with these contents:"
msgstr "Возвращает словарь со следующим содержимым:"

#: ../../ref/class-based-views/mixins-single-object.txt:111
msgid "``object``: The object that this view is displaying (``self.object``)."
msgstr ""
"``object``: Объект, который отображается представлением (``self.object``)."

#: ../../ref/class-based-views/mixins-single-object.txt:113
msgid ""
"``context_object_name``: ``self.object`` will also be stored under the name "
"returned by :meth:`get_context_object_name`, which defaults to the "
"lowercased version of the model name."
msgstr ""
"``context_object_name``: ``self.object`` будет сохранен в контексте под "
"именем, которое вернул метод :meth:`get_context_object_name`. По умолчанию "
"это название модели в нижнем регистре."

#: ../../ref/class-based-views/mixins-single-object.txt:117
msgid "Context variables override values from template context processors"
msgstr ""
"Переменные контекста переопределяют значения из контекстных процессоров"

#: ../../ref/class-based-views/mixins-single-object.txt:119
msgid ""
"Any variables from :meth:`get_context_data` take precedence over context "
"variables from :ref:`context processors <subclassing-context-"
"requestcontext>`. For example, if your view sets the :attr:`model` attribute "
"to :class:`~django.contrib.auth.models.User`, the default context object "
"name of ``user`` would override the ``user`` variable from the :func:`django."
"contrib.auth.context_processors.auth` context processor. Use :meth:"
"`get_context_object_name` to avoid a clash."
msgstr ""
"Переменные из :meth:`get_context_data` перезаписывают переменные контекста "
"из :ref:`процессоров контекста <subclassing-context-requestcontext>`. "
"Например, если ваше представление записывает :class:`~django.contrib.auth."
"models.User` в атрибут :attr:`model`, название переменной контекста по "
"умолчанию ``user`` перезапишет переменную ``user`` и процессора контекста :"
"func:`django.contrib.auth.context_processors.auth`. Используйте :meth:"
"`get_context_object_name`, чтобы избежать конфликтов."

# 5fa9698d071646a6a298460a63a2df6d
#: ../../ref/class-based-views/mixins-single-object.txt:130
msgid ""
"Returns the name of a slug field to be used to look up by slug. By default "
"this simply returns the value of :attr:`slug_field`."
msgstr ""
"Возвращает имя поля, хранящего слаг(slug), которое  будет использоваться при "
"выборке данных по слагу. По умолчанию просто возвращает значение  атрибута :"
"attr:`slug_field`."

# 6147f4ddd4ec46f6be1b564936adb128
#: ../../ref/class-based-views/mixins-single-object.txt:135
msgid "``SingleObjectTemplateResponseMixin``"
msgstr "``SingleObjectTemplateResponseMixin``"

# 9f76af37a1e94240ac430ce84c3740bf
#: ../../ref/class-based-views/mixins-single-object.txt:139
msgid ""
"A mixin class that performs template-based response rendering for views that "
"operate upon a single object instance. Requires that the view it is mixed "
"with provides ``self.object``, the object instance that the view is "
"operating on. ``self.object`` will usually be, but is not required to be, an "
"instance of a Django model. It may be ``None`` if the view is in the process "
"of constructing a new instance."
msgstr ""
"Класс-примесь, дающий возможность работы с шаблонами для представлений, "
"отображающих одиночный объект. Требует, чтобы представление, в которое будет "
"добавляться эта примесь, предоставляло значение ``self.object``, - экземпляр "
"объекта с которым \"работает\" представление.  Обычно, хотя это и не "
"требуется, ``self.object``это экземпляр модели Django.  Это значение может "
"быть ``None``, если представление \"в середине\" процесса по созданию нового "
"экземпляра объекта."

# 62cbb58322e54ed2828dbb9bba8597ef
#: ../../ref/class-based-views/mixins-single-object.txt:146
msgid "**Extends**"
msgstr "**Наследуется от**"

# 0fec53383ab148d398b2bc8f6525ae83
#: ../../ref/class-based-views/mixins-single-object.txt:148
msgid ":class:`~django.views.generic.base.TemplateResponseMixin`"
msgstr ":class:`~django.views.generic.base.TemplateResponseMixin`"

# 612fbd09d195464d90a3679301544fe2
#: ../../ref/class-based-views/mixins-single-object.txt:154
msgid ""
"The field on the current object instance that can be used to determine the "
"name of a candidate template. If either ``template_name_field`` itself or "
"the value of the ``template_name_field`` on the current object instance is "
"``None``, the object will not be used for a candidate template name."
msgstr ""
"Поле на текущий экземпляр объекта, который может быть использован для "
"определения имени шаблона кандидата(шаблона, который будет использован для "
"отображения данных). Если либо само значение  ``template_name_field``  или "
"значение ``template_name_field`` в текущем экземпляре объекта равно "
"``None``, то  объект не будет использоваться для определения имени шаблона "
"кандидата."

# b2610dab9cf844448558a958b356febf
#: ../../ref/class-based-views/mixins-single-object.txt:162
msgid ""
"The suffix to append to the auto-generated candidate template name. Default "
"suffix is ``_detail``."
msgstr ""
"Суффикс, который добавляется к автоматически сгенерированным  именам  "
"шаблонов кандидатов. Значение суффикса по умолчанию: ``_detail``."

# b73a328ccd3a4c728a3048d642743052
#: ../../ref/class-based-views/mixins-single-object.txt:167
msgid "Returns a list of candidate template names. Returns the following list:"
msgstr ""
"Возвращает список имен шаблонов кандидатов. Возвращает следующий список:"

# f175a5a695794904b83f4726abe01cf3
#: ../../ref/class-based-views/mixins-single-object.txt:169
msgid "the value of ``template_name`` on the view (if provided)"
msgstr "значение атрибута  ``template_name`` в представлении(если указано)"

# 1084ffd2cf2c4964a81960736288c7aa
#: ../../ref/class-based-views/mixins-single-object.txt:170
msgid ""
"the contents of the ``template_name_field`` field on the object instance "
"that the view is operating upon (if available)"
msgstr ""
"содержимое поля ``template_name_field`` в экземпляре объекта, с которым "
"работает представление(если доступно)"

# 3542c9c4e85d46ee94c16216c8deffb3
#: ../../ref/class-based-views/mixins-single-object.txt:172
msgid "``<app_label>/<model_name><template_name_suffix>.html``"
msgstr "``<app_label>/<model_name><template_name_suffix>.html``"

# 904f97f16ce14ef9a77590eab94d5e13
#~ msgid "**Context**"
#~ msgstr "**Контекст**"

# b31b78436b7f45a2bf499c2be282c345
#~ msgid ""
#~ "``object``: The object that this view is displaying. If "
#~ "``context_object_name`` is specified, that variable will also be set in "
#~ "the context, with the same value as ``object``."
#~ msgstr ""
#~ "``object``: объект, отображаемый данным представлением. Если указан "
#~ "атрибут  ``context_object_name``, то эта переменная будет также добавлена "
#~ "в контекст, с тем же значением, что и у ``object``."
