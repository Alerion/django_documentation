# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2013-02-27 00:21\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 0577cf4e5c024e8991d5fd46d8e456d0
#: ../../ref/class-based-views/mixins-multiple-object.txt:3
msgid "Multiple object mixins"
msgstr ""

#: ../../ref/class-based-views/mixins-multiple-object.txt:6
msgid "``MultipleObjectMixin``"
msgstr ""

# 0d744abd953e4b15a95c813fa6a6fd3b
#: ../../ref/class-based-views/mixins-multiple-object.txt:10
msgid "A mixin that can be used to display a list of objects."
msgstr ""

# d6824251411142188dc9ee1addcc9ab4
#: ../../ref/class-based-views/mixins-multiple-object.txt:12
msgid ""
"If ``paginate_by`` is specified, Django will paginate the results returned "
"by this. You can specify the page number in the URL in one of two ways:"
msgstr ""

# 0a2bd2e8f3584cee8f8046c55e26ac80
#: ../../ref/class-based-views/mixins-multiple-object.txt:15
msgid ""
"Use the ``page`` parameter in the URLconf. For example, this is what your "
"URLconf might look like::"
msgstr ""

# 1188ceab268945be8faab778257c13aa
#: ../../ref/class-based-views/mixins-multiple-object.txt:20
msgid ""
"Pass the page number via the ``page`` query-string parameter. For example, a "
"URL would look like this::"
msgstr ""

# 1777f9c8449c43748f3e250aeeddda27
#: ../../ref/class-based-views/mixins-multiple-object.txt:25
msgid ""
"These values and lists are 1-based, not 0-based, so the first page would be "
"represented as page ``1``."
msgstr ""

# 9e6189a165354d8c9d93f090f462f31a
#: ../../ref/class-based-views/mixins-multiple-object.txt:28
msgid ""
"For more on pagination, read the :doc:`pagination documentation </topics/"
"pagination>`."
msgstr ""

# d3113781ead647948b0c58cb6a95e7d3
#: ../../ref/class-based-views/mixins-multiple-object.txt:31
msgid ""
"As a special case, you are also permitted to use ``last`` as a value for "
"``page``::"
msgstr ""

# 1a5573af3a8c437cbd27d6e14c5c9d7f
#: ../../ref/class-based-views/mixins-multiple-object.txt:36
msgid ""
"This allows you to access the final page of results without first having to "
"determine how many pages there are."
msgstr ""

# 1cee71754c054822ae35c795bf0c16d0
#: ../../ref/class-based-views/mixins-multiple-object.txt:39
msgid ""
"Note that ``page`` *must* be either a valid page number or the value "
"``last``; any other value for ``page`` will result in a 404 error."
msgstr ""

# cc4b05bdfd7544e9b578f80d9081ea03
# 007b69b69d004d8b958e88b8ab09d9a1
#: ../../ref/class-based-views/mixins-multiple-object.txt:42
#: ../../ref/class-based-views/mixins-multiple-object.txt:205
msgid "**Extends**"
msgstr ""

# 7b07cdfcba85434aa270c7024bd0c87d
#: ../../ref/class-based-views/mixins-multiple-object.txt:44
msgid ":class:`django.views.generic.base.ContextMixin`"
msgstr ""

# 01ceb6b581f040dfb0114c8af3454294
# 32bf293bcc6f4f75aeea38b5bc101512
#: ../../ref/class-based-views/mixins-multiple-object.txt:46
#: ../../ref/class-based-views/mixins-multiple-object.txt:209
msgid "**Methods and Attributes**"
msgstr ""

# d26c18cb0ef94c499d471e37c7380a6a
#: ../../ref/class-based-views/mixins-multiple-object.txt:50
msgid ""
"A boolean specifying whether to display the page if no objects are "
"available. If this is ``False`` and no objects are available, the view will "
"raise a 404 instead of displaying an empty page. By default, this is "
"``True``."
msgstr ""

#: ../../ref/class-based-views/mixins-multiple-object.txt:57
msgid ""
"The model that this view will display data for. Specifying ``model = Foo`` "
"is effectively the same as specifying ``queryset = Foo.objects.all()``, "
"where ``objects`` stands for ``Foo``â€™s :ref:`default manager <default-"
"managers>`."
msgstr ""

# c654e1c714bb4fe98bb65c172ff3408b
#: ../../ref/class-based-views/mixins-multiple-object.txt:64
msgid ""
"A ``QuerySet`` that represents the objects. If provided, the value of "
"``queryset`` supersedes the value provided for :attr:`model`."
msgstr ""

# 2f64029881244c5b93bfa55d25855b87
#: ../../ref/class-based-views/mixins-multiple-object.txt:69
msgid ""
"``queryset`` is a class attribute with a *mutable* value so care must be "
"taken when using it directly. Before using it, either call its :meth:"
"`~django.db.models.query.QuerySet.all` method or retrieve it with :meth:"
"`get_queryset` which takes care of the cloning behind the scenes."
msgstr ""

#: ../../ref/class-based-views/mixins-multiple-object.txt:77
msgid ""
"A string or list of strings specifying the ordering to apply to the "
"``queryset``. Valid values are the same as those for :meth:`~django.db."
"models.query.QuerySet.order_by`."
msgstr ""

# 6ead57b9211b4924a8ecab4252ba3d3b
#: ../../ref/class-based-views/mixins-multiple-object.txt:82
msgid ""
"An integer specifying how many objects should be displayed per page. If this "
"is given, the view will paginate objects with ``paginate_by`` objects per "
"page. The view will expect either a ``page`` query string parameter (via "
"``request.GET``) or a ``page`` variable specified in the URLconf."
msgstr ""

# acfb653bfbf541de8fe6ef6a620ca313
#: ../../ref/class-based-views/mixins-multiple-object.txt:90
msgid ""
"An integer specifying the number of \"overflow\" objects the last page can "
"contain. This extends the :attr:`paginate_by` limit on the last page by up "
"to ``paginate_orphans``, in order to keep the last page from having a very "
"small number of objects."
msgstr ""

# 733994181fce4d539d94284a93a352c8
#: ../../ref/class-based-views/mixins-multiple-object.txt:97
msgid ""
"A string specifying the name to use for the page parameter. The view will "
"expect this parameter to be available either as a query string parameter "
"(via ``request.GET``) or as a kwarg variable specified in the URLconf. "
"Defaults to ``page``."
msgstr ""

# 861f442de2f247ecb9fd78933ff3b0bc
#: ../../ref/class-based-views/mixins-multiple-object.txt:104
msgid ""
"The paginator class to be used for pagination. By default, :class:`django."
"core.paginator.Paginator` is used. If the custom paginator class doesn't "
"have the same constructor interface as :class:`django.core.paginator."
"Paginator`, you will also need to provide an implementation for :meth:"
"`get_paginator`."
msgstr ""

# 4c9e7f485bea475b825cbcc0e26664ce
#: ../../ref/class-based-views/mixins-multiple-object.txt:112
msgid "Designates the name of the variable to use in the context."
msgstr ""

# 7ed98e36dd6145d3a309bebfaa7673d4
#: ../../ref/class-based-views/mixins-multiple-object.txt:116
msgid ""
"Get the list of items for this view. This must be an iterable and may be a "
"queryset (in which queryset-specific behavior will be enabled)."
msgstr ""

#: ../../ref/class-based-views/mixins-multiple-object.txt:121
msgid ""
"Returns a string (or iterable of strings) that defines the ordering that "
"will be applied to the ``queryset``."
msgstr ""

#: ../../ref/class-based-views/mixins-multiple-object.txt:124
msgid "Returns :attr:`ordering` by default."
msgstr ""

# 05fe2c61afc44cd6b05f82458f9c9b5c
#: ../../ref/class-based-views/mixins-multiple-object.txt:128
msgid ""
"Returns a 4-tuple containing (``paginator``, ``page``, ``object_list``, "
"``is_paginated``)."
msgstr ""

# 42a0fb0023e7433984628ebcb34af79a
#: ../../ref/class-based-views/mixins-multiple-object.txt:131
msgid ""
"Constructed by paginating ``queryset`` into pages of size ``page_size``. If "
"the request contains a ``page`` argument, either as a captured URL argument "
"or as a GET argument, ``object_list`` will correspond to the objects from "
"that page."
msgstr ""

#: ../../ref/class-based-views/mixins-multiple-object.txt:138
msgid ""
"Returns the number of items to paginate by, or ``None`` for no pagination. "
"By default this returns the value of :attr:`paginate_by`."
msgstr ""

# 02597c2780bb4a67960b2eace67739cc
#: ../../ref/class-based-views/mixins-multiple-object.txt:143
msgid ""
"Returns an instance of the paginator to use for this view. By default, "
"instantiates an instance of :attr:`paginator_class`."
msgstr ""

#: ../../ref/class-based-views/mixins-multiple-object.txt:148
msgid ""
"An integer specifying the number of \"overflow\" objects the last page can "
"contain. By default this returns the value of :attr:`paginate_orphans`."
msgstr ""

# 58eea5fb32f04137a14d8ba4a9d995f6
#: ../../ref/class-based-views/mixins-multiple-object.txt:154
msgid ""
"Return a boolean specifying whether to display the page if no objects are "
"available. If this method returns ``False`` and no objects are available, "
"the view will raise a 404 instead of displaying an empty page. By default, "
"this is ``True``."
msgstr ""

# 1b57499757b04f82bf18505ae99c4191
#: ../../ref/class-based-views/mixins-multiple-object.txt:161
msgid ""
"Return the context variable name that will be used to contain the list of "
"data that this view is manipulating. If ``object_list`` is a queryset of "
"Django objects and :attr:`context_object_name` is not set, the context name "
"will be the ``model_name`` of the model that the queryset is composed from, "
"with postfix ``'_list'`` appended. For example, the model ``Article`` would "
"have a context object named ``article_list``."
msgstr ""

# 54b4110446cc493b9ee8b5bd03f315d5
#: ../../ref/class-based-views/mixins-multiple-object.txt:172
msgid "Returns context data for displaying the list of objects."
msgstr ""

# 6ee459367a45415aa721382be4ae1521
#: ../../ref/class-based-views/mixins-multiple-object.txt:174
msgid "**Context**"
msgstr ""

# 80f8c767a3d84949bbbd4aeed685c583
#: ../../ref/class-based-views/mixins-multiple-object.txt:176
msgid ""
"``object_list``: The list of objects that this view is displaying. If "
"``context_object_name`` is specified, that variable will also be set in the "
"context, with the same value as ``object_list``."
msgstr ""

# 69187ea158ab4fdd84ad5b2500b87e33
#: ../../ref/class-based-views/mixins-multiple-object.txt:180
msgid ""
"``is_paginated``: A boolean representing whether the results are paginated. "
"Specifically, this is set to ``False`` if no page size has been specified, "
"or if the available objects do not span multiple pages."
msgstr ""

# ac85917f73b34ace996665c31d0134b0
#: ../../ref/class-based-views/mixins-multiple-object.txt:185
msgid ""
"``paginator``: An instance of :class:`django.core.paginator.Paginator`. If "
"the page is not paginated, this context variable will be ``None``."
msgstr ""

# b55b563e1f544d1890d9511dbb969d70
#: ../../ref/class-based-views/mixins-multiple-object.txt:189
msgid ""
"``page_obj``: An instance of :class:`django.core.paginator.Page`. If the "
"page is not paginated, this context variable will be ``None``."
msgstr ""

#: ../../ref/class-based-views/mixins-multiple-object.txt:195
msgid "``MultipleObjectTemplateResponseMixin``"
msgstr ""

# 01a38b2d5c4c416abdd75ccdb719ff18
#: ../../ref/class-based-views/mixins-multiple-object.txt:199
msgid ""
"A mixin class that performs template-based response rendering for views that "
"operate upon a list of object instances. Requires that the view it is mixed "
"with provides ``self.object_list``, the list of object instances that the "
"view is operating on. ``self.object_list`` may be, but is not required to "
"be, a :class:`~django.db.models.query.QuerySet`."
msgstr ""

# e4243882cc7147d5b2c59ab168fba6c3
#: ../../ref/class-based-views/mixins-multiple-object.txt:207
msgid ":class:`~django.views.generic.base.TemplateResponseMixin`"
msgstr ""

# 8bb7842fd45b4176a79041f3f807e50a
#: ../../ref/class-based-views/mixins-multiple-object.txt:213
msgid ""
"The suffix to append to the auto-generated candidate template name. Default "
"suffix is ``_list``."
msgstr ""

# 341b46703f6944d9b124e822ea8ebb9c
#: ../../ref/class-based-views/mixins-multiple-object.txt:218
msgid "Returns a list of candidate template names. Returns the following list:"
msgstr ""

# 1f8aad38487a4216b6959402513871a3
#: ../../ref/class-based-views/mixins-multiple-object.txt:220
msgid "the value of ``template_name`` on the view (if provided)"
msgstr ""

# a1759652b60149c7997ddbc177f77413
#: ../../ref/class-based-views/mixins-multiple-object.txt:221
msgid "``<app_label>/<model_name><template_name_suffix>.html``"
msgstr ""
