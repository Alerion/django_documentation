# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-16 11:56+0200\n"
"PO-Revision-Date: 2013-02-27 00:21\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 6c9ab2188f794bd695469c645affaebf
#: ../../ref/class-based-views/mixins-simple.txt:3
msgid "Simple mixins"
msgstr ""

#: ../../ref/class-based-views/mixins-simple.txt:6
msgid "``ContextMixin``"
msgstr ""

# fada42677af6467f9b2b8c6b5a774851
#: ../../ref/class-based-views/mixins-simple.txt:10
#: ../../ref/class-based-views/mixins-simple.txt:57
msgid "**Attributes**"
msgstr ""

#: ../../ref/class-based-views/mixins-simple.txt:16
msgid ""
"A dictionary to include in the context. This is a convenient way of "
"specifying some simple context in :meth:`~django.views.generic.base.View."
"as_view`. Example usage::"
msgstr ""

# 88bef39cec574a6d92974af8731b03a6
# be9c67aa7a084271a8a0e0828a596cc7
#: ../../ref/class-based-views/mixins-simple.txt:23
#: ../../ref/class-based-views/mixins-simple.txt:90
msgid "**Methods**"
msgstr ""

# 2f7e9d9732fc41dc8440be9369169202
#: ../../ref/class-based-views/mixins-simple.txt:27
msgid ""
"Returns a dictionary representing the template context. The keyword "
"arguments provided will make up the returned context. Example usage::"
msgstr ""

# 9008b9ffe4f045b39929b52ca27a4686
#: ../../ref/class-based-views/mixins-simple.txt:35
msgid ""
"The template context of all class-based generic views include a ``view`` "
"variable that points to the ``View`` instance."
msgstr ""

# 3372eb0600e143498962670fbad1dc3c
#: ../../ref/class-based-views/mixins-simple.txt:38
msgid "Use ``alters_data`` where appropriate"
msgstr ""

# fb911ea667cc4f1188ec3fca399bba9b
#: ../../ref/class-based-views/mixins-simple.txt:40
msgid ""
"Note that having the view instance in the template context may expose "
"potentially hazardous methods to template authors.  To prevent methods like "
"this from being called in the template, set ``alters_data=True`` on those "
"methods.  For more information, read the documentation on :ref:`rendering a "
"template context <alters-data-description>`."
msgstr ""

#: ../../ref/class-based-views/mixins-simple.txt:48
msgid "``TemplateResponseMixin``"
msgstr ""

# 3220a4ef2bbb47ea9ddb3affc8885b27
#: ../../ref/class-based-views/mixins-simple.txt:52
msgid ""
"Provides a mechanism to construct a :class:`~django.template.response."
"TemplateResponse`, given suitable context. The template to use is "
"configurable and can be further customized by subclasses."
msgstr ""

# 9b8b069b1597462f8b061f9c7d13344a
#: ../../ref/class-based-views/mixins-simple.txt:61
msgid ""
"The full name of a template to use as defined by a string. Not defining a "
"``template_name`` will raise a :class:`django.core.exceptions."
"ImproperlyConfigured` exception."
msgstr ""

#: ../../ref/class-based-views/mixins-simple.txt:67
msgid ""
"The :setting:`NAME <TEMPLATES-NAME>` of a template engine to use for loading "
"the template. ``template_engine`` is passed as the ``using`` keyword "
"argument to ``response_class``. Default is ``None``, which tells Django to "
"search for the template in all configured engines."
msgstr ""

# 59024345e79b4b5eb7f468e12cf2fd93
#: ../../ref/class-based-views/mixins-simple.txt:74
msgid ""
"The response class to be returned by ``render_to_response`` method. Default "
"is :class:`TemplateResponse <django.template.response.TemplateResponse>`. "
"The template and context of ``TemplateResponse`` instances can be altered "
"later (e.g. in :ref:`template response middleware <template-response-"
"middleware>`)."
msgstr ""

# 4b041e8aaf80495aa4c520e2b5c17319
#: ../../ref/class-based-views/mixins-simple.txt:80
msgid ""
"If you need custom template loading or custom context object instantiation, "
"create a ``TemplateResponse`` subclass and assign it to ``response_class``."
msgstr ""

# 7d6ae407b436407dacfdc5177277464f
#: ../../ref/class-based-views/mixins-simple.txt:86
msgid ""
"The content type to use for the response. ``content_type`` is passed as a "
"keyword argument to ``response_class``. Default is ``None`` -- meaning that "
"Django uses :setting:`DEFAULT_CONTENT_TYPE`."
msgstr ""

# 82f8676c71ff489290eeea0b96219ea5
#: ../../ref/class-based-views/mixins-simple.txt:94
msgid "Returns a ``self.response_class`` instance."
msgstr ""

# 2b1d76dff6f2408994c4d294d3522eff
#: ../../ref/class-based-views/mixins-simple.txt:96
msgid ""
"If any keyword arguments are provided, they will be passed to the "
"constructor of the response class."
msgstr ""

# 6da17e07f7eb4464aec21d03093b4230
#: ../../ref/class-based-views/mixins-simple.txt:99
msgid ""
"Calls :meth:`get_template_names()` to obtain the list of template names that "
"will be searched looking for an existent template."
msgstr ""

#: ../../ref/class-based-views/mixins-simple.txt:104
msgid ""
"Returns a list of template names to search for when rendering the template. "
"The first template that is found will be used."
msgstr ""

# a5c2ec9d7e3549f6be13986c39e1fb60
#: ../../ref/class-based-views/mixins-simple.txt:107
msgid ""
"If :attr:`template_name` is specified, the default implementation will "
"return a list containing :attr:`template_name` (if it is specified)."
msgstr ""
