# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
# redvi <liberty195@gmail.com>, 2013, 2014, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 11:07+0200\n"
"PO-Revision-Date: 2015-11-17 12:58+0200\n"
"Last-Translator: redvi <liberty195@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# 47f2a4a1103549be9a7ce2777f56ef7d
#: ../../ref/urlresolvers.txt:3
#, fuzzy
msgid "``django.urls`` utility functions"
msgstr "``django.core.urlresolvers`` utility functions"

#: ../../ref/urlresolvers.txt:9
msgid ""
"In older versions, these functions are located in ``django.core."
"urlresolvers``. Importing from the old location will continue to work until "
"Django 2.0."
msgstr ""

# c2f06fad9a454cddb5c5ff18d8360d8f
#: ../../ref/urlresolvers.txt:14
#, fuzzy
msgid "``reverse()``"
msgstr "reverse()"

# e73720aff5624925b2569abf3a0f0583
#: ../../ref/urlresolvers.txt:16
msgid ""
"If you need to use something similar to the :ttag:`url` template tag in your "
"code, Django provides the following function:"
msgstr ""
"Если вам нужно вернуть абсолютную ссылку, соответствующую указанному "
"представлению, как это делает :ttag:`url`, Django предоставляет следующую "
"функцию:"

# ac0bfd53e05f4288a47b05b5adbc2c5e
#: ../../ref/urlresolvers.txt:21
#, fuzzy
msgid ""
"``viewname`` can be a :ref:`URL pattern name <naming-url-patterns>` or the "
"callable view object. For example, given the following ``url``::"
msgstr ""
"``viewname`` может быть Python путь для импорта представления, :ref:"
"`название URL-шаблона <naming-url-patterns>` или объект представления. "
"Например, имеем следующий ``url``::"

# dab09e7e419e4c08a5d3572960b6b97e
#: ../../ref/urlresolvers.txt:28
msgid "you can use any of the following to reverse the URL::"
msgstr "вы можете получить URL одним из следующих способов::"

# 24c1c0cff92746768980e67cce775398
#: ../../ref/urlresolvers.txt:38
msgid ""
"If the URL accepts arguments, you may pass them in ``args``. For example::"
msgstr ""
"Если URL принимает аргументы, вы можете их передать аргументом ``args``. "
"Например::"

# 42c799381159485fb511c9dae85b410f
#: ../../ref/urlresolvers.txt:45
msgid "You can also pass ``kwargs`` instead of ``args``. For example::"
msgstr ""
"Вы можете использовать ``kwargs`` (словарь)  вместо ``args`` (отдельных "
"аргументов). Например:"

# a6c4f765a5f441b58617228c9df9a83a
#: ../../ref/urlresolvers.txt:50
msgid ""
"``args`` and ``kwargs`` cannot be passed to ``reverse()`` at the same time."
msgstr ""
"``args`` и ``kwargs`` не могут быть переданы функции ``reverse()`` вместе, "
"они используются по отдельности."

# 0c160bbc1dbb4d6e8706b5ca1f0a5a0c
#: ../../ref/urlresolvers.txt:52
#, fuzzy
msgid ""
"If no match can be made, ``reverse()`` raises a :class:`~django.urls."
"NoReverseMatch` exception."
msgstr ""
"Если ``reverse()`` не найдет подходящего URL-а, будет вызвано исключение :"
"class:`~django.core.urlresolvers.NoReverseMatch`."

# dd14332dd8424c1580a9186a0c3e3e70
#: ../../ref/urlresolvers.txt:55
msgid ""
"The ``reverse()`` function can reverse a large variety of regular expression "
"patterns for URLs, but not every possible one. The main restriction at the "
"moment is that the pattern cannot contain alternative choices using the "
"vertical bar (``\"|\"``) character. You can quite happily use such patterns "
"for matching against incoming URLs and sending them off to views, but you "
"cannot reverse such patterns."
msgstr ""
"Функция ``reverse()`` может предоставлять достаточно большое количество "
"шаблонов регулярных выражений, но не все из возможных. На данный момент "
"шаблон не предоставляет возможности использования символа вертикальной черты "
"(``\"|\"``) для указания альтернативного выбора. Вы можете использовать "
"такой шаблон для обработки входящего URL-а и получения представления, но вы "
"не можете получить URL для такого шаблона с помощью ``reverse()``."

# 418870914fd8429f9bb99500102b3a5b
#: ../../ref/urlresolvers.txt:62
msgid ""
"The ``current_app`` argument allows you to provide a hint to the resolver "
"indicating the application to which the currently executing view belongs. "
"This ``current_app`` argument is used as a hint to resolve application "
"namespaces into URLs on specific application instances, according to the :"
"ref:`namespaced URL resolution strategy <topics-http-reversing-url-"
"namespaces>`."
msgstr ""
"Аргумент ``current_app`` позволит вам получить полный путь к текущей "
"странице. Он возвращает текущий экземпляр приложения из указанного :ref:"
"`пространства имён <topics-http-reversing-url-namespaces>`."

# 2aabf47ebdec4134ad4a1db6fb79abd5
#: ../../ref/urlresolvers.txt:68
#, fuzzy
msgid ""
"The ``urlconf`` argument is the URLconf module containing the URL patterns "
"to use for reversing. By default, the root URLconf for the current thread is "
"used."
msgstr ""
"Аргумент ``urlconf`` принимает модуль URLconf, который содержит URL-шаблоны "
"для поиска URL-а. По умолчанию используется URLconf текущего запроса."

# a390aa00ec724a2b981c81c1ac022a42
#: ../../ref/urlresolvers.txt:73
msgid ""
"The string returned by ``reverse()`` is already :ref:`urlquoted <uri-and-iri-"
"handling>`. For example::"
msgstr ""
"Строка, которую возвращает ``reverse()``, уже кодирована. Чтобы узнать об "
"этом подробнее смотрите :ref:`urlquoted <uri-and-iri-handling>`. Пример::"

# 3f296e11736f477c80b1f3ff285529c6
#: ../../ref/urlresolvers.txt:79
msgid ""
"Applying further encoding (such as :meth:`~django.utils.http.urlquote` or "
"``urllib.quote``) to the output of ``reverse()`` may produce undesirable "
"results."
msgstr ""
"Кроме того, нужно иметь ввиду, что применение кодирования символов (такое "
"как :meth:`~django.utils.http.urlquote` или ``urllib.quote``) при выводе с "
"``reverse()`` может привести к нежелательным последствиям."

# 999bb333ecd84bda8f511953b3ea8815
#: ../../ref/urlresolvers.txt:84
#, fuzzy
msgid "``reverse_lazy()``"
msgstr "reverse_lazy()"

# 1e48935b8dca4f07ad4916bbe36d53c9
#: ../../ref/urlresolvers.txt:86
msgid "A lazily evaluated version of `reverse()`_."
msgstr "lazy стоит расценивать как \"ленивую\" версию `reverse()`_."

# be98303040dd4000a6d647ff26dc10c4
#: ../../ref/urlresolvers.txt:90
msgid ""
"It is useful for when you need to use a URL reversal before your project's "
"URLConf is loaded. Some common cases where this function is necessary are:"
msgstr ""
"Эта функция может быть полезна в случае, если вам нужно вернуть URL-адрес "
"прежде, чем ваши настройки URLConf будут загружены. Перечислим несколько "
"случаев, когда эта функция бывает необходима:"

# a46e6af7c7dd41358eb69523c8ab7645
#: ../../ref/urlresolvers.txt:93
msgid ""
"providing a reversed URL as the ``url`` attribute of a generic class-based "
"view."
msgstr "возврат URL как ``url`` атрибута для представления базовых классов."

# d2cd971cdba94381afc1344583f70787
#: ../../ref/urlresolvers.txt:96
msgid ""
"providing a reversed URL to a decorator (such as the ``login_url`` argument "
"for the :func:`django.contrib.auth.decorators.permission_required` "
"decorator)."
msgstr ""
"возврат URL-а как декоратора (такого как ``login_url`` для :func:`django."
"contrib.auth.decorators.permission_required`)."

# 2657ed77df4346128fb4ccb76bf950e4
#: ../../ref/urlresolvers.txt:100
msgid ""
"providing a reversed URL as a default value for a parameter in a function's "
"signature."
msgstr "возврат URL-адреса как переменной по умолчанию для параметров функции."

# 18ddc5a7a4e34c5a9c64c3209701ed01
#: ../../ref/urlresolvers.txt:104
#, fuzzy
msgid "``resolve()``"
msgstr "resolve()"

# 48a81ce420ec4c9bb127dc931431a3ef
#: ../../ref/urlresolvers.txt:106
msgid ""
"The ``resolve()`` function can be used for resolving URL paths to the "
"corresponding view functions. It has the following signature:"
msgstr ""
"Функция ``resolve()`` может быть использована для получения URL-адреса из "
"соответствующего представления. Она имеет следующий синтаксис:"

# 7a041c888da54aa4952e7d9c719ad026
#: ../../ref/urlresolvers.txt:111
#, fuzzy
msgid ""
"``path`` is the URL path you want to resolve. As with :func:`~django.urls."
"reverse`, you don't need to worry about the ``urlconf`` parameter. The "
"function returns a :class:`ResolverMatch` object that allows you to access "
"various metadata about the resolved URL."
msgstr ""
"``path`` -- это путь к URL-адресу, который вы хотите получить. Как и в "
"случае с :func:`~django.core.urlresolvers.reverse`, вы не должны волноваться "
"о параметрах ``urlconf``. Эта функция возвращает объект :class:"
"`ResolverMatch`, что делает доступным использование различных метаданных."

# da481aacf5b54cf18321712c5030fd5b
#: ../../ref/urlresolvers.txt:116
#, fuzzy
msgid ""
"If the URL does not resolve, the function raises a :exc:`~django.urls."
"Resolver404` exception (a subclass of :class:`~django.http.Http404`) ."
msgstr ""
"Если URL-адрес вернуть не удаётся, функция возбуждает исключение :class:"
"`~django.core.urlresolvers.Resolver404`(дочерний класс :class:`~django.http."
"Http404`)."

# cb0a8aa4bb784bc98bbe05f9954163a0
#: ../../ref/urlresolvers.txt:124
msgid "The view function that would be used to serve the URL"
msgstr "Функция представления, которая будет использована для передачи URL."

# 2b303376a73941f29a47a910c14c4084
#: ../../ref/urlresolvers.txt:128
msgid ""
"The arguments that would be passed to the view function, as parsed from the "
"URL."
msgstr ""
"Аргументы, которые будут переданы в функцию представления, as parsed from "
"the URL."

# 15782232bf4c4e05883458ca7c336bc7
#: ../../ref/urlresolvers.txt:133
msgid ""
"The keyword arguments that would be passed to the view function, as parsed "
"from the URL."
msgstr ""
"именованные аргументы, которые будут переданы в функцию представления, as "
"parsed from the URL."

# db52f6149fe84480bd0ae5bc2d378529
#: ../../ref/urlresolvers.txt:138
msgid "The name of the URL pattern that matches the URL."
msgstr "Название URL-шаблона для сопоставления URL-адресов."

# 6c93d233044f43ddb389702e683b7638
#: ../../ref/urlresolvers.txt:142
msgid "The application namespace for the URL pattern that matches the URL."
msgstr ""
"Название приложения из пространства имён для сопоставления URL-адресов."

# 3d5817e0f4194bbf86d8b12e17b242b9
#: ../../ref/urlresolvers.txt:149
msgid ""
"The list of individual namespace components in the full application "
"namespace for the URL pattern that matches the URL. For example, if the "
"``app_name`` is ``'foo:bar'``, then ``app_names`` will be ``['foo', 'bar']``."
msgstr ""
"Список пространств имен, из которых состоит полное пространство имен "
"приложения для URL-шаблона, который удовлетворяет URL-у. Для ``foo:bar`` это "
"будет ``['foo', 'bar']``."

# 608101eac69e4f4f9a30c5f4dd4b1ccd
#: ../../ref/urlresolvers.txt:156
msgid "The instance namespace for the URL pattern that matches the URL."
msgstr "Название выбранного пространства имён для сопоставления URL-адресов."

# 3d5817e0f4194bbf86d8b12e17b242b9
#: ../../ref/urlresolvers.txt:161
msgid ""
"The list of individual namespace components in the full instance namespace "
"for the URL pattern that matches the URL. i.e., if the namespace is ``foo:"
"bar``, then namespaces will be ``['foo', 'bar']``."
msgstr "Список пространств имен. Для ``foo:bar`` это будет ``['foo', 'bar']``."

# bd4de95ca78044cc86cfe2eed44a4f79
#: ../../ref/urlresolvers.txt:168
msgid ""
"The name of the view that matches the URL, including the namespace if there "
"is one."
msgstr ""
"Название представления, которое обрабатывает URL, включая пространства имен, "
"если таковы используются."

# d991ec1044be4754abf95828acbf13b3
#: ../../ref/urlresolvers.txt:171
msgid ""
"A :class:`ResolverMatch` object can then be interrogated to provide "
"information about the URL pattern that matches a URL::"
msgstr ""
"С помощью объекта :class:`ResolverMatch` можно впоследствии запросить "
"информацию о соответствии между URL-адресом и используемом имени "
"представления (т.е. какому URL-адресу какой шаблон принадлежит)::"

# 347f69761b35426e8ddde903813004fc
#: ../../ref/urlresolvers.txt:179
msgid "A :class:`ResolverMatch` object can also be assigned to a triple::"
msgstr "Также объекту :class:`ResolverMatch` можно передать три параметра::"

# 4aea0e9f7abe41e88178c138b3a62c97
#: ../../ref/urlresolvers.txt:183
#, fuzzy
msgid ""
"One possible use of :func:`~django.urls.resolve` would be to test whether a "
"view would raise a ``Http404`` error before redirecting to it::"
msgstr ""
"Одним из возможных вариантов использования :func:`~django.core.urlresolvers."
"resolve` может быть проверка вызова представления, которое возбуждает "
"исключение ``Http404`` до того, как осуществить перенаправление::"

# 5b458dccb3f442d68145b1f0746cbb91
#: ../../ref/urlresolvers.txt:206
#, fuzzy
msgid "``get_script_prefix()``"
msgstr "get_script_prefix()"

# bc056e1c489844b2b16694cb171d4f8b
#: ../../ref/urlresolvers.txt:210
#, fuzzy
msgid ""
"Normally, you should always use :func:`~django.urls.reverse` to define URLs "
"within your application. However, if your application constructs part of the "
"URL hierarchy itself, you may occasionally need to generate URLs. In that "
"case, you need to be able to find the base URL of the Django project within "
"its Web server (normally, :func:`~django.urls.reverse` takes care of this "
"for you). In that case, you can call ``get_script_prefix()``, which will "
"return the script prefix portion of the URL for your Django project. If your "
"Django project is at the root of its web server, this is always ``\"/\"``."
msgstr ""
"Как правило, вы всегда будете использовать :func:`~django.core.urlresolvers."
"reverse` для определения URL-адресов в вашем представлении. Однако, если "
"ваше приложение состоит из целой иерархии URL-ов, иногда вам может "
"понадобиться сгенерировать URL-адреса. В этом случае, вам нужно указать "
"базовый URL-адрес проекта Django в пределах директории вашего web-сервера "
"(обычно :func:`~django.core.urlresolvers.reverse` делает это за вас). Тогда "
"необходимо вызвать ``get_script_prefix()``, который будет возвращать часть "
"сценария префикса из URL вашего проекта на Django. Если проект находится в "
"корне web-сервера, это всегда ``\"/\"``."

#~ msgid ""
#~ "The ability to reverse using the Python path, e.g. ``reverse('news.views."
#~ "archive')``, has been deprecated."
#~ msgstr ""
#~ "Возможность получить URL по Python пути, например ``reverse('news.views."
#~ "archive')``, устарела."

# 35071790d9964184ad3f8f22b3c1f141
#~ msgid "Make sure your views are all correct."
#~ msgstr "Убедитесь, что все URL-шаблоны правильные."

# 74825a44d81a4683a1f67f1000e7417c
#~ msgid ""
#~ "As part of working out which URL names map to which patterns, the "
#~ "``reverse()`` function has to import all of your URLconf files and "
#~ "examine the name of each view. This involves importing each view "
#~ "function. If there are *any* errors whilst importing any of your view "
#~ "functions, it will cause ``reverse()`` to raise an error, even if that "
#~ "view function is not the one you are trying to reverse."
#~ msgstr ""
#~ "Для определения URL-а по названию функции  ``reverse()`` необходимо "
#~ "импортировать все файлы конфигурации URL-ов и проверить каждый. При этом "
#~ "импортируются все функции представления. Если при этом возникнет ошибка, "
#~ "``reverse()`` вызовет исключение, даже если это не то представление, "
#~ "которое ищет ``reverse()``."

# 522f8622e08846a48d116e2c66fa21c5
#~ msgid ""
#~ "Make sure that any views you reference in your URLconf files exist and "
#~ "can be imported correctly. Do not include lines that reference views you "
#~ "haven't written yet, because those views will not be importable."
#~ msgstr ""
#~ "Убедитесь, что представления, указанные в ваших файлах URLconf "
#~ "действительно существуют и могут быть правильно импортированы. Не "
#~ "включайте строки, которые ссылаются на ещё не написанные представления, "
#~ "поскольку эти представления импортированы не будут."

# c7d9a6d46849429dab74aea6af91d76f
#~ msgid ""
#~ "``viewname`` is either the function name (either a function reference, or "
#~ "the string version of the name, if you used that form in ``urlpatterns``) "
#~ "or the :ref:`URL pattern name <naming-url-patterns>`.  Normally, you "
#~ "won't need to worry about the ``urlconf`` parameter and will only pass in "
#~ "the positional and keyword arguments to use in the URL matching. For "
#~ "example::"
#~ msgstr ""
#~ "``viewname`` это любое имя функции (либо ссылка на саму функцию, либо на "
#~ "её строковое представление, если вы используете их в ``urlpatterns``) "
#~ "или :ref:`именованный URL шаблон  <naming-url-patterns>`. По-хорошему, вы "
#~ "не должны волноваться о параметрах ``urlconf``, вам лишь нужно указать "
#~ "позиционные и именованные агрументы для получения соответствия. Например:"
