# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2014, 2015, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-05 11:28+0300\n"
"PO-Revision-Date: 2016-03-17 14:13+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# 9ab714fd1b364e149abef53dd88ed9f0
#: ../../ref/middleware.txt:3
msgid "Middleware"
msgstr "Промежуточный слой (Middleware)"

# a4b4fb4973b14dae82c0bdfb0d9604a8
#: ../../ref/middleware.txt:8
msgid ""
"This document explains all middleware components that come with Django. For "
"information on how to use them and how to write your own middleware, see "
"the :doc:`middleware usage guide </topics/http/middleware>`."
msgstr ""
"Этот раздел описывает промежуточные слои, которые предоставляет Django. Как "
"использовать и создавать свои промежуточные слои, смотрите :doc:"
"`соответствующий раздел </topics/http/middleware>`."

# 526ed97ef4a54a4bae160d10c94d4d80
#: ../../ref/middleware.txt:13
msgid "Available middleware"
msgstr "Доступные промежуточные слои"

# 84d27f523d884f749cda53bbe7fcd28e
#: ../../ref/middleware.txt:16
msgid "Cache middleware"
msgstr "Кэширующий промежуточный слой"

# 865142ad762040e3af0ab3dfb44b7335
#: ../../ref/middleware.txt:25
msgid ""
"Enable the site-wide cache. If these are enabled, each Django-powered page "
"will be cached for as long as the :setting:`CACHE_MIDDLEWARE_SECONDS` "
"setting defines. See the :doc:`cache documentation </topics/cache>`."
msgstr ""
"Активирует кэширование для всего сайта. При этом все страницы, которые "
"генерируются Django, будут закэшированы на время, указанное в настройке :"
"setting:`CACHE_MIDDLEWARE_SECONDS`. Смотрите :doc:`раздел о кэшировании</"
"topics/cache>`."

# 3572fd4055d74fe9a0627f4eaa36525e
#: ../../ref/middleware.txt:30
msgid "\"Common\" middleware"
msgstr "\"Common\" промежуточный слой"

# 4d76534edbe54f379c1fad5bbbc9caa2
#: ../../ref/middleware.txt:37
msgid "Adds a few conveniences for perfectionists:"
msgstr "Добавляет несколько полезностей для перфекционистов:"

# 7d639094433b49e7859c8d93575fba95
#: ../../ref/middleware.txt:39
msgid ""
"Forbids access to user agents in the :setting:`DISALLOWED_USER_AGENTS` "
"setting, which should be a list of compiled regular expression objects."
msgstr ""
"Ограничивает доступ для клиентов, которые указанны в настройке :setting:"
"`DISALLOWED_USER_AGENTS`. Настройка должна содержать список скомпилированных "
"регулярных выражений."

# 0cbc29e00fa144a0bef39b7c8aab9a1a
#: ../../ref/middleware.txt:42
msgid ""
"Performs URL rewriting based on the :setting:`APPEND_SLASH` and :setting:"
"`PREPEND_WWW` settings."
msgstr ""
"Меняет URL в соответствии с настройками :setting:`APPEND_SLASH` и :setting:"
"`PREPEND_WWW`."

# 3d83e4724bc541a1ad9d5b2176c25c57
#: ../../ref/middleware.txt:45
msgid ""
"If :setting:`APPEND_SLASH` is ``True`` and the initial URL doesn't end with "
"a slash, and it is not found in the URLconf, then a new URL is formed by "
"appending a slash at the end. If this new URL is found in the URLconf, then "
"Django redirects the request to this new URL. Otherwise, the initial URL is "
"processed as usual."
msgstr ""
"Если :setting:`APPEND_SLASH` равна ``True`` и вызванный URL не оканчивается "
"на слеш, и он не найден в URLconf, создается новый URL путем добавления "
"слеша в конец. Если новый URL найден в URLconf, Django отправляет "
"перенаправление на этот URL. Иначе начальный URL обрабатывается как обычно."

# 791d6be53467448ba5dd69cc26f0ddde
#: ../../ref/middleware.txt:51
msgid ""
"For example, ``foo.com/bar`` will be redirected to ``foo.com/bar/`` if you "
"don't have a valid URL pattern for ``foo.com/bar`` but *do* have a valid "
"pattern for ``foo.com/bar/``."
msgstr ""
"Например, ``foo.com/bar`` будет перенаправлен на ``foo.com/bar/``, если нет "
"URL-шаблона для ``foo.com/bar``, но *есть* для ``foo.com/bar/``."

# 870a4f25aee441d6bda4c20addbcd456
#: ../../ref/middleware.txt:55
msgid ""
"If :setting:`PREPEND_WWW` is ``True``, URLs that lack a leading \"www.\" "
"will be redirected to the same URL with a leading \"www.\""
msgstr ""
"Если :setting:`PREPEND_WWW` равна ``True``, URL-ы без \"www.\" будут "
"перенаправлены на URL с добавлением \"www.\""

# ad519af5417649d595a5e33cdc4a0cf6
#: ../../ref/middleware.txt:58
msgid ""
"Both of these options are meant to normalize URLs. The philosophy is that "
"each URL should exist in one, and only one, place. Technically a URL ``foo."
"com/bar`` is distinct from ``foo.com/bar/`` -- a search-engine indexer would "
"treat them as separate URLs -- so it's best practice to normalize URLs."
msgstr ""
"Обе эти настройки предназначены для нормализации URL-ов. Философия такая -- "
"URL должен быть уникальным и единым. Технически URL ``foo.com/bar`` "
"отличается от ``foo.com/bar/`` -- поисковик проиндексирует их как отдельные "
"URL-ы -- поэтому хорошей практикой является нормализация URL-ов."

# cf92223a2d12401f955d7d6a72f17437
#: ../../ref/middleware.txt:64
msgid ""
"Handles ETags based on the :setting:`USE_ETAGS` setting. If :setting:"
"`USE_ETAGS` is set to ``True``, Django will calculate an ETag for each "
"request by MD5-hashing the page content, and it'll take care of sending "
"``Not Modified`` responses, if appropriate."
msgstr ""
"Обрабатываете ETag с учетом настройки :setting:`USE_ETAGS`. Если :setting:"
"`USE_ETAGS` равна ``True``, Django вычислит ETag для каждого запроса, "
"используя MD5-хеш содержимого страницы, и отправит ответ ``Not Modified`` "
"при возможности."

#: ../../ref/middleware.txt:69
msgid "Sets the ``Content-Length`` header for non-streaming responses."
msgstr ""

# 65658c2a08c6478b9efb0a2f9580999c
#: ../../ref/middleware.txt:73
#, fuzzy
msgid "Older versions didn't set the ``Content-Length`` header."
msgstr "Ответ уже содержит заголовок ``Content-Encoding``."

#: ../../ref/middleware.txt:77
msgid ""
"The :setting:`USE_ETAGS` setting is deprecated in favor of using :class:"
"`~django.middleware.http.ConditionalGetMiddleware` for ETag processing."
msgstr ""

# 50f26f259e3e45dbba3787cb3dcf1957
#: ../../ref/middleware.txt:83
msgid ""
"Defaults to :class:`~django.http.HttpResponsePermanentRedirect`. Subclass "
"``CommonMiddleware`` and override the attribute to customize the redirects "
"issued by the middleware."
msgstr ""
"По умолчанию :class:`~django.http.HttpResponsePermanentRedirect`. Можете "
"создать класс наследник ``CommonMiddleware`` и переопределить класс ответа, "
"который используется для перенаправления."

# 696eda3aff3c435d83537341b253a020
#: ../../ref/middleware.txt:89
msgid ""
"Sends broken link notification emails to :setting:`MANAGERS` (see :doc:`/"
"howto/error-reporting`)."
msgstr ""
"Отсылает уведомления о сломанных ссылках на :setting:`MANAGERS` (смотрите :"
"doc:`/howto/error-reporting`)."

# 68000ca74f614849a26149ca86f2e6b1
#: ../../ref/middleware.txt:93
#, fuzzy
msgid "Exception middleware"
msgstr "Промежуточный слой сессии"

#: ../../ref/middleware.txt:102
msgid ""
"Catches exceptions raised during the request/response cycle and returns the "
"appropriate response."
msgstr ""

#: ../../ref/middleware.txt:105
msgid ""
":class:`~django.http.Http404` is processed by :data:`~django.conf.urls."
"handler404` (or a more friendly debug page if :setting:`DEBUG=True <DEBUG>`)."
msgstr ""

#: ../../ref/middleware.txt:108
msgid ""
":class:`~django.core.exceptions.PermissionDenied` is processed by :data:"
"`~django.conf.urls.handler403`."
msgstr ""

#: ../../ref/middleware.txt:110
msgid ""
"``MultiPartParserError`` is processed by :data:`~django.conf.urls."
"handler400`."
msgstr ""

#: ../../ref/middleware.txt:111
msgid ""
":class:`~django.core.exceptions.SuspiciousOperation` is processed by :data:"
"`~django.conf.urls.handler400`  (or a more friendly debug page if :setting:"
"`DEBUG=True <DEBUG>`)."
msgstr ""

#: ../../ref/middleware.txt:114
msgid ""
"Any other exception is processed by :data:`~django.conf.urls.handler500` (or "
"a more friendly debug page if :setting:`DEBUG=True <DEBUG>`)."
msgstr ""

#: ../../ref/middleware.txt:117
msgid ""
"Django uses this middleware regardless of whether or not you include it in :"
"setting:`MIDDLEWARE`, however, you may want to subclass if your own "
"middleware needs to transform any of these exceptions into the appropriate "
"responses. :class:`~django.middleware.locale.LocaleMiddleware` does this, "
"for example."
msgstr ""

# 60f4baadd2ef4389ac9392416ed5b07b
#: ../../ref/middleware.txt:123
msgid "GZip middleware"
msgstr "GZip промежуточный слой"

# cc5f9dbf7fa647c599ce1fd619d01c81
#: ../../ref/middleware.txt:132
#, fuzzy
msgid ""
"Security researchers recently revealed that when compression techniques "
"(including ``GZipMiddleware``) are used on a website, the site may become "
"exposed to a number of possible attacks. Before using ``GZipMiddleware`` on "
"your site, you should consider very carefully whether you are subject to "
"these attacks. If you're in *any* doubt about whether you're affected, you "
"should avoid using ``GZipMiddleware``. For more details, see the `the BREACH "
"paper (PDF)`_ and `breachattack.com`_."
msgstr ""
"Исследователи безопасности определили, что при применении сжатия на сайте "
"(включая ``GZipMiddleware``), ваш сайт становится уязвим к некоторым типам "
"атак. Они могут использоваться для обхода CSRF защиты. Перед использованием "
"``GZipMiddleware`` обдумайте на сколько это критично для вас. Если у вас "
"есть *малейшие* сомнений, не используйте ``GZipMiddleware``. Подробности "
"смотрите в `исследовании BREACH (PDF) <http://breachattack.com/resources/"
"BREACH%20-%20SSL,%20gone%20in%2030%20seconds.pdf>`_ и `breachattack.com "
"<http://breachattack.com/>`_."

# c7a10081ef354548a70c637f74fbdde2
#: ../../ref/middleware.txt:143
msgid ""
"Compresses content for browsers that understand GZip compression (all modern "
"browsers)."
msgstr ""
"Сжимает ответ для браузеров, которые поддерживают GZip (все современные "
"браузеры)."

# 461e3ae1b31b44dda63c2e9450bbbe3f
#: ../../ref/middleware.txt:146
msgid ""
"This middleware should be placed before any other middleware that need to "
"read or write the response body so that compression happens afterward."
msgstr ""
"Этот промежуточный слой должен находится перед любым другим промежуточный "
"слоем, который читает или пишет содержимое ответа, чтобы сжатие происходило "
"в самом конце."

# 555975971b0b4b8785bb20ac5e07e476
#: ../../ref/middleware.txt:149
msgid "It will NOT compress content if any of the following are true:"
msgstr "Содержимое ответа НЕ будет сжато при следующих условиях:"

# 25501ea892574b9ba352d83f22ae138f
#: ../../ref/middleware.txt:151
msgid "The content body is less than 200 bytes long."
msgstr "Содержимое ответа меньше 200 байтов."

# 65658c2a08c6478b9efb0a2f9580999c
#: ../../ref/middleware.txt:153
msgid "The response has already set the ``Content-Encoding`` header."
msgstr "Ответ уже содержит заголовок ``Content-Encoding``."

# 2bf00508daeb407badf9c64f979d4227
#: ../../ref/middleware.txt:155
msgid ""
"The request (the browser) hasn't sent an ``Accept-Encoding`` header "
"containing ``gzip``."
msgstr ""
"Браузер не отослал в запросе заголовок ``Accept-Encoding``, который содержит "
"``gzip``."

#: ../../ref/middleware.txt:158
msgid ""
"If the response has an ``ETag`` header, the ETag is made weak to comply "
"with :rfc:`7232#section-2.1`."
msgstr ""

# 71fcd8d8fe684f568a505555e8615371
#: ../../ref/middleware.txt:161
msgid ""
"You can apply GZip compression to individual views using the :func:`~django."
"views.decorators.gzip.gzip_page()` decorator."
msgstr ""
"Вы можете добавить GZip сжатие для определенных представлений, используя "
"декоратор :func:`~django.views.decorators.gzip.gzip_page()`."

#: ../../ref/middleware.txt:166
msgid ""
"In older versions, Django's CSRF protection mechanism was vulnerable to "
"BREACH attacks when compression was used. This is no longer the case, but "
"you should still take care not to compromise your own secrets this way."
msgstr ""

# ad30761246d44dcd9c30eed0ec182bcd
#: ../../ref/middleware.txt:171
msgid "Conditional GET middleware"
msgstr "Промежуточный слой для обработки условных GET-запросов"

# f7bf15ee1fdb40179e3361b91e370334
#: ../../ref/middleware.txt:178
#, fuzzy
msgid ""
"Handles conditional GET operations. If the response doesn't have an ``ETag`` "
"header, the middleware adds one if needed. If the response has a ``ETag`` or "
"``Last-Modified`` header, and the request has ``If-None-Match`` or ``If-"
"Modified-Since``, the response is replaced by an :class:`~django.http."
"HttpResponseNotModified`."
msgstr ""
"Обрабатывает условные GET операции. Если ответ содержит заголовки ``ETag`` "
"или ``Last-Modified``, и запрос содержит ``If-None-Match`` или ``If-Modified-"
"Since``, ответ заменяется на :class:`~django.http.HttpResponseNotModified`."

#: ../../ref/middleware.txt:186
msgid ""
"In older versions, the middleware set the ``Content-Length`` and ``Date`` "
"headers and didn't set the ``ETag`` header."
msgstr ""

# 41887ac5ff31457aabd29232dd43beec
#: ../../ref/middleware.txt:190
msgid "Locale middleware"
msgstr "Промежуточный слой локализации"

# 15c331900cbd4f27a221030cfda4749f
#: ../../ref/middleware.txt:197
msgid ""
"Enables language selection based on data from the request. It customizes "
"content for each user. See the :doc:`internationalization documentation </"
"topics/i18n/translation>`."
msgstr ""
"Выполняет выбор текущего языка на основе данных из запроса. Меняет "
"содержимое для каждого пользователя отдельно. Смотрите :doc:`раздел об "
"интернационализации </topics/i18n/translation>`."

# 50f26f259e3e45dbba3787cb3dcf1957
#: ../../ref/middleware.txt:203
msgid ""
"Defaults to :class:`~django.http.HttpResponseRedirect`. Subclass "
"``LocaleMiddleware`` and override the attribute to customize the redirects "
"issued by the middleware."
msgstr ""
"По умолчанию :class:`~django.http.HttpResponseRedirect`. Можете создать "
"класс наследник ``LocaleMiddleware`` и переопределить класс ответа, который "
"используется для перенаправления."

# 537e361f00a84de59134ec53e025381b
#: ../../ref/middleware.txt:208
msgid "Message middleware"
msgstr "Промежуточный слой сообщений"

# 3bd3782328c14c33809f67ea301d74d9
#: ../../ref/middleware.txt:215
msgid ""
"Enables cookie- and session-based message support. See the :doc:`messages "
"documentation </ref/contrib/messages>`."
msgstr ""
"Добавляет поддержку сообщений на основе кук или сессии. Смотрите :doc:"
"`раздел о сообщениях </ref/contrib/messages>`."

# b1779e87aacc40be8f00ca11950b17c7
#: ../../ref/middleware.txt:221
msgid "Security middleware"
msgstr "Промежуточный слой безопасности"

#: ../../ref/middleware.txt:227
msgid ""
"If your deployment situation allows, it's usually a good idea to have your "
"front-end Web server perform the functionality provided by the "
"``SecurityMiddleware``. That way, if there are requests that aren't served "
"by Django (such as static media or user-uploaded files), they will have the "
"same protections as requests to your Django application."
msgstr ""
"Лучший вариант -- чтобы фронтенд веб-сервер выполнял действия, которые "
"выполняет ``SecurityMiddleware``. В таком случае все запросы, даже те, "
"которые не обрабатываются Django (запросы к статическим и загруженным "
"файлам), будут защищены как и запросы к приложению Django."

#: ../../ref/middleware.txt:235
msgid ""
"The ``django.middleware.security.SecurityMiddleware`` provides several "
"security enhancements to the request/response cycle. Each one can be "
"independently enabled or disabled with a setting."
msgstr ""
"``django.middleware.security.SecurityMiddleware`` предоставляет ряд проверок "
"безопасности при обработке запроса/ответа. Каждая из них может быть "
"выключена/включена через настройки."

#: ../../ref/middleware.txt:239
msgid ":setting:`SECURE_BROWSER_XSS_FILTER`"
msgstr ":setting:`SECURE_BROWSER_XSS_FILTER`"

#: ../../ref/middleware.txt:240
msgid ":setting:`SECURE_CONTENT_TYPE_NOSNIFF`"
msgstr ":setting:`SECURE_CONTENT_TYPE_NOSNIFF`"

#: ../../ref/middleware.txt:241
msgid ":setting:`SECURE_HSTS_INCLUDE_SUBDOMAINS`"
msgstr ":setting:`SECURE_HSTS_INCLUDE_SUBDOMAINS`"

#: ../../ref/middleware.txt:242
#, fuzzy
msgid ":setting:`SECURE_HSTS_PRELOAD`"
msgstr ":setting:`SECURE_HSTS_SECONDS`"

#: ../../ref/middleware.txt:243
msgid ":setting:`SECURE_HSTS_SECONDS`"
msgstr ":setting:`SECURE_HSTS_SECONDS`"

#: ../../ref/middleware.txt:244
msgid ":setting:`SECURE_REDIRECT_EXEMPT`"
msgstr ":setting:`SECURE_REDIRECT_EXEMPT`"

#: ../../ref/middleware.txt:245
msgid ":setting:`SECURE_SSL_HOST`"
msgstr ":setting:`SECURE_SSL_HOST`"

#: ../../ref/middleware.txt:246
msgid ":setting:`SECURE_SSL_REDIRECT`"
msgstr ":setting:`SECURE_SSL_REDIRECT`"

#: ../../ref/middleware.txt:251
msgid "HTTP Strict Transport Security"
msgstr "HTTP Strict Transport Security"

#: ../../ref/middleware.txt:253
msgid ""
"For sites that should only be accessed over HTTPS, you can instruct modern "
"browsers to refuse to connect to your domain name via an insecure connection "
"(for a given period of time) by setting the `\"Strict-Transport-Security\" "
"header`_. This reduces your exposure to some SSL-stripping man-in-the-middle "
"(MITM) attacks."
msgstr ""
"Для сайтов, которые должны быть доступны только по HTTPS, вы можете указать "
"современным браузерам не подключаться к вашему домену по небезопасному "
"подключению (в течении определенного времени), установив `заголовок \"Strict-"
"Transport-Security\" <http://en.wikipedia.org/wiki/"
"Strict_Transport_Security>`_. Это уменьшает подверженность MITM атакам."

#: ../../ref/middleware.txt:259
msgid ""
"``SecurityMiddleware`` will set this header for you on all HTTPS responses "
"if you set the :setting:`SECURE_HSTS_SECONDS` setting to a non-zero integer "
"value."
msgstr ""
"``SecurityMiddleware`` будет устанавливать этот заголовок для всех HTTPS "
"ответов, если вы укажите в настройке :setting:`SECURE_HSTS_SECONDS` не "
"нулевое значение."

#: ../../ref/middleware.txt:262
msgid ""
"When enabling HSTS, it's a good idea to first use a small value for testing, "
"for example, :setting:`SECURE_HSTS_SECONDS = 3600<SECURE_HSTS_SECONDS>` for "
"one hour. Each time a Web browser sees the HSTS header from your site, it "
"will refuse to communicate non-securely (using HTTP) with your domain for "
"the given period of time. Once you confirm that all assets are served "
"securely on your site (i.e. HSTS didn't break anything), it's a good idea to "
"increase this value so that infrequent visitors will be protected (31536000 "
"seconds, i.e. 1 year, is common)."
msgstr ""
"При включении HSTS для начала лучше протестировать с небольшим значение, "
"например, :setting:`SECURE_HSTS_SECONDS = 3600<SECURE_HSTS_SECONDS>`. Каждый "
"раз, когда браузер видит заголовок HSTS в ответе вашего сайта, он "
"отказывается подключаться по небезопасному подключению (используя HTTP) к "
"вашему домену в течении указанного времени. После проверки, что все "
"статические файлы работают через HTTPS (то есть HSTS ничего не ломает), "
"можно увеличить это значение, чтобы нечастые пользователи были защищены "
"(обычно используют 31536000 секунд, то есть 1 год)."

#: ../../ref/middleware.txt:271
#, fuzzy
msgid ""
"Additionally, if you set the :setting:`SECURE_HSTS_INCLUDE_SUBDOMAINS` "
"setting to ``True``, ``SecurityMiddleware`` will add the "
"``includeSubDomains`` directive to the ``Strict-Transport-Security`` header. "
"This is recommended (assuming all subdomains are served exclusively using "
"HTTPS), otherwise your site may still be vulnerable via an insecure "
"connection to a subdomain."
msgstr ""
"Если вы установите ``True`` еще и в :setting:"
"`SECURE_HSTS_INCLUDE_SUBDOMAINS`, ``SecurityMiddleware``добавит тег "
"``includeSubDomains`` к заголовку ``Strict-Transport-Security``. Рекомендуем "
"включить эту настройку (убедитесь, что все поддомены работают по HTTPS), "
"иначе ваш сайт может быть уязвим через небезопасное подключение к поддомену."

#: ../../ref/middleware.txt:277
msgid ""
"If you wish to submit your site to the `browser preload list`_, set the :"
"setting:`SECURE_HSTS_PRELOAD` setting to ``True``. That appends the "
"``preload`` directive to the ``Strict-Transport-Security`` header."
msgstr ""

#: ../../ref/middleware.txt:282
msgid ""
"The HSTS policy applies to your entire domain, not just the URL of the "
"response that you set the header on. Therefore, you should only use it if "
"your entire domain is served via HTTPS only."
msgstr ""
"HSTS применяется ко всему домену, а не только URL, который вернул ответ с "
"заголовком. Поэтому вам следует использовать его только, если весь домен "
"доступен через HTTPS."

#: ../../ref/middleware.txt:286
msgid ""
"Browsers properly respecting the HSTS header will refuse to allow users to "
"bypass warnings and connect to a site with an expired, self-signed, or "
"otherwise invalid SSL certificate. If you use HSTS, make sure your "
"certificates are in good shape and stay that way!"
msgstr ""
"Браузеры, которые поддерживают заголовки HSTS, не позволят пользователям "
"игнорировать предупреждение и подключиться к сайту с устаревшим, "
"самостоятельно подписанным, или неправильным SSL сертификатом. Если вы "
"используете HSTS, убедитесь, что с вашими сертификатами все в порядке!"

#: ../../ref/middleware.txt:292
msgid ""
"If you are deployed behind a load-balancer or reverse-proxy server, and the "
"``Strict-Transport-Security`` header is not being added to your responses, "
"it may be because Django doesn't realize that it's on a secure connection; "
"you may need to set the :setting:`SECURE_PROXY_SSL_HEADER` setting."
msgstr ""
"Если ваш сервер находится за балансировщиком нагрузки, или прокси, и "
"заголовок ``Strict-Transport-Security`` не добавляется к ответам, это может "
"быть вызвано тем, что Django не определяет, что используется защищенное "
"подключение. Возможно вам следует указать настройку :setting:"
"`SECURE_PROXY_SSL_HEADER`."

#: ../../ref/middleware.txt:303
msgid "``X-Content-Type-Options: nosniff``"
msgstr "``X-Content-Type-Options: nosniff``"

#: ../../ref/middleware.txt:305
msgid ""
"Some browsers will try to guess the content types of the assets that they "
"fetch, overriding the ``Content-Type`` header. While this can help display "
"sites with improperly configured servers, it can also pose a security risk."
msgstr ""
"Некоторые браузеры пытаются угадать тип содержимого(content type) полученных "
"файлов, подменяя заголовок ``Content-Type``. В то время, как такой подход "
"помогает правильно отображать сайты с неправильно настроенных серверов, он "
"может быть и уязвимостью."

#: ../../ref/middleware.txt:310
msgid ""
"If your site serves user-uploaded files, a malicious user could upload a "
"specially-crafted file that would be interpreted as HTML or JavaScript by "
"the browser when you expected it to be something harmless."
msgstr ""
"Если ваш сайт позволяет пользователям загружать файлы, взломщик может "
"загрузить специальный файл, который будет интерпретирован браузером как HTML "
"или Javascript."

#: ../../ref/middleware.txt:314
msgid ""
"To learn more about this header and how the browser treats it, you can read "
"about it on the `IE Security Blog`_."
msgstr "Подробности об этом заголовке вы можете найти в `IE Security Blog`_."

#: ../../ref/middleware.txt:317
msgid ""
"To prevent the browser from guessing the content type and force it to always "
"use the type provided in the ``Content-Type`` header, you can pass the ``X-"
"Content-Type-Options: nosniff`` header.  ``SecurityMiddleware`` will do this "
"for all responses if the :setting:`SECURE_CONTENT_TYPE_NOSNIFF` setting is "
"``True``."
msgstr ""
"Чтобы запретить браузеру угадывать тип файла и заставить всегда использовать "
"значение из заголовка ``Content-Type``, вы можете передать заголовок ``X-"
"Content-Type-Options: nosniff``.  ``SecurityMiddleware`` добавит его ко всем "
"ответам, если настройка :setting:`SECURE_CONTENT_TYPE_NOSNIFF` равна "
"``True``."

#: ../../ref/middleware.txt:323
msgid ""
"Note that in most deployment situations where Django isn't involved in "
"serving user-uploaded files, this setting won't help you. For example, if "
"your :setting:`MEDIA_URL` is served directly by your front-end Web server "
"(nginx, Apache, etc.) then you'd want to set this header there. On the other "
"hand, if you are using Django to do something like require authorization in "
"order to download files and you cannot set the header using your Web server, "
"this setting will be useful."
msgstr ""
"Обратите внимание, что в большинстве случаев, когда Django не раздает файлы "
"с сервера, эта опция вам не поможет. Например, если :setting:`MEDIA_URL` "
"раздается напрямую сервером (nginx, Apache, и прочие), тогда вам следует "
"добавить этот заголовок для него. Если же вы используете Django, чтобы, "
"например, проверить авторизацию перед возвращением файла, эта настройка вам "
"пригодится."

#: ../../ref/middleware.txt:336
msgid "``X-XSS-Protection: 1; mode=block``"
msgstr "``X-XSS-Protection: 1; mode=block``"

#: ../../ref/middleware.txt:338
msgid ""
"Some browsers have the ability to block content that appears to be an `XSS "
"attack`_. They work by looking for JavaScript content in the GET or POST "
"parameters of a page. If the JavaScript is replayed in the server's "
"response, the page is blocked from rendering and an error page is shown "
"instead."
msgstr ""
"Некоторые браузеры умеют блокировать содержимое, которые может "
"использоваться для `XSS атаки <http://en.wikipedia.org/wiki/Cross-"
"site_scripting>`_. Они ищут Javascript в GET или POST параметрах на "
"странице. Если Javascript возвращается сервером, страница блокируется и "
"показывается предупреждение."

#: ../../ref/middleware.txt:343
msgid ""
"The `X-XSS-Protection header`_ is used to control the operation of the XSS "
"filter."
msgstr ""
"`Заголовок X-XSS-Protection <http://blogs.msdn.com/b/ie/archive/2008/07/02/"
"ie8-security-part-iv-the-xss-filter.aspx>`_ позволяет управлять XSS фильтром."

#: ../../ref/middleware.txt:346
msgid ""
"To enable the XSS filter in the browser, and force it to always block "
"suspected XSS attacks, you can pass the ``X-XSS-Protection: 1; mode=block`` "
"header. ``SecurityMiddleware`` will do this for all responses if the :"
"setting:`SECURE_BROWSER_XSS_FILTER` setting is ``True``."
msgstr ""
"Чтобы включить XSS фильтр в браузере, и заставить его блокировать "
"потенциальные XSS атаки, вы можете передать заголовок ``X-XSS-Protection: 1; "
"mode=block``. ``SecurityMiddleware`` добавит его ко всем ответам, если "
"настройка :setting:`SECURE_BROWSER_XSS_FILTER` равна ``True``."

#: ../../ref/middleware.txt:352
msgid ""
"The browser XSS filter is a useful defense measure, but must not be relied "
"upon exclusively. It cannot detect all XSS attacks and not all browsers "
"support the header. Ensure you are still :ref:`validating and sanitizing "
"<cross-site-scripting>` all input to prevent XSS attacks."
msgstr ""
"Фильтр XSS полезен, но вы не должны полностью полагаться на него. Браузер "
"определяет не все XSS атаки и не все браузеры поддерживают этот фильтр. Вы "
"все еще должны :ref:`проверять <cross-site-scripting>` весь ввод "
"пользователя, чтобы избежать XSS атак."

#: ../../ref/middleware.txt:363
msgid "SSL Redirect"
msgstr "SSL редирект"

#: ../../ref/middleware.txt:365
msgid ""
"If your site offers both HTTP and HTTPS connections, most users will end up "
"with an unsecured connection by default. For best security, you should "
"redirect all HTTP connections to HTTPS."
msgstr ""
"Если ваш сайт доступен по HTTP и HTTPS, большинство пользователей будут "
"заходить по незащищенному подключению по умолчанию. Вам следует "
"перенаправлять их с HTTP на HTTPS."

#: ../../ref/middleware.txt:369
msgid ""
"If you set the :setting:`SECURE_SSL_REDIRECT` setting to True, "
"``SecurityMiddleware`` will permanently (HTTP 301) redirect all HTTP "
"connections to HTTPS."
msgstr ""
"Если установить ``True`` в :setting:`SECURE_SSL_REDIRECT`, "
"``SecurityMiddleware`` будет перманентно (HTTP 301) перенаправлять все HTTP "
"запросы на HTTPS."

#: ../../ref/middleware.txt:375
msgid ""
"For performance reasons, it's preferable to do these redirects outside of "
"Django, in a front-end load balancer or reverse-proxy server such as "
"`nginx`_. :setting:`SECURE_SSL_REDIRECT` is intended for the deployment "
"situations where this isn't an option."
msgstr ""
"Для повышения производительности лучше делать эти перенаправления не в "
"Django, а на балансере нагрузки или прокси, таком как `nginx`_. :setting:"
"`SECURE_SSL_REDIRECT` следует использовать для разработки, чтобы не "
"усложнять локальное окружение."

#: ../../ref/middleware.txt:380
msgid ""
"If the :setting:`SECURE_SSL_HOST` setting has a value, all redirects will be "
"sent to that host instead of the originally-requested host."
msgstr ""
"Если указать значение в настройке :setting:`SECURE_SSL_HOST`, все "
"перенаправления будут выполняться на указанный хост, а не хост из запроса."

#: ../../ref/middleware.txt:383
msgid ""
"If there are a few pages on your site that should be available over HTTP, "
"and not redirected to HTTPS, you can list regular expressions to match those "
"URLs in the :setting:`SECURE_REDIRECT_EXEMPT` setting."
msgstr ""
"Если на сайте есть страницы, которые должны быть доступны по HTTP без "
"перенаправления на HTTPS, вы можете указать в настройке :setting:"
"`SECURE_REDIRECT_EXEMPT` регулярные выражение, которым удовлетворяют "
"необходимые URL-ы."

#: ../../ref/middleware.txt:388
msgid ""
"If you are deployed behind a load-balancer or reverse-proxy server and "
"Django can't seem to tell when a request actually is already secure, you may "
"need to set the :setting:`SECURE_PROXY_SSL_HEADER` setting."
msgstr ""
"Если ваш сервер находится за балансировщиком нагрузки или прокси,  Django "
"может не определяет, что используется защищенное подключение. Возможно вам "
"следует указать настройку :setting:`SECURE_PROXY_SSL_HEADER`."

# 68000ca74f614849a26149ca86f2e6b1
#: ../../ref/middleware.txt:395
msgid "Session middleware"
msgstr "Промежуточный слой сессии"

# 045e1d81a5cc46edbd86a8d01d73a446
#: ../../ref/middleware.txt:402
msgid ""
"Enables session support. See the :doc:`session documentation </topics/http/"
"sessions>`."
msgstr ""
"Включает поддержку сессии. Смотрите :doc:`раздел о сессии </topics/http/"
"sessions>`."

# b1779e87aacc40be8f00ca11950b17c7
#: ../../ref/middleware.txt:406
msgid "Site middleware"
msgstr "Промежуточный слой определения текущего сайта"

# 19c8eafdeaa9425fa4d716e46e0a3219
#: ../../ref/middleware.txt:413
msgid ""
"Adds the ``site`` attribute representing the current site to every incoming "
"``HttpRequest`` object. See the :ref:`sites documentation <site-middleware>`."
msgstr ""
"Добавляет атрибут ``site``, который указывает текущий сайт для каждого "
"объекта ``HttpRequest``. Смотрите :ref:`раздел о поддержке нескольких сайтов "
"<site-middleware>`."

# c10995e4640b47b18072464cfa8c273f
#: ../../ref/middleware.txt:417
msgid "Authentication middleware"
msgstr "Промежуточный слой авторизации"

# 3ae3b9a115d846989edf2159f77fe7ad
#: ../../ref/middleware.txt:424
msgid ""
"Adds the ``user`` attribute, representing the currently-logged-in user, to "
"every incoming ``HttpRequest`` object. See :ref:`Authentication in Web "
"requests <auth-web-requests>`."
msgstr ""
"Добавляет атрибут ``user``, который указывает текущего авторизованного "
"пользователя, для каждого объекта ``HttpRequest``. Смотрите :ref:`раздел об "
"авторизации <auth-web-requests>`."

# 4a9b3c94fc894b60b677b55a81eff210
#: ../../ref/middleware.txt:430
msgid ""
"Middleware for utilizing Web server provided authentication. See :doc:`/"
"howto/auth-remote-user` for usage details."
msgstr ""
"Промежуточный слой для внешней авторизации. Смотрите :doc:`/howto/auth-"
"remote-user`."

# 4a9b3c94fc894b60b677b55a81eff210
#: ../../ref/middleware.txt:435
msgid ""
"Middleware for utilizing Web server provided authentication when enabled "
"only on the login page. See :ref:`persistent-remote-user-middleware-howto` "
"for usage details."
msgstr ""
"Промежуточный слой для внешней авторизации, которая используется только для "
"страниц входа для оптимизации работы приложения. Смотрите :ref:`persistent-"
"remote-user-middleware-howto`."

# 2a37ba2f026b4c07ab5015ac0f938cdd
#: ../../ref/middleware.txt:440
msgid "CSRF protection middleware"
msgstr "Промежуточный слой для CSRF защиты"

# 775bbe24646f443e8c06d91081af8c83
#: ../../ref/middleware.txt:448
msgid ""
"Adds protection against Cross Site Request Forgeries by adding hidden form "
"fields to POST forms and checking requests for the correct value. See the :"
"doc:`Cross Site Request Forgery protection documentation </ref/csrf>`."
msgstr ""
"Включает CSRF защиту, добавляя скрытое поле в POST формы и проверяя значение "
"при запросе. Смотрите раздел о :doc:`Cross Site Request Forgery защите </ref/"
"csrf>`."

# 1fcabda874a64ee698f7c492895944b3
#: ../../ref/middleware.txt:453
#, fuzzy
msgid "``X-Frame-Options`` middleware"
msgstr "Промежуточный слой X-Frame-Options"

# 2041fcc139d74d848b9721685ae61cc0
#: ../../ref/middleware.txt:460
msgid ""
"Simple :doc:`clickjacking protection via the X-Frame-Options header </ref/"
"clickjacking/>`."
msgstr ""
"Добавляет простую :doc:`защиту от \"clickjacking\", используя заголовок X-"
"Frame-Options </ref/clickjacking/>`."

# ed30f134bb63434ca6d32f4b6f5b131e
#: ../../ref/middleware.txt:465
msgid "Middleware ordering"
msgstr "Порядок промежуточных слоёв"

# 46b505e4ff2a46baa401d510c2e4fe3c
#: ../../ref/middleware.txt:467
msgid ""
"Here are some hints about the ordering of various Django middleware classes:"
msgstr "Несколько советов о порядке промежуточных слоёв Django:"

# 8308f5bf51ab421dbf61d0ec381c569d
#: ../../ref/middleware.txt:469
msgid ":class:`~django.middleware.security.SecurityMiddleware`"
msgstr ":class:`~django.middleware.security.SecurityMiddleware`"

#: ../../ref/middleware.txt:471
msgid ""
"It should go near the top of the list if you're going to turn on the SSL "
"redirect as that avoids running through a bunch of other unnecessary "
"middleware."
msgstr ""
"Должен следовать в начале списка промежуточных слоев, если вы используете "
"SSL перенаправление, чтобы избежать обработки небезопасного запроса другими "
"промежуточными слоями."

# efaadf5654544e3fa0e6ffec99248da5
#: ../../ref/middleware.txt:475
msgid ":class:`~django.middleware.cache.UpdateCacheMiddleware`"
msgstr ":class:`~django.middleware.cache.UpdateCacheMiddleware`"

# 04bd1bf6d1524278ad6b156adc4e3d4d
#: ../../ref/middleware.txt:477
msgid ""
"Before those that modify the ``Vary`` header (``SessionMiddleware``, "
"``GZipMiddleware``, ``LocaleMiddleware``)."
msgstr ""
"Добавлять перед промежуточными слоями, которые могут изменить заголовок "
"``Vary`` (``SessionMiddleware``, ``GZipMiddleware``, ``LocaleMiddleware``)."

# 5304ee114f6542a2a1384e88f3a232e8
#: ../../ref/middleware.txt:480
msgid ":class:`~django.middleware.gzip.GZipMiddleware`"
msgstr ":class:`~django.middleware.gzip.GZipMiddleware`"

# d55c8f46769f46f49e4f619965789839
#: ../../ref/middleware.txt:482
msgid "Before any middleware that may change or use the response body."
msgstr ""
"Добавлять перед промежуточными слоями, которые могут изменять или читать "
"тело ответа."

# 7de9b290a3ec480da9b12a340ffc8637
# 3b49a5e9bcd3495eb43c2aa8286ab401
#: ../../ref/middleware.txt:484 ../../ref/middleware.txt:493
msgid "After ``UpdateCacheMiddleware``: Modifies ``Vary`` header."
msgstr "После ``UpdateCacheMiddleware``: изменяет заголовок ``Vary``."

# a5adaf079e5645e389ce2894696621b7
#: ../../ref/middleware.txt:486
msgid ":class:`~django.middleware.http.ConditionalGetMiddleware`"
msgstr ":class:`~django.middleware.http.ConditionalGetMiddleware`"

# fc43ff562311489c94cacdf56f66f4f9
#: ../../ref/middleware.txt:488
#, fuzzy
msgid ""
"Before ``CommonMiddleware``: uses its ``ETag`` header when :setting:"
"`USE_ETAGS` = ``True``."
msgstr ""
"Перед ``CommonMiddleware``: использует установленный заголовок ``Etag`` при :"
"setting:`USE_ETAGS` = ``True``."

# 6b89908af61b4f798e7c7d6aa734682e
#: ../../ref/middleware.txt:491
msgid ":class:`~django.contrib.sessions.middleware.SessionMiddleware`"
msgstr ":class:`~django.contrib.sessions.middleware.SessionMiddleware`"

# ebbcf57d96cd4a0ea69df3264291e857
#: ../../ref/middleware.txt:495
msgid ":class:`~django.middleware.locale.LocaleMiddleware`"
msgstr ":class:`~django.middleware.locale.LocaleMiddleware`"

# 4df6a31efddd4180b4a896fb78e0b479
#: ../../ref/middleware.txt:497
msgid ""
"One of the topmost, after ``SessionMiddleware`` (uses session data) and "
"``UpdateCacheMiddleware`` (modifies ``Vary`` header)."
msgstr ""
"Следует одним из первых, после ``SessionMiddleware`` (использует сессию) и "
"``CacheMiddleware`` (изменяет заголовок ``Vary``)."

# a8d6e8e9e6bd4f9f8755a4e4855dc6b4
#: ../../ref/middleware.txt:500
msgid ":class:`~django.middleware.common.CommonMiddleware`"
msgstr ":class:`~django.middleware.common.CommonMiddleware`"

# c1dec47be4d34c2c9494f620602cd442
#: ../../ref/middleware.txt:502
msgid ""
"Before any middleware that may change the response (it calculates ``ETags``)."
msgstr ""
"Перед любым промежуточным слоем, который может изменять ответ (вычисляет "
"``ETags``)."

# f1f27fb3f1ca4ef0a8e87cd9c9e658fd
#: ../../ref/middleware.txt:504
msgid ""
"After ``GZipMiddleware`` so it won't calculate an ``ETag`` header on gzipped "
"contents."
msgstr ""
"После ``GZipMiddleware``, чтобы заголовок ``ETag`` не вычислялся для сжатого "
"ответа."

# 1096461aa91645118c2b318e4cf0407e
#: ../../ref/middleware.txt:507
msgid ""
"Close to the top: it redirects when :setting:`APPEND_SLASH` or :setting:"
"`PREPEND_WWW` are set to ``True``."
msgstr ""
"Ближе к верху: выполняет перенаправление при :setting:`APPEND_SLASH` или :"
"setting:`PREPEND_WWW` равном ``True``."

# 8308f5bf51ab421dbf61d0ec381c569d
#: ../../ref/middleware.txt:510
msgid ":class:`~django.middleware.csrf.CsrfViewMiddleware`"
msgstr ":class:`~django.middleware.csrf.CsrfViewMiddleware`"

# b8fdf67fdad049bd88ed83a83928561c
#: ../../ref/middleware.txt:512
msgid ""
"Before any view middleware that assumes that CSRF attacks have been dealt "
"with."
msgstr ""
"Перед любым промежуточным слоем, который предполагает, что CSRF защита уже "
"выполнена."

#: ../../ref/middleware.txt:515
msgid ""
"It must come after ``SessionMiddleware`` if you're using :setting:"
"`CSRF_USE_SESSIONS`."
msgstr ""

# abfb76fe47004edb8774661005b2f1de
#: ../../ref/middleware.txt:518
msgid ":class:`~django.contrib.auth.middleware.AuthenticationMiddleware`"
msgstr ":class:`~django.contrib.auth.middleware.AuthenticationMiddleware`"

# d04061fd0da4429cba566ce9c5400563
#: ../../ref/middleware.txt:520
msgid "After ``SessionMiddleware``: uses session storage."
msgstr "После ``SessionMiddleware``: использует сессию."

# 655408277d7f4eb6bb1a3399940ebdae
#: ../../ref/middleware.txt:522
msgid ":class:`~django.contrib.messages.middleware.MessageMiddleware`"
msgstr ":class:`~django.contrib.messages.middleware.MessageMiddleware`"

# 781e81eb2b67405888aad00dd79069ab
#: ../../ref/middleware.txt:524
msgid "After ``SessionMiddleware``: can use session-based storage."
msgstr ""
"После ``SessionMiddleware``: может использовать сессию для хранения данных."

# 1806336234f447fb995c5cc636db0e9c
#: ../../ref/middleware.txt:526
msgid ":class:`~django.middleware.cache.FetchFromCacheMiddleware`"
msgstr ":class:`~django.middleware.cache.FetchFromCacheMiddleware`"

# 6676ff9883d443698ac9f058a07b6e3d
#: ../../ref/middleware.txt:528
msgid ""
"After any middleware that modifies the ``Vary`` header: that header is used "
"to pick a value for the cache hash-key."
msgstr ""
"После любого промежуточного слоя, который может изменить заголовок ``Vary``: "
"его значение используется для генерации ключа в кэше."

# a7df25520def407f87eabe9d0a03c91a
#: ../../ref/middleware.txt:531
msgid ""
":class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware`"
msgstr ""
":class:`~django.contrib.flatpages.middleware.FlatpageFallbackMiddleware`"

# 2c1e8c3d358f4f67b6b610ccee8b7c89
# 6d39be45fd364cbdb34cc7209289af81
#: ../../ref/middleware.txt:533 ../../ref/middleware.txt:537
msgid "Should be near the bottom as it's a last-resort type of middleware."
msgstr "Должен быть в низу."

# f74c826b97c64151acecfb739e1d1b1c
#: ../../ref/middleware.txt:535
msgid ""
":class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware`"
msgstr ""
":class:`~django.contrib.redirects.middleware.RedirectFallbackMiddleware`"

# 65fae428adc84d54b21ba9a94b5794a6
#~ msgid "Also sets the ``Date`` and ``Content-Length`` response-headers."
#~ msgstr ""
#~ "Также устанавливает для ответа заголовки ``Date`` и ``Content-Length``."

# 0a488122a34c43e0b1e6227ba87f6f52
#~ msgid ""
#~ "Allows a user's sessions to be invalidated when their password changes. "
#~ "See :ref:`session-invalidation-on-password-change` for details. This "
#~ "middleware must appear after :class:`django.contrib.auth.middleware."
#~ "AuthenticationMiddleware` in :setting:`MIDDLEWARE_CLASSES`."
#~ msgstr ""
#~ "Позволяет удалить сессию пользователя при смене пароля. Смотрите :ref:"
#~ "`session-invalidation-on-password-change`. Добавлять после :class:`django."
#~ "contrib.auth.middleware.AuthenticationMiddleware` в :setting:"
#~ "`MIDDLEWARE_CLASSES`."

# 646dae2ba2144e2db03d7cd371e1ddcd
#~ msgid ""
#~ "The request is from Internet Explorer and the ``Content-Type`` header "
#~ "contains ``javascript`` or starts with anything other than ``text/``. We "
#~ "do this to avoid a bug in early versions of IE that caused decompression "
#~ "not to be performed on certain content types."
#~ msgstr ""
#~ "Запрос от Internet Explorer и заголовок ``Content-Type`` содержит "
#~ "``javascript``, или начинается не с ``text/``. Это связано с багом в IE, "
#~ "который приводит к неправильной обработке сжатого ответа для некоторых "
#~ "типов ответа."

# 92c679aabd294488a1c2dc9784dd187e
#~ msgid "Transaction middleware"
#~ msgstr "Промежуточный слой транзакций"

# aba7dc0146984850b6c3f0ed790c5e06
#~ msgid ""
#~ "``TransactionMiddleware`` is deprecated. The documentation of "
#~ "transactions contains :ref:`upgrade instructions <transactions-upgrading-"
#~ "from-1.5>`."
#~ msgstr ""
#~ "``TransactionMiddleware`` устарел. В разделе о транзакциях можно найти :"
#~ "ref:`инструкцию по обновлению <transactions-upgrading-from-1.5>`."

# 7bb02675bbc44b8a8bf74fa5bcd8c4cf
#~ msgid ""
#~ "Binds commit and rollback of the default database to the request/response "
#~ "phase. If a view function runs successfully, a commit is done. If it "
#~ "fails with an exception, a rollback is done."
#~ msgstr ""
#~ "Оборачивает каждый запрос в транзакцию базы данных. Если запрос обработан "
#~ "без исключений, изменения будут закоммичены в базу данных. Если произошла "
#~ "ошибка, все изменения будут отменены."

# b8053becc1ef40cb8446aa7d85d04343
#~ msgid ""
#~ "The order of this middleware in the stack is important: middleware "
#~ "modules running outside of it run with commit-on-save - the default "
#~ "Django behavior. Middleware modules running inside it (coming later in "
#~ "the stack) will be under the same transaction control as the view "
#~ "functions."
#~ msgstr ""
#~ "Очень важен порядок выполнения этого промежуточного слоя: промежуточные "
#~ "слои, которые идут перед этим, будут использовать стандартное поведение "
#~ "Django \"commit-on-save\". Промежуточный слои после этого будут включены "
#~ "в транзакцию, как и представления."

# 0f644bd17c864792b20fea76687abd7c
#~ msgid ""
#~ "See the :doc:`transaction management documentation </topics/db/"
#~ "transactions>`."
#~ msgstr "Смотрите :doc:`раздел о транзакциях </topics/db/transactions>`."
