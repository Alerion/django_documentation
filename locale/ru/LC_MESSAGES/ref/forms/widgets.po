# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2013.
# Dmitriy Kostochko <alerion.um@gmail.com>, 2014, 2015, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2016-03-21 12:12+0200\n"
"Last-Translator: Dmitriy Kostochko <alerion.um@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# 004bdd45b5b448a4be3214b776061832
#: ../../ref/forms/widgets.txt:3
msgid "Widgets"
msgstr "Виджеты"

# e1e69f50d767429baeb124f8441ec3b1
#: ../../ref/forms/widgets.txt:10
msgid ""
"A widget is Django's representation of an HTML input element. The widget "
"handles the rendering of the HTML, and the extraction of data from a GET/"
"POST dictionary that corresponds to the widget."
msgstr ""
"Виджет -- это представление поля в виде HTML кода. Виджеты обеспечивают "
"генерацию HTML и извлечение соответствующих данных из GET/POST запросов."

#: ../../ref/forms/widgets.txt:14
msgid ""
"The HTML generated by the built-in widgets uses HTML5 syntax, targeting ``<!"
"DOCTYPE html>``. For example, it uses boolean attributes such as ``checked`` "
"rather than the XHTML style of ``checked='checked'``."
msgstr ""

# 58e5b4db4a314e0c8f472cc5c7a73ae8
#: ../../ref/forms/widgets.txt:20
msgid ""
"Widgets should not be confused with the :doc:`form fields </ref/forms/"
"fields>`. Form fields deal with the logic of input validation and are used "
"directly in templates. Widgets deal with rendering of HTML form input "
"elements on the web page and extraction of raw submitted data. However, "
"widgets do need to be :ref:`assigned <widget-to-field>` to form fields."
msgstr ""
"Не следует путать виджеты с :doc:`полями формы </ref/forms/fields>`. Поля "
"формы обеспечивают логику проверки вводимой информации и используются в "
"шаблонах. Виджеты же отвечают за рендеринг форм на веб-странице и обработку "
"переданных данных. Тем не менее, виджеты следует :ref:`назначать <widget-to-"
"field>` на поля формы."

# 9108148c303e4e849d77e41c8d45ab4b
#: ../../ref/forms/widgets.txt:29
msgid "Specifying widgets"
msgstr "Назначение виджета"

# cf01ba93ae5b42e5851691a3c777cd4c
#: ../../ref/forms/widgets.txt:31
msgid ""
"Whenever you specify a field on a form, Django will use a default widget "
"that is appropriate to the type of data that is to be displayed. To find "
"which widget is used on which field, see the documentation about :ref:`built-"
"in-fields`."
msgstr ""
"При добавлении поля на форму, Django использует стандартный виджет, наиболее "
"подходящий к отображаемому типу данных. Для того, чтобы узнать какой виджет "
"использует интересующий вас тип поля обратитесь к :ref:`built-in fields`."

# 4939fb105a7849249c61feadc63f811e
#: ../../ref/forms/widgets.txt:36
#, fuzzy
msgid ""
"However, if you want to use a different widget for a field, you can use the :"
"attr:`~Field.widget` argument on the field definition. For example::"
msgstr ""
"Тем не менее, если потребуется указать другой виджет для поля, просто "
"используйте аргумент :attr:`~Field.widget` при определении поля. Например::"

# d0c9701c45dd4d598f002d9fad03a357
#: ../../ref/forms/widgets.txt:46
msgid ""
"This would specify a form with a comment that uses a larger :class:"
"`Textarea` widget, rather than the default :class:`TextInput` widget."
msgstr ""
"Этот код создают форму, у которой полю комментария назначен виджет class:"
"`Textarea` вместо стандартного :class:`TextInput` widget."

# af57db3fc21c4e749c07f665f5a2dcc3
#: ../../ref/forms/widgets.txt:50
msgid "Setting arguments for widgets"
msgstr "Аргументы виджетов"

# 57085f2ee6f14599880f5d466019ac2c
#: ../../ref/forms/widgets.txt:52
msgid ""
"Many widgets have optional extra arguments; they can be set when defining "
"the widget on the field. In the following example, the :attr:`~django.forms."
"SelectDateWidget.years` attribute is set for a :class:`~django.forms."
"SelectDateWidget`::"
msgstr ""
"Большинство виджетов принимают дополнительные аргументы. Они могут быть "
"назначены при определении виджета для поля. В следующем примере атрибут :"
"attr:`~django.forms.SelectDateWidget.years` передаётся в :class:`~django."
"forms.SelectDateWidget`::"

# 3fd6260d9e594ad5904b3698188b444f
#: ../../ref/forms/widgets.txt:74
msgid ""
"See the :ref:`built-in widgets` for more information about which widgets are "
"available and which arguments they accept."
msgstr ""
"Обратитесь к :ref:`built-in widgets` для получения подробной информации о "
"доступных виджетах и аргументах, которые они принимают."

# dbe68f8fde704f40b0aa69d6a14231b4
#: ../../ref/forms/widgets.txt:78
#, fuzzy
msgid "Widgets inheriting from the ``Select`` widget"
msgstr "Виджеты, унаследованные от виджета Select"

# d00d5786b964497694cc4d2b337b188a
#: ../../ref/forms/widgets.txt:80
msgid ""
"Widgets inheriting from the :class:`Select` widget deal with choices. They "
"present the user with a list of options to choose from. The different "
"widgets present this choice differently; the :class:`Select` widget itself "
"uses a ``<select>`` HTML list representation, while :class:`RadioSelect` "
"uses radio buttons."
msgstr ""
"Виджеты, унаследованные от виджета :class:`Select`, предназначены для работы "
"с вариантами. Они предоставляют список вариантов, из которых надо сделать "
"выбор. Разные виджеты позволяют сделать выбор по-разному. Базовый виджет :"
"class:`Select` использует HTML тег ``<select>``, а унаследованный виджет :"
"class:`RadioSelect` использует радио кнопки."

# 90d4671b5d68438cacb8d68601f4a6ba
#: ../../ref/forms/widgets.txt:86
msgid ""
":class:`Select` widgets are used by default on :class:`ChoiceField` fields. "
"The choices displayed on the widget are inherited from the :class:"
"`ChoiceField` and changing :attr:`ChoiceField.choices` will update :attr:"
"`Select.choices`. For example::"
msgstr ""
"Виджеты типа :class:`Select` по умолчанию используют поля :class:"
"`ChoiceField`. Варианты, отображаемые виджетом, наследуются от :class:"
"`ChoiceField` и изменение :attr:`ChoiceField.choices` повлияет на :attr:"
"`Select.choices`. Например::"

# dbd4c8a0a5534e458a8eb8a621d514e4
#: ../../ref/forms/widgets.txt:103
msgid ""
"Widgets which offer a :attr:`~Select.choices` attribute can however be used "
"with fields which are not based on choice -- such as a :class:`CharField` -- "
"but it is recommended to use a :class:`ChoiceField`-based field when the "
"choices are inherent to the model and not just the representational widget."
msgstr ""
"Виджеты, поддерживающие атрибут :attr:`~Select.choices` могут, тем не менее, "
"использоваться совместно с полями, которые не основаны на выборе, -- такими "
"как :class:`CharField` -- но рекомендуется использовать поля типа :class:"
"`ChoiceField` в случаях, когда варианты берутся из модели."

# d206a15205de4014ae979094587e8e22
#: ../../ref/forms/widgets.txt:109
msgid "Customizing widget instances"
msgstr "Настройка экземпляров виджета"

# e70ad06ae5984390b80ecceca1f8ad8d
#: ../../ref/forms/widgets.txt:111
msgid ""
"When Django renders a widget as HTML, it only renders very minimal markup - "
"Django doesn't add class names, or any other widget-specific attributes. "
"This means, for example, that all :class:`TextInput` widgets will appear the "
"same on your Web pages."
msgstr ""
"При отображении виджета на странице сайта, Django генерирует минимальный "
"HTML код, который не включает в себя указание классов или других "
"специфических атрибутов виджета. Это означает, что все виджеты типа :class:"
"`TextInput` будут отображаться на странице однообразно."

# 213049e2bbd54de7b67df4114b499821
#: ../../ref/forms/widgets.txt:116
msgid ""
"There are two ways to customize widgets: :ref:`per widget instance <styling-"
"widget-instances>` and :ref:`per widget class <styling-widget-classes>`."
msgstr ""
"Существует два способа настройки виджета: :ref:`на уровне экземпляра виджет "
"<styling-widget-instances>` и :ref:`на уровне класса виджета <styling-widget-"
"classes>`."

# d206a15205de4014ae979094587e8e22
#: ../../ref/forms/widgets.txt:122
msgid "Styling widget instances"
msgstr "Настройка экземпляров виджета"

# 6976c9bb6d7044c98441c530be9e2f3a
#: ../../ref/forms/widgets.txt:124
msgid ""
"If you want to make one widget instance look different from another, you "
"will need to specify additional attributes at the time when the widget "
"object is instantiated and assigned to a form field (and perhaps add some "
"rules to your CSS files)."
msgstr ""
"Если требуется визуально выделить один виджет от других, потребуется во "
"время его создания указать для него дополнительные атрибуты и назначить его "
"на поле формы (и возможно, добавить несколько правил в ваши CSS файлы)."

# 44265187f3d0471aa8fb1f175ac47115
#: ../../ref/forms/widgets.txt:129
#, fuzzy
msgid "For example, take the following form::"
msgstr "Например, рассмотрим следующую простую форму::"

# db28b8c02b0646f18ac14e812fb99134
#: ../../ref/forms/widgets.txt:138
msgid ""
"This form will include three default :class:`TextInput` widgets, with "
"default rendering -- no CSS class, no extra attributes. This means that the "
"input boxes provided for each widget will be rendered exactly the same::"
msgstr ""
"Эта форма включает в себя три обычных виджета :class:`TextInput`, которым не "
"назначены ни CSS класс, ни дополнительные атрибуты. Это означает, что "
"визуально они будут выглядеть одинаково::"

# 188e7e6fc25441cab4e344a8fd8881c5
#: ../../ref/forms/widgets.txt:148
msgid ""
"On a real Web page, you probably don't want every widget to look the same. "
"You might want a larger input element for the comment, and you might want "
"the 'name' widget to have some special CSS class. It is also possible to "
"specify the 'type' attribute to take advantage of the new HTML5 input "
"types.  To do this, you use the :attr:`Widget.attrs` argument when creating "
"the widget::"
msgstr ""
"На реальной странице сайта, возможно, вам понадобится разнообразить их "
"отображение. Вам может потребоваться сделать поле для ввода комментария "
"побольше или назначить имя виджету, чтобы он начал реагировать на особый CSS "
"класс. Также возможно указать атрибут 'type' для поддержки типов HTML5. Для "
"этого надо использовать аргумент :attr:`Widget.attrs` при создании виджета::"

#: ../../ref/forms/widgets.txt:159
msgid "You can also modify a widget in the form definition::"
msgstr ""

#: ../../ref/forms/widgets.txt:169
msgid ""
"Or if the field isn't declared directly on the form (such as model form "
"fields), you can use the :attr:`Form.fields` attribute::"
msgstr ""

# d31696a0023d4686b17c57ccbefad0fd
#: ../../ref/forms/widgets.txt:178
msgid "Django will then include the extra attributes in the rendered output:"
msgstr "Django добавит дополнительные атрибуты в генерируемый HTML код:"

# 1b0b569dfed34b1d99788ed5d1d097b9
#: ../../ref/forms/widgets.txt:186
msgid ""
"You can also set the HTML ``id`` using :attr:`~Widget.attrs`. See :attr:"
"`BoundField.id_for_label` for an example."
msgstr ""
"Вы также можете указать HTML ``id`` используя :attr:`~Widget.attrs`. "
"Смотрите :attr:`BoundField.id_for_label`."

# 9108148c303e4e849d77e41c8d45ab4b
#: ../../ref/forms/widgets.txt:192
msgid "Styling widget classes"
msgstr "Настройка классов виджета"

# c8fbe8e840624678b5c68250f79343de
#: ../../ref/forms/widgets.txt:194
msgid ""
"With widgets, it is possible to add assets (``css`` and ``javascript``) and "
"more deeply customize their appearance and behavior."
msgstr ""
"Для виджетов можно добавлять медиа файлы (``css`` и ``javascript``) для "
"более глубокой настройки их внешнего вида и поведения."

# cf02b6f9721b486d95b14dfce86e968e
#: ../../ref/forms/widgets.txt:197
msgid ""
"In a nutshell, you will need to subclass the widget and either :ref:`define "
"a \"Media\" inner class  <assets-as-a-static-definition>` or :ref:`create a "
"\"media\" property <dynamic-property>`."
msgstr ""
"Вкратце, вам потребуется унаследовать виджет и либо :ref:`определить класс "
"\"Media\" <assets-as-a-static-definition>`, либо :ref:`создать свойство "
"\"media\" <dynamic-property>`, возвращающее экземпляр этого класса."

# 10e064619ad04aec904afbf53b60568f
#: ../../ref/forms/widgets.txt:201
msgid ""
"These methods involve somewhat advanced Python programming and are described "
"in detail in the :doc:`Form Assets </topics/forms/media>` topic guide."
msgstr ""
"Эти методы требуют некоторого объёма продвинутого кода и подробно описаны в "
"руководстве по :doc:`ресурсам форм </topics/forms/media>`."

# fb54daba0e9744e8b55e623d468fcae7
#: ../../ref/forms/widgets.txt:207
#, fuzzy
msgid "Base widget classes"
msgstr "Основные классы виджетов"

# e09df8d899844becbf37ec691f48cccb
#: ../../ref/forms/widgets.txt:209
msgid ""
"Base widget classes :class:`Widget` and :class:`MultiWidget` are subclassed "
"by all the :ref:`built-in widgets <built-in widgets>` and may serve as a "
"foundation for custom widgets."
msgstr ""
"Основные классы виджетов :class:`Widget` и :class:`MultiWidget` унаследованы "
"всеми :ref:`встроенными виджетами <built-in widgets>` и могут являться "
"основой для ваших собственных виджетов."

# 004bdd45b5b448a4be3214b776061832
#: ../../ref/forms/widgets.txt:214
#, fuzzy
msgid "``Widget``"
msgstr "Виджеты"

# ea89dfff7eca47d5af06102d1817f275
#: ../../ref/forms/widgets.txt:218
msgid ""
"This abstract class cannot be rendered, but provides the basic attribute :"
"attr:`~Widget.attrs`.  You may also implement or override the :meth:`~Widget."
"render()` method on custom widgets."
msgstr ""
"Абстрактный класс не может быть использован для отображения поля, но он "
"предоставляет основной атрибут :attr:`~Widget.attrs`. Вы также можете "
"реализовать или переопределить метод :meth:`~Widget.render()` в своём "
"виджете."

# b22b57beefe34d7f930fe8b20ed1f3c8
#: ../../ref/forms/widgets.txt:224
msgid ""
"A dictionary containing HTML attributes to be set on the rendered widget."
msgstr ""
"Словарь, которые содержит HTML атрибуты, которые будут назначены "
"сгенерированному виджету."

#: ../../ref/forms/widgets.txt:234
msgid ""
"If you assign a value of ``True`` or ``False`` to an attribute, it will be "
"rendered as an HTML5 boolean attribute::"
msgstr ""
"Если вы укажите ``True`` или ``False`` атрибуту, он будет отрендерен как "
"HTML5 булев атрибут::"

#: ../../ref/forms/widgets.txt:247
msgid ""
"An attribute that defaults to ``True``. If set to ``False``, the "
"microseconds part of :class:`~datetime.datetime` and :class:`~datetime.time` "
"values will be set to ``0``."
msgstr ""
"Атрибут по умолчанию равен ``True``. При ``False`` микросекунды объекта :"
"class:`~datetime.datetime` и :class:`~datetime.time` будут сброшены в ``0``."

# 93cfe69b5dc443199d646dabe1bdc213
#: ../../ref/forms/widgets.txt:253
#, fuzzy
msgid ""
"Cleans and returns a value for use in the widget template. ``value`` isn't "
"guaranteed to be valid input, therefore subclass implementations should "
"program defensively."
msgstr ""
"Никто не гарантирует, что полученное значение будет правильным, поэтому "
"реализация метода в дочерних классах должна обеспечивать соответствующую "
"проверку."

#: ../../ref/forms/widgets.txt:259
msgid ""
"Returns a dictionary of values to use when rendering the widget template. By "
"default, the dictionary contains a single key, ``'widget'``, which is a "
"dictionary representation of the widget containing the following keys:"
msgstr ""

#: ../../ref/forms/widgets.txt:264
msgid "``'name'``: The name of the field from the ``name`` argument."
msgstr ""

#: ../../ref/forms/widgets.txt:265
msgid ""
"``'is_hidden'``: A boolean indicating whether or not this widget is hidden."
msgstr ""

#: ../../ref/forms/widgets.txt:267
msgid ""
"``'required'``: A boolean indicating whether or not the field for this "
"widget is required."
msgstr ""

#: ../../ref/forms/widgets.txt:269
msgid "``'value'``: The value as returned by :meth:`format_value`."
msgstr ""

#: ../../ref/forms/widgets.txt:270
msgid ""
"``'attrs'``: HTML attributes to be set on the rendered widget. The "
"combination of the :attr:`attrs` attribute and the ``attrs`` argument."
msgstr ""

#: ../../ref/forms/widgets.txt:272
msgid "``'template_name'``: The value of ``self.template_name``."
msgstr ""

#: ../../ref/forms/widgets.txt:274
msgid ""
"``Widget`` subclasses can provide custom context values by overriding this "
"method."
msgstr ""

#: ../../ref/forms/widgets.txt:279
msgid ""
"Returns the HTML ID attribute of this widget for use by a ``<label>``, given "
"the ID of the field. Returns ``None`` if an ID isn't available."
msgstr ""
"Возвращает HTML ID атрибут виджета, который можно использовать для "
"``<label>``, принимая ID поля. Возвращает ``None``, если ID не доступен."

#: ../../ref/forms/widgets.txt:282
msgid ""
"This hook is necessary because some widgets have multiple HTML elements and, "
"thus, multiple IDs. In that case, this method should return an ID value that "
"corresponds to the first ID in the widget's tags."
msgstr ""
"Этот метод необходим т.к. некоторые виджеты состоят из нескольких HTML "
"элеентов с разными ID. В этом случает метод должен вернуть ID первого тега "
"виджета."

#: ../../ref/forms/widgets.txt:289
msgid ""
"Renders a widget to HTML using the given renderer. If ``renderer`` is "
"``None``, the renderer from the :setting:`FORM_RENDERER` setting is used."
msgstr ""

# 4ca1692bdf5b41eab10d13a6e6178a41
#: ../../ref/forms/widgets.txt:295
msgid ""
"Given a dictionary of data and this widget's name, returns the value of this "
"widget. ``files`` may contain data coming from :attr:`request.FILES <django."
"http.HttpRequest.FILES>`. Returns ``None`` if a value wasn't provided. Note "
"also that ``value_from_datadict`` may be called more than once during "
"handling of form data, so if you customize it and add expensive processing, "
"you should implement some caching mechanism yourself."
msgstr ""
"Принимает словарь с данными и имя виджета. ``files`` может содержать данные "
"из :attr:`request.FILES <django.http.HttpRequest.FILES>`. Возвращает "
"``None``, если значение не найдено. Обратите внимание, "
"``value_from_datadict`` может вызываться несколько раз при обработке данных "
"в форме. Если вы добавите медленные операции в этот метод, позаботьтесь о "
"кешировании результата."

# 1132a8ad7ee743eca8075b75a039f389
#: ../../ref/forms/widgets.txt:305
#, fuzzy
msgid ""
"Given ``data`` and ``files`` dictionaries and this widget's name, returns "
"whether or not there's data or files for the widget."
msgstr ""
"Принимает словарь данных и имя виджета, возвращает значения для этого "
"виджета. Возвращает ``None``, если значение не предоставлено."

#: ../../ref/forms/widgets.txt:308
msgid ""
"The method's result affects whether or not a field in a model form :ref:"
"`falls back to its default <topics-modelform-save>`."
msgstr ""

#: ../../ref/forms/widgets.txt:311
msgid ""
"Special cases are :class:`~django.forms.CheckboxInput`, :class:`~django."
"forms.CheckboxSelectMultiple`, and :class:`~django.forms.SelectMultiple`, "
"which always return ``False`` because an unchecked checkbox and unselected "
"``<select multiple>`` don't appear in the data of an HTML form submission, "
"so it's unknown whether or not the user submitted a value."
msgstr ""

#: ../../ref/forms/widgets.txt:320
msgid ""
"Given a form field's ``initial`` value, returns whether or not the widget "
"can be rendered with the ``required`` HTML attribute. Forms use this method "
"along with :attr:`Field.required <django.forms.Field.required>` and :attr:"
"`Form.use_required_attribute <django.forms.Form.use_required_attribute>` to "
"determine whether or not to display the ``required`` attribute for each "
"field."
msgstr ""

#: ../../ref/forms/widgets.txt:327
msgid ""
"By default, returns ``False`` for hidden widgets and ``True`` otherwise. "
"Special cases are :class:`~django.forms.ClearableFileInput`, which returns "
"``False`` when ``initial`` is set, and :class:`~django.forms."
"CheckboxSelectMultiple`, which always returns ``False`` because browser "
"validation would require all checkboxes to be checked instead of at least "
"one."
msgstr ""

#: ../../ref/forms/widgets.txt:334
msgid ""
"Override this method in custom widgets that aren't compatible with browser "
"validation. For example, a WSYSIWG text editor widget backed by a hidden "
"``textarea`` element may want to always return ``False`` to avoid browser "
"validation on the hidden field."
msgstr ""

# faba93f974134bc982e86cb93babb1b1
#: ../../ref/forms/widgets.txt:340
#, fuzzy
msgid "``MultiWidget``"
msgstr "``SelectDateWidget``"

# 53d47228ef524f89b00792c8b27a0051
#: ../../ref/forms/widgets.txt:344
msgid ""
"A widget that is composed of multiple widgets. :class:`~django.forms."
"MultiWidget` works hand in hand with the :class:`~django.forms."
"MultiValueField`."
msgstr ""
"Виджет, который состоит из множества виджетов. Класс :class:`~django.forms."
"MultiWidget` предназначен для поля :class:`~django.forms.MultiValueField`."

# 4d9b42931fca4bd8972ee27bfa3777fd
#: ../../ref/forms/widgets.txt:348
msgid ":class:`MultiWidget` has one required argument:"
msgstr "Класс :class:`MultiWidget` имеет один обязательный аргумент:"

# db24044ebd264774b2ed50137e41ecab
#: ../../ref/forms/widgets.txt:352
msgid "An iterable containing the widgets needed."
msgstr "Итератор, содержащий необходимые виджеты."

# 7919291926834e2ca6118afe7d3fec42
#: ../../ref/forms/widgets.txt:354
msgid "And one required method:"
msgstr "И один обязательный метод:"

# 4928fc4857764f5db55bf0e94ce4fa81
#: ../../ref/forms/widgets.txt:358
msgid ""
"This method takes a single \"compressed\" value from the field and returns a "
"list of \"decompressed\" values. The input value can be assumed valid, but "
"not necessarily non-empty."
msgstr ""
"Этот метод принимает единственное \"сжато\" значение от поля и возвращает "
"список \"распакованных\" значений. Введённое значение может считаться "
"верным, но не обязательно не пустым."

# 0d290e30053a4569be1dbcd30d6e36a8
#: ../../ref/forms/widgets.txt:362
msgid ""
"This method **must be implemented** by the subclass, and since the value may "
"be empty, the implementation must be defensive."
msgstr ""
"Этот метод **должен быть реализован** в дочернем классе и, так как значение "
"может быть пустым, реализация должна проверять этот момент."

# d64499c96d6847d483bf539386918101
#: ../../ref/forms/widgets.txt:365
msgid ""
"The rationale behind \"decompression\" is that it is necessary to \"split\" "
"the combined value of the form field into the values for each widget."
msgstr ""
"Наличие \"распаковки\" объясняется необходимостью \"разделить\" объединённое "
"значение поля формы на значения для каждого виджета."

# d4a2fb4854a141b6aef8b70e667905cc
#: ../../ref/forms/widgets.txt:368
msgid ""
"An example of this is how :class:`SplitDateTimeWidget` turns a :class:"
"`~datetime.datetime` value into a list with date and time split into two "
"separate values::"
msgstr ""
"Пример того как :class:`SplitDateTimeWidget` преобразовывает значение :class:"
"`~datetime.datetime` в список с датой и временем::"

# 62404b497491406baec15cad86e4db35
#: ../../ref/forms/widgets.txt:385
msgid ""
"Note that :class:`~django.forms.MultiValueField` has a complementary method :"
"meth:`~django.forms.MultiValueField.compress` with the opposite "
"responsibility - to combine cleaned values of all member fields into one."
msgstr ""
"Следует отметить, что :class:`~django.forms.MultiValueField` обладает "
"дополнительным методом :meth:`~django.forms.MultiValueField.compress` с "
"обратной функциональностью -- объединять проверенные значения всех элементов "
"поля в единое значение."

#: ../../ref/forms/widgets.txt:390
msgid "It provides some custom context:"
msgstr ""

#: ../../ref/forms/widgets.txt:394
msgid ""
"In addition to the ``'widget'`` key described in :meth:`Widget.get_context`, "
"``MultiValueWidget`` adds a ``widget['subwidgets']`` key."
msgstr ""

#: ../../ref/forms/widgets.txt:398
msgid "These can be looped over in the widget template:"
msgstr ""

# b5880c8f5982400ea55e26299a3d0f87
#: ../../ref/forms/widgets.txt:406
msgid ""
"Here's an example widget which subclasses :class:`MultiWidget` to display a "
"date with the day, month, and year in different select boxes. This widget is "
"intended to be used with a :class:`~django.forms.DateField` rather than a :"
"class:`~django.forms.MultiValueField`, thus we have implemented :meth:"
"`~Widget.value_from_datadict`::"
msgstr ""
"Ниже приведён виджет унаследован от :class:`MultiWidget` и подходит для "
"отображения даты, разделяя день, месяц и год по различным элементам. Этот "
"виджет предназначен для использования совместно с :class:`~django.forms."
"DateField` вместо :class:`~django.forms.MultiValueField`, следовательно мы "
"должны реализовать метод :meth:`~Widget.value_from_datadict`::"

# cd6bb9fa9ac2448da53c1ecb03e2d247
#: ../../ref/forms/widgets.txt:440
#, fuzzy
msgid ""
"The constructor creates several :class:`Select` widgets in a list. The "
"``super()`` method uses this list to setup the widget."
msgstr ""
"Конструктор создаёт кортеж из нескольких виджетов :class:`Select`. Класс, от "
"которого был унаследован виджет, использует этот кортеж для настройки "
"виджета."

# ffdcbb0a37dc4f29abac08cee0806f20
#: ../../ref/forms/widgets.txt:443
#, fuzzy
msgid ""
"The required method :meth:`~MultiWidget.decompress` breaks up a ``datetime."
"date`` value into the day, month, and year values corresponding to each "
"widget. If an invalid date was selected, such as the non-existent 30th "
"February, the :class:`~django.forms.DateField` passes this method a string "
"instead, so that needs parsing. The final ``return`` handles when ``value`` "
"is ``None``, meaning we don't have any defaults for our subwidgets."
msgstr ""
"Обязательный метод :meth:`~MultiWidget.decompress` разбивает значение "
"``datetime.date`` на значение дня, месяца и года для каждого виджета. "
"Следует отметить, что метод обрабатывает случай, когда ``value`` равно "
"``None``."

# 271cd7c9ec43424f885cdd26f0507f7c
#: ../../ref/forms/widgets.txt:451
#, fuzzy
msgid ""
"The default implementation of :meth:`~Widget.value_from_datadict` returns a "
"list of values corresponding to each ``Widget``. This is appropriate when "
"using a ``MultiWidget`` with a :class:`~django.forms.MultiValueField`. But "
"since we want to use this widget with a :class:`~django.forms.DateField`, "
"which takes a single value, we have overridden this method. The "
"implementation here combines the data from the subwidgets into a string in "
"the format that :class:`~django.forms.DateField` expects."
msgstr ""
"Стандартная реализация метода :meth:`~Widget.value_from_datadict` возвращает "
"список значений для каждого ``Widget``. Это полезно при использовании "
"``MultiWidget`` совместно с :class:`~django.forms.MultiValueField`, но так "
"как мы желаем использовать этот виджет совместно с :class:`~django.forms."
"DateField`, который принимает единственное значение, мы переопределили этот "
"метод для соединения данных всех подчинённых виджетов в ``datetime.date``. "
"Метод получает данные из словаря ``POST``, создаёт и проверяет дату. Если "
"она проходит проверку, мы возвращаем строку, в противном случае возвращаем "
"пустую строку, что заставляет ``form.is_valid`` вернуть ``False``."

# a5c76cfa56fb48a599dd57b6094c9193
#: ../../ref/forms/widgets.txt:462
msgid "Built-in widgets"
msgstr "Встроенные виджеты"

# 1a61612c66ea4cecbfca2fead8c005a4
#: ../../ref/forms/widgets.txt:464
msgid ""
"Django provides a representation of all the basic HTML widgets, plus some "
"commonly used groups of widgets in the ``django.forms.widgets`` module, "
"including :ref:`the input of text <text-widgets>`, :ref:`various checkboxes "
"and selectors <selector-widgets>`, :ref:`uploading files <file-upload-"
"widgets>`, and :ref:`handling of multi-valued input <composite-widgets>`."
msgstr ""
"Django с помощью модуля ``django.forms.widgets`` обеспечивает представление "
"для всех базовых HTML виджетов, а также некоторые часто используемые группы "
"виджетов, включая :ref:`виджеты для ввода текста <text-widgets>`, :ref:"
"`различные чекбоксы и селекторы <selector-widgets>`, :ref:`загрузку файлов "
"<file-upload-widgets>` и :ref:`обработку сложных значений <composite-"
"widgets>`."

# 7af078e0b95c44beb822a959425a9f84
#: ../../ref/forms/widgets.txt:473
msgid "Widgets handling input of text"
msgstr "Виджеты для ввода текста"

# 5e99e68c8c5343e89897228e00dbb920
#: ../../ref/forms/widgets.txt:475
msgid "These widgets make use of the HTML elements ``input`` and ``textarea``."
msgstr "Эти виджеты используют HTML элементы ``input`` и ``textarea``."

# 9d42220d24134c72a0ad4168bd7970d4
#: ../../ref/forms/widgets.txt:478
msgid "``TextInput``"
msgstr "``TextInput``"

#: ../../ref/forms/widgets.txt:482 ../../ref/forms/widgets.txt:550
#: ../../ref/forms/widgets.txt:569 ../../ref/forms/widgets.txt:592
msgid "``input_type``: ``'text'``"
msgstr ""

#: ../../ref/forms/widgets.txt:483
msgid "``template_name``: ``'django/forms/widgets/text.html'``"
msgstr ""

# dec642aaf405412ca40c3bbedaf36fa0
#: ../../ref/forms/widgets.txt:484 ../../ref/forms/widgets.txt:552
#: ../../ref/forms/widgets.txt:571 ../../ref/forms/widgets.txt:594
#, fuzzy
msgid "Renders as: ``<input type=\"text\" ...>``"
msgstr "Ввод текста: ``<input type=\"text\" ...>``"

# 76be602bc1cb449280b78586e6124c88
#: ../../ref/forms/widgets.txt:487
msgid "``NumberInput``"
msgstr "``NumberInput``"

#: ../../ref/forms/widgets.txt:491
msgid "``input_type``: ``'number'``"
msgstr ""

#: ../../ref/forms/widgets.txt:492
msgid "``template_name``: ``'django/forms/widgets/number.html'``"
msgstr ""

# dec642aaf405412ca40c3bbedaf36fa0
#: ../../ref/forms/widgets.txt:493
#, fuzzy
msgid "Renders as: ``<input type=\"number\" ...>``"
msgstr "Ввод текста: ``<input type=\"number\" ...>``"

# b5a8b3d63793495990651cb5d48def4f
#: ../../ref/forms/widgets.txt:495
msgid ""
"Beware that not all browsers support entering localized numbers in "
"``number`` input types. Django itself avoids using them for fields having "
"their :attr:`~django.forms.Field.localize` property set to ``True``."
msgstr ""
"Будьте осторожны, не все браузеры поддерживают локализированные числа в "
"полях типа ``number``. Django, не надеясь на браузер, использует для :attr:"
"`~django.forms.Field.localize` значение ``True``."

# 4b2791045769478580372865521d58ec
#: ../../ref/forms/widgets.txt:500
msgid "``EmailInput``"
msgstr "``EmailInput``"

#: ../../ref/forms/widgets.txt:504
msgid "``input_type``: ``'email'``"
msgstr ""

#: ../../ref/forms/widgets.txt:505
msgid "``template_name``: ``'django/forms/widgets/email.html'``"
msgstr ""

# dec642aaf405412ca40c3bbedaf36fa0
#: ../../ref/forms/widgets.txt:506
#, fuzzy
msgid "Renders as: ``<input type=\"email\" ...>``"
msgstr "Ввод текста: ``<input type=\"email\" ...>``"

# 9d42220d24134c72a0ad4168bd7970d4
#: ../../ref/forms/widgets.txt:509
msgid "``URLInput``"
msgstr "``URLInput``"

#: ../../ref/forms/widgets.txt:513
msgid "``input_type``: ``'url'``"
msgstr ""

#: ../../ref/forms/widgets.txt:514
msgid "``template_name``: ``'django/forms/widgets/url.html'``"
msgstr ""

# dec642aaf405412ca40c3bbedaf36fa0
#: ../../ref/forms/widgets.txt:515
#, fuzzy
msgid "Renders as: ``<input type=\"url\" ...>``"
msgstr "Ввод текста: ``<input type=\"url\" ...>``"

# 5289eac29c114ef5b505cee06fa7519f
#: ../../ref/forms/widgets.txt:518
msgid "``PasswordInput``"
msgstr "``PasswordInput``"

#: ../../ref/forms/widgets.txt:522
msgid "``input_type``: ``'password'``"
msgstr ""

#: ../../ref/forms/widgets.txt:523
msgid "``template_name``: ``'django/forms/widgets/password.html'``"
msgstr ""

# 425016d6bb68481c87fec9f2ed9849d4
#: ../../ref/forms/widgets.txt:524
#, fuzzy
msgid "Renders as: ``<input type=\"password\" ...>``"
msgstr "Ввод пароля: ``<input type='password' ...>``"

# 591d6d9ae5d74397a30f8daeaa28e2f5
# 2c5f765dfc454bf3b4f40e04e0f6e19c
# 56ff8c81c6ae4d79a00251954ade60ea
# 0091156f26cf4c6e935b3193cdf04410
# f8513db6d643483f9e3666e41d8266d8
# 8adc0795b270493abedb5fa3d401d930
#: ../../ref/forms/widgets.txt:526 ../../ref/forms/widgets.txt:638
msgid "Takes one optional argument:"
msgstr "Принимает один необязательный аргумент:"

# b4e6a810541d408f858b4f1640cad98f
#: ../../ref/forms/widgets.txt:530
msgid ""
"Determines whether the widget will have a value filled in when the form is "
"re-displayed after a validation error (default is ``False``)."
msgstr ""
"Определяет, надо ли заполнять этот виджет при повторном отображении формы "
"при ошибке (по умолчанию ``False``)."

# cbb7675bed4f4ae0b7107696ca7287ca
#: ../../ref/forms/widgets.txt:534
msgid "``HiddenInput``"
msgstr "``HiddenInput``"

#: ../../ref/forms/widgets.txt:538
msgid "``input_type``: ``'hidden'``"
msgstr ""

#: ../../ref/forms/widgets.txt:539
msgid "``template_name``: ``'django/forms/widgets/hidden.html'``"
msgstr ""

# 597389d8e4154ead8c87bfac458034b6
#: ../../ref/forms/widgets.txt:540
#, fuzzy
msgid "Renders as: ``<input type=\"hidden\" ...>``"
msgstr "Скрытый ввод: ``<input type='hidden' ...>``"

# a92852c053c84d4a9ca59df9c54a180b
#: ../../ref/forms/widgets.txt:542
msgid ""
"Note that there also is a :class:`MultipleHiddenInput` widget that "
"encapsulates a set of hidden input elements."
msgstr ""
"Следует отметить, что также существует виджет :class:`MultipleHiddenInput`, "
"который объединяет элементы скрытого ввода."

# 58da6844ff7041b498a9c168cae4ee1f
#: ../../ref/forms/widgets.txt:546
msgid "``DateInput``"
msgstr "``DateInput``"

#: ../../ref/forms/widgets.txt:551
msgid "``template_name``: ``'django/forms/widgets/date.html'``"
msgstr ""

# 656e46a8bfda40c1a1e1494c9e701468
# 974bedf831904ac9add10d6ab46629e0
# 590166dcc76a4081b68120f60834ccea
#: ../../ref/forms/widgets.txt:554 ../../ref/forms/widgets.txt:573
#: ../../ref/forms/widgets.txt:596
msgid ""
"Takes same arguments as :class:`TextInput`, with one more optional argument:"
msgstr ""
"Принимает аргументы, аналогичные :class:`TextInput`, лишь с одним "
"необязательным аргументом:"

# f65c2b573d0a4b2e9c24be96ef9e15c4
# d6cae8bff1634187ae108051e7efe25b
# 9683c30bd01c4afb91b133f0a62dc30b
#: ../../ref/forms/widgets.txt:558 ../../ref/forms/widgets.txt:577
#: ../../ref/forms/widgets.txt:600
msgid "The format in which this field's initial value will be displayed."
msgstr "Формат, в котором отображается начальное значение поля."

# ecea4c3ea1354fcd8d4570769c79134b
#: ../../ref/forms/widgets.txt:560
#, fuzzy
msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`DATE_INPUT_FORMATS` and respects :doc:`/topics/"
"i18n/formatting`."
msgstr ""
"Если аргумент ``format`` не предоставлен, то стандартный формат берется из :"
"setting:`DATE_INPUT_FORMATS` с учетом :ref:`format-localization`."

# 1627143525c640b786149c937b3f54cd
#: ../../ref/forms/widgets.txt:565
msgid "``DateTimeInput``"
msgstr "``DateTimeInput``"

#: ../../ref/forms/widgets.txt:570
msgid "``template_name``: ``'django/forms/widgets/datetime.html'``"
msgstr ""

# c39218e3ddca42f8875ecaac9fba5764
#: ../../ref/forms/widgets.txt:579
#, fuzzy
msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`DATETIME_INPUT_FORMATS` and respects :doc:`/topics/"
"i18n/formatting`."
msgstr ""
"Если аргумент ``format`` не предоставлен, то стандартный формат берется из :"
"setting:`DATETIME_INPUT_FORMATS` с учетом :ref:`format-localization`."

#: ../../ref/forms/widgets.txt:583
msgid ""
"By default, the microseconds part of the time value is always set to ``0``. "
"If microseconds are required, use a subclass with the :attr:`~Widget."
"supports_microseconds` attribute set to ``True``."
msgstr ""
"По умолчанию микросекунды значения всегда устанавливаются в ``0``. Если "
"микросекунды необходимы, наследуйтесь от этого класса и установите атрибут :"
"attr:`~Widget.supports_microseconds` в ``True``."

# 76be602bc1cb449280b78586e6124c88
#: ../../ref/forms/widgets.txt:588
msgid "``TimeInput``"
msgstr "``TimeInput``"

#: ../../ref/forms/widgets.txt:593
msgid "``template_name``: ``'django/forms/widgets/time.html'``"
msgstr ""

# 887a065690c04e88b8324c01d6fd1630
#: ../../ref/forms/widgets.txt:602
#, fuzzy
msgid ""
"If no ``format`` argument is provided, the default format is the first "
"format found in :setting:`TIME_INPUT_FORMATS` and respects :doc:`/topics/"
"i18n/formatting`."
msgstr ""
"Если аргумент ``format`` не предоставлен, то стандартный формат берется из :"
"setting:`TIME_INPUT_FORMATS` с учетом :ref:`format-localization`."

#: ../../ref/forms/widgets.txt:606
msgid "For the treatment of microseconds, see :class:`DateTimeInput`."
msgstr ""
"Подробности об обработке микросекунд смотрите в описании :class:"
"`DateTimeInput`."

# b8f16045095c40d28c5fb1277d07af65
#: ../../ref/forms/widgets.txt:609
msgid "``Textarea``"
msgstr "``Textarea``"

#: ../../ref/forms/widgets.txt:613
msgid "``template_name``: ``'django/forms/widgets/textarea.html'``"
msgstr ""

# 612b0792a7494b38807b6f8eecc30446
#: ../../ref/forms/widgets.txt:614
#, fuzzy
msgid "Renders as: ``<textarea>...</textarea>``"
msgstr "Текстовая область: ``<textarea>...</textarea>``"

# ba345d0c7a1c4ef5951e418a9a44fa23
#: ../../ref/forms/widgets.txt:619
msgid "Selector and checkbox widgets"
msgstr "Виджеты выбора и отметки"

# 5e99e68c8c5343e89897228e00dbb920
#: ../../ref/forms/widgets.txt:621
#, fuzzy
msgid ""
"These widgets make use of the HTML elements ``<select>``, ``<input type="
"\"checkbox\">``, and ``<input type=\"radio\">``."
msgstr "Эти виджеты используют HTML элементы ``input`` и ``textarea``."

#: ../../ref/forms/widgets.txt:624
msgid ""
"Widgets that render multiple choices have an ``option_template_name`` "
"attribute that specifies the template used to render each choice. For "
"example, for the :class:`Select` widget, ``select_option.html`` renders the "
"``<option>`` for a ``<select>``."
msgstr ""

# 9278f03ab52b4b18b76841ccd4f1a120
#: ../../ref/forms/widgets.txt:630
msgid "``CheckboxInput``"
msgstr "``CheckboxInput``"

# 8650cb2ea1b54fc697e22958168c85dd
#: ../../ref/forms/widgets.txt:634
#, fuzzy
msgid "``input_type``: ``'checkbox'``"
msgstr "Чекбокс: ``<input type='checkbox' ...>``"

#: ../../ref/forms/widgets.txt:635
msgid "``template_name``: ``'django/forms/widgets/checkbox.html'``"
msgstr ""

# 8650cb2ea1b54fc697e22958168c85dd
#: ../../ref/forms/widgets.txt:636
#, fuzzy
msgid "Renders as: ``<input type=\"checkbox\" ...>``"
msgstr "Чекбокс: ``<input type='checkbox' ...>``"

# 19f4a3df96f44280a70f891212e96d54
#: ../../ref/forms/widgets.txt:642
msgid ""
"A callable that takes the value of the ``CheckboxInput`` and returns "
"``True`` if the checkbox should be checked for that value."
msgstr ""
"Функция, которая принимает значение ``CheckboxInput`` и возвращает ``True``, "
"если указанное значение было отмечено на элементе."

# 65f5cb10711e4e18bbe26a09c9856f3f
#: ../../ref/forms/widgets.txt:646
msgid "``Select``"
msgstr "``Select``"

#: ../../ref/forms/widgets.txt:650 ../../ref/forms/widgets.txt:665
#: ../../ref/forms/widgets.txt:675
msgid "``template_name``: ``'django/forms/widgets/select.html'``"
msgstr ""

#: ../../ref/forms/widgets.txt:651 ../../ref/forms/widgets.txt:666
#: ../../ref/forms/widgets.txt:676
msgid "``option_template_name``: ``'django/forms/widgets/select_option.html'``"
msgstr ""

# f755514c553d48d69026e3b3c734d46f
#: ../../ref/forms/widgets.txt:652
#, fuzzy
msgid "Renders as: ``<select><option ...>...</select>``"
msgstr "Виджет выбора: ``<select><option ...>...</select>``"

# c16bb1ae259d4fe0af68f3696f58fc3b
# 56d46e9c59b94c82a8adb8e6e5b0b083
#: ../../ref/forms/widgets.txt:656 ../../ref/forms/widgets.txt:846
msgid ""
"This attribute is optional when the form field does not have a ``choices`` "
"attribute. If it does, it will override anything you set here when the "
"attribute is updated on the :class:`Field`."
msgstr ""
"Этот атрибут является необязательным, если поле не имеет атрибут "
"``choices``. В противном случае, его содержимое имеет преимущество над "
"атрибутами :class:`Field`."

# d57875f854d14cc688c43a205854c63b
#: ../../ref/forms/widgets.txt:661
msgid "``NullBooleanSelect``"
msgstr "``NullBooleanSelect``"

# af06fa1f577347f1bc5c386338a65bff
#: ../../ref/forms/widgets.txt:668
msgid "Select widget with options 'Unknown', 'Yes' and 'No'"
msgstr "Виджет выбора с вариантами 'Неизвестно', 'Да' и 'Нет'."

# 3c9b1de5910f4798bc9d8e5e24c50fa6
#: ../../ref/forms/widgets.txt:671
msgid "``SelectMultiple``"
msgstr "``SelectMultiple``"

# 0ba56f2824b047fe9cd5a6fcebec1a51
#: ../../ref/forms/widgets.txt:678
#, fuzzy
msgid ""
"Similar to :class:`Select`, but allows multiple selection: ``<select "
"multiple>...</select>``"
msgstr ""
"Аналогично :class:`Select`, но разрешён множественный выбор: ``<select "
"multiple='multiple'>...</select>``."

# 10c3a53c60ed4a38a60bf9c4a1a0563b
#: ../../ref/forms/widgets.txt:682
msgid "``RadioSelect``"
msgstr "``RadioSelect``"

#: ../../ref/forms/widgets.txt:686
msgid "``template_name``: ``'django/forms/widgets/radio.html'``"
msgstr ""

#: ../../ref/forms/widgets.txt:687
msgid "``option_template_name``: ``'django/forms/widgets/radio_option.html'``"
msgstr ""

# 75d15b65518e4c6ab222b98c629baaa2
#: ../../ref/forms/widgets.txt:689
msgid ""
"Similar to :class:`Select`, but rendered as a list of radio buttons within "
"``<li>`` tags:"
msgstr ""
"Аналогично :class:`Select`, но отображается в виде списка радио кнопок с "
"помощью тегов ``<li>``:"

# feab0d404bfe451fb1e092c99e255d7e
#: ../../ref/forms/widgets.txt:699
msgid ""
"For more granular control over the generated markup, you can loop over the "
"radio buttons in the template. Assuming a form ``myform`` with a field "
"``beatles`` that uses a ``RadioSelect`` as its widget:"
msgstr ""
"Для более тонкого управления процессом генерации HTML кода, вы можете "
"выводить радио кнопки в шаблон в цикле. Рассмотрим форму ``myform`` с полем "
"``beatles``, которое использует ``RadioSelect`` в качестве виджета:"

# d1f8e6d721774f42bb1e4976d67bd75c
#: ../../ref/forms/widgets.txt:711
msgid "This would generate the following HTML:"
msgstr "Она будет представлена в виде следующего HTML кода:"

# b4e5bfe3b1064982a0661210f3884ee9
#: ../../ref/forms/widgets.txt:728
msgid ""
"That included the ``<label>`` tags. To get more granular, you can use each "
"radio button's ``tag``, ``choice_label`` and ``id_for_label`` attributes. "
"For example, this template..."
msgstr ""
"Код содержит теги ``<label>``. Также вы можете использовать атрибуты "
"``tag``, ``choice_label`` и ``id_for_label`` для управления отображением "
"каждой радио кнопки. Например, этот шаблон..."

# bf63905ee36b4d629ea997d34b6966e0
#: ../../ref/forms/widgets.txt:741
msgid "...will result in the following HTML:"
msgstr "... преобразуется в следующий HTML:"

# b3ab019d5df04d04b549c28caed04144
#: ../../ref/forms/widgets.txt:765
#, fuzzy
msgid ""
"If you decide not to loop over the radio buttons -- e.g., if your template "
"includes ``{{ myform.beatles }}`` -- they'll be output in a ``<ul>`` with "
"``<li>`` tags, as above."
msgstr ""
"Если вы просто выведите поле в шаблоне с помощью ``{{ myform.beatles }}``, "
"то кнопки будут выведены с помощью тега ``<ul>`` с ``<li>``, как было "
"показано ранее."

# 9e1a600d77ae44dba46dc7f5df5661a8
# a42b5b190f0e49b1913d32174104fb2f
#: ../../ref/forms/widgets.txt:769 ../../ref/forms/widgets.txt:793
#, fuzzy
msgid ""
"The outer ``<ul>`` container receives the ``id`` attribute of the widget, if "
"defined, or :attr:`BoundField.auto_id` otherwise."
msgstr "Контейнер ``<ul>`` получает атрибут ``id``, указанный в виджете."

# c38a751b2fcc431b9fe73ca753726a03
#: ../../ref/forms/widgets.txt:772
msgid ""
"When looping over the radio buttons, the ``label`` and ``input`` tags "
"include ``for`` and ``id`` attributes, respectively. Each radio button has "
"an ``id_for_label`` attribute to output the element's ID."
msgstr ""
"При генерации радио кнопок теги ``label`` and ``input`` содержат атрибуты "
"``for`` и ``id`` соответственно. Каждая радио кнопка использует атрибут "
"``id_for_label`` для генерации ID элемента."

# 076f05775db44bb291c6d87297dcc0c1
#: ../../ref/forms/widgets.txt:777
msgid "``CheckboxSelectMultiple``"
msgstr "``CheckboxSelectMultiple``"

#: ../../ref/forms/widgets.txt:781
msgid "``template_name``: ``'django/forms/widgets/checkbox_select.html'``"
msgstr ""

#: ../../ref/forms/widgets.txt:782
msgid ""
"``option_template_name``: ``'django/forms/widgets/checkbox_option.html'``"
msgstr ""

# 1df1314a549c4f0a9134fe1231461246
#: ../../ref/forms/widgets.txt:784
#, fuzzy
msgid ""
"Similar to :class:`SelectMultiple`, but rendered as a list of checkboxes:"
msgstr ""
"Аналогичен :class:`SelectMultiple`, но отображается в виде списка чекбоксов."

#: ../../ref/forms/widgets.txt:796
msgid ""
"Like :class:`RadioSelect`, you can loop over the individual checkboxes for "
"the widget's choices. Unlike :class:`RadioSelect`, the checkboxes won't "
"include the ``required`` HTML attribute if the field is required because "
"browser validation would require all checkboxes to be checked instead of at "
"least one."
msgstr ""

# 8783558698bd4a8d902e83c01c3d1f30
#: ../../ref/forms/widgets.txt:801
msgid ""
"When looping over the checkboxes, the ``label`` and ``input`` tags include "
"``for`` and ``id`` attributes, respectively. Each checkbox has an "
"``id_for_label`` attribute to output the element's ID."
msgstr ""
"При генерации чекбоксов теги ``label`` and ``input`` содержат атрибуты "
"``for`` и ``id`` соответственно. Каждый чекбокс использует атрибут "
"``id_for_label`` для генерации ID элемента."

# 8a0f0f97e1fe4462bd87bef35927b112
#: ../../ref/forms/widgets.txt:808
msgid "File upload widgets"
msgstr "Виджеты для загрузки файлов"

# 4b2791045769478580372865521d58ec
#: ../../ref/forms/widgets.txt:811
msgid "``FileInput``"
msgstr "``FileInput``"

#: ../../ref/forms/widgets.txt:815
msgid "``template_name``: ``'django/forms/widgets/file.html'``"
msgstr ""

# 2fec7f6de4c14a9a85f02a696bf38208
#: ../../ref/forms/widgets.txt:816
#, fuzzy
msgid "Renders as: ``<input type=\"file\" ...>``"
msgstr "Загрузка файла: ``<input type='file' ...>``"

# ec6a3c045d5043fb80936523d38643ae
#: ../../ref/forms/widgets.txt:819
msgid "``ClearableFileInput``"
msgstr "``ClearableFileInput``"

#: ../../ref/forms/widgets.txt:823
msgid "``template_name``: ``'django/forms/widgets/clearable_file_input.html'``"
msgstr ""

# a803590f26fa457cb02b323c720c775f
#: ../../ref/forms/widgets.txt:824
#, fuzzy
msgid ""
"Renders as: ``<input type=\"file\" ...>`` with an additional checkbox input "
"to clear the field's value, if the field is not required and has initial "
"data."
msgstr ""
"Загрузка файла: ``<input type='file' ...>``, с дополнительным чекбоксом для "
"очистки значения поля, если оно не является обязательным и имеет начальные "
"данные."

# a5c76cfa56fb48a599dd57b6094c9193
#: ../../ref/forms/widgets.txt:831
msgid "Composite widgets"
msgstr "Сложные виджеты"

# 2ce9c0104c7e4fefac0f0efb6860aed2
#: ../../ref/forms/widgets.txt:834
msgid "``MultipleHiddenInput``"
msgstr "``MultipleHiddenInput``"

#: ../../ref/forms/widgets.txt:838
msgid "``template_name``: ``'django/forms/widgets/multiple_hidden.html'``"
msgstr ""

# 97ea18e9b44a429cba93501e186c5a52
#: ../../ref/forms/widgets.txt:839
#, fuzzy
msgid "Renders as: multiple ``<input type=\"hidden\" ...>`` tags"
msgstr "Множество виджетов``<input type='hidden' ...>``."

# 73059368f9124d67a985c5b72835379c
#: ../../ref/forms/widgets.txt:841
msgid ""
"A widget that handles multiple hidden widgets for fields that have a list of "
"values."
msgstr ""
"Виджет, который обрабатывает множество скрытых виджетов для полей, которые "
"содержат список значений."

# 3f24478cef2045baa5ba5709696fd82a
#: ../../ref/forms/widgets.txt:851
msgid "``SplitDateTimeWidget``"
msgstr "``SplitDateTimeWidget``"

#: ../../ref/forms/widgets.txt:855
msgid "``template_name``: ``'django/forms/widgets/splitdatetime.html'``"
msgstr ""

# e0ba6b8bdeaa4590b15b43fa1749a33c
#: ../../ref/forms/widgets.txt:857
#, fuzzy
msgid ""
"Wrapper (using :class:`MultiWidget`) around two widgets: :class:`DateInput` "
"for the date, and :class:`TimeInput` for the time. Must be used with :class:"
"`SplitDateTimeField` rather than :class:`DateTimeField`."
msgstr ""
"Обёртка (:class:`MultiWidget` с помощью) вокруг двух виджетов: :class:"
"`DateInput` для даты и :class:`TimeInput` для времени."

# 24336c1cd5974c83b893e43371fb731d
#: ../../ref/forms/widgets.txt:861
#, fuzzy
msgid "``SplitDateTimeWidget`` has several optional arguments:"
msgstr "``SplitDateTimeWidget`` имеет два необязательных атрибута:"

# bf2d026073fb49d280d0c9b9567e0c76
#: ../../ref/forms/widgets.txt:865
msgid "Similar to :attr:`DateInput.format`"
msgstr "Аналогичен :attr:`DateInput.format`."

# 9fd7bfb84ec94bd39339722945a3d5a7
#: ../../ref/forms/widgets.txt:869
msgid "Similar to :attr:`TimeInput.format`"
msgstr "Аналогичен :attr:`TimeInput.format`."

#: ../../ref/forms/widgets.txt:874
msgid ""
"Similar to :attr:`Widget.attrs`. A dictionary containing HTML attributes to "
"be set on the rendered :class:`DateInput` and :class:`TimeInput` widgets, "
"respectively. If these attributes aren't set, :attr:`Widget.attrs` is used "
"instead."
msgstr ""

# 5482629ff385446d94ce2a783ba8b1aa
#: ../../ref/forms/widgets.txt:880
msgid "``SplitHiddenDateTimeWidget``"
msgstr "``SplitHiddenDateTimeWidget``"

#: ../../ref/forms/widgets.txt:884
msgid "``template_name``: ``'django/forms/widgets/splithiddendatetime.html'``"
msgstr ""

# 935c61fa401147c99d37bb2cbdd350ef
#: ../../ref/forms/widgets.txt:886
msgid ""
"Similar to :class:`SplitDateTimeWidget`, but uses :class:`HiddenInput` for "
"both date and time."
msgstr ""
"Аналогичен :class:`SplitDateTimeWidget`, но используется :class:"
"`HiddenInput` для даты и времени."

# faba93f974134bc982e86cb93babb1b1
#: ../../ref/forms/widgets.txt:890
msgid "``SelectDateWidget``"
msgstr "``SelectDateWidget``"

#: ../../ref/forms/widgets.txt:894
msgid "``template_name``: ``'django/forms/widgets/select_date.html'``"
msgstr ""

# 35b93e3a027a455b8dde87419c68864a
#: ../../ref/forms/widgets.txt:896
msgid ""
"Wrapper around three :class:`~django.forms.Select` widgets: one each for "
"month, day, and year."
msgstr ""
"Обёртка вокруг трёх виджетов :class:`~django.forms.Select` -- месяц, день и "
"год."

# 591d6d9ae5d74397a30f8daeaa28e2f5
# 2c5f765dfc454bf3b4f40e04e0f6e19c
# 56ff8c81c6ae4d79a00251954ade60ea
# 0091156f26cf4c6e935b3193cdf04410
# f8513db6d643483f9e3666e41d8266d8
# 8adc0795b270493abedb5fa3d401d930
#: ../../ref/forms/widgets.txt:899
msgid "Takes several optional arguments:"
msgstr "Принимает несколько необязательных аргументов:"

# 3842fbeb552a46c29317bc1fba9d7e78
#: ../../ref/forms/widgets.txt:903
msgid ""
"An optional list/tuple of years to use in the \"year\" select box. The "
"default is a list containing the current year and the next 9 years."
msgstr ""
"Необязательный список/кортеж с вариантами года. По умолчанию содержит "
"текущий год и девять последующих."

# a2e5a1617c884cd0aab588562654ed29
#: ../../ref/forms/widgets.txt:908
msgid "An optional dict of months to use in the \"months\" select box."
msgstr "Необязательный словарь списка месяцев."

# 48dc59a1363847689a9e61bcda063a11
#: ../../ref/forms/widgets.txt:910
msgid ""
"The keys of the dict correspond to the month number (1-indexed) and the "
"values are the displayed months::"
msgstr ""
"Ключ словаря соответствует номеру месяца (начиная с 1), значения -- "
"отображаемое название::"

#: ../../ref/forms/widgets.txt:921
msgid ""
"If the :class:`~django.forms.DateField` is not required, :class:"
"`SelectDateWidget` will have an empty choice at the top of the list (which "
"is ``---`` by default). You can change the text of this label with the "
"``empty_label`` attribute. ``empty_label`` can be a ``string``, ``list``, or "
"``tuple``. When a string is used, all select boxes will each have an empty "
"choice with this label. If ``empty_label`` is a ``list`` or ``tuple`` of 3 "
"string elements, the select boxes will have their own custom label. The "
"labels should be in this order ``('year_label', 'month_label', "
"'day_label')``."
msgstr ""
"Если поле :class:`~django.forms.DateField` не обязательно, :class:"
"`SelectDateWidget` будет содержать пустое значение в начале списка (по "
"умолчанию ``---``). Вы можете поменять название элемента с помощью атрибута "
"``empty_label``. ``empty_label`` принимает ``string``, ``list``, или "
"``tuple``. Если указана строка, каждый ``<select>`` будет содержать пустое "
"значение. Если ``empty_label`` содержит ``list`` или ``tuple`` из 3-х строк "
"-- для каждого ``<select>`` будет использоваться свое значение. Элементы "
"используются в следующем порядке: ``('year_label', 'month_label', "
"'day_label')``."

# dec642aaf405412ca40c3bbedaf36fa0
#, fuzzy
#~ msgid "Renders as: ``<input type='text' ...>``"
#~ msgstr "Ввод текста: ``<input type=\"text\" ...>``"

#~ msgid ""
#~ "In older versions, this attribute was only defined on the date and time "
#~ "widgets (as ``False``)."
#~ msgstr ""
#~ "В предыдущих версиях этот атрибут был доступен только для виджетов даты и "
#~ "времени (по умолчанию ``False``)."

# 42815729f3b3494988b995a8159ac648
#~ msgid ""
#~ "Returns HTML for the widget, as a Unicode string. This method must be "
#~ "implemented by the subclass, otherwise ``NotImplementedError`` will be "
#~ "raised."
#~ msgstr ""
#~ "Возвращает HTML для виджета в виде строки Unicode. Этот метод должен быть "
#~ "реализован в дочерних классах. В противном случае будет выброшено "
#~ "исключение ``NotImplementedError``."

# 93cfe69b5dc443199d646dabe1bdc213
#~ msgid ""
#~ "The 'value' given is not guaranteed to be valid input, therefore subclass "
#~ "implementations should program defensively."
#~ msgstr ""
#~ "Никто не гарантирует, что полученное значение будет правильным, поэтому "
#~ "реализация метода в дочерних классах должна обеспечивать соответствующую "
#~ "проверку."

# b579377fc188430a8194e3bf65c4121e
#~ msgid "Other methods that may be useful to override include:"
#~ msgstr "Список других методов, которые может быть полезно переопределить:"

# 9626270c23a644de9839e1b7b0ed96f8
#~ msgid ""
#~ "Argument ``value`` is handled differently in this method from the "
#~ "subclasses of :class:`~Widget` because it has to figure out how to split "
#~ "a single value for display in multiple widgets."
#~ msgstr ""
#~ "Аргумент ``value`` обрабатывается по-другому в этом методе в отличие от "
#~ "дочерних классов :class:`~Widget`, потому что он должен знать как именно "
#~ "разделять единое значение для отображения во множестве виджетов."

# fdc51f3d389e4e809c2e3943f0e9e53e
#~ msgid "The ``value`` argument used when rendering can be one of two things:"
#~ msgstr ""
#~ "Аргумент ``value``, используемый при генерации, может быть одним из:"

# 5767e883fb9445b3aff35f08cc622af2
#~ msgid "A ``list``."
#~ msgstr "Список (``list``)."

# f713f6884ed84e64bd28b68a8653bd9d
#~ msgid ""
#~ "A single value (e.g., a string) that is the \"compressed\" representation "
#~ "of a ``list`` of values."
#~ msgstr ""
#~ "Единственное значение (т.е., строка), которая является \"сжатым\" "
#~ "представлением списка значений."

# c9a0d0ebc927414db7a92507635c1f4c
#~ msgid ""
#~ "If ``value`` is a list, the output of :meth:`~MultiWidget.render` will be "
#~ "a concatenation of rendered child widgets. If ``value`` is not a list, it "
#~ "will first be processed by the method :meth:`~MultiWidget.decompress()` "
#~ "to create the list and then rendered."
#~ msgstr ""
#~ "Если ``value`` является списком, результатом метода :meth:`~MultiWidget."
#~ "render` будет совокупность отрендеренных виджетов. Если ``value`` не "
#~ "является списком, то сначала оно будет обработано методом :meth:"
#~ "`~MultiWidget.decompress()` для получения списка и затем выполнится "
#~ "рендеринг."

# 71dea1a3fbc047a3a6f77878ab22c10c
#~ msgid ""
#~ "When ``render()`` executes its HTML rendering, each value in the list is "
#~ "rendered with the corresponding widget -- the first value is rendered in "
#~ "the first widget, the second value is rendered in the second widget, etc."
#~ msgstr ""
#~ "При работе метода ``render()`` каждому значению в списке  назначается "
#~ "соответствующий виджет. Первое значение значение назначается первому "
#~ "виджету, второе -- второму и так далее."

# cf2cb8229de14cc8964f6a906107bce3
#~ msgid ""
#~ "Unlike in the single value widgets, method :meth:`~MultiWidget.render` "
#~ "need not be implemented in the subclasses."
#~ msgstr ""
#~ "В отличие от виджетов с единственным значением, метод :meth:`~MultiWidget."
#~ "render` не обязательно должен быть реализован в дочерних классах."

# 45049d0fe5bf4aa487fbfc951b26e262
#~ msgid ""
#~ "Given a list of rendered widgets (as strings), returns a Unicode string "
#~ "representing the HTML for the whole lot."
#~ msgstr ""
#~ "Переданный список отрендеренных виджетов (в виде строки), возвращает "
#~ "строку Unicode, представляющую HTML код для всего этого."

# 679671380e2c45b8a5d842ce8386d99b
#~ msgid ""
#~ "This hook allows you to format the HTML design of the widgets any way "
#~ "you'd like."
#~ msgstr ""
#~ "Этот обработчик позволяет вам форматировать HTML код виджетов в нужном "
#~ "вам виде."

# 3f6b36ea79b742058bf6bdb4af340fe9
#~ msgid ""
#~ "The :meth:`~MultiWidget.format_output` method is fairly vanilla here (in "
#~ "fact, it's the same as what's been implemented as the default for "
#~ "``MultiWidget``), but the idea is that you could add custom HTML between "
#~ "the widgets should you wish."
#~ msgstr ""
#~ "Метод :meth:`~MultiWidget.format_output` не особо нужен здесь "
#~ "(действительно, он похож на стандартную реализацию этого метода в "
#~ "``MultiWidget``), но идея в том, что вы можете в этой точке можете "
#~ "сделать нужную настройку виджетов."

# 765a3b333d224f4ab45618cb3c40a185
#~ msgid "Date input as a simple text box: ``<input type='text' ...>``"
#~ msgstr "Ввод даты в простое текстовое поле: ``<input type='text' ...>``"

# 9e67199728904448a8fb68e9013271c7
#~ msgid "Date/time input as a simple text box: ``<input type='text' ...>``"
#~ msgstr ""
#~ "Ввод даты/времени в простое текстовое поле: ``<input type='text' ...>``"

# 9fd178cb767b470f8fc21a1ebdb05aac
#~ msgid "Time input as a simple text box: ``<input type='text' ...>``"
#~ msgstr "Ввод времени в простое текстовое поле: ``<input type='text' ...>``"

#~ msgid ""
#~ "This widget used to be located in the ``django.forms.extras.widgets`` "
#~ "package. It is now defined in ``django.forms.widgets`` and like the other "
#~ "widgets it can be imported directly from ``django.forms``."
#~ msgstr ""
#~ "Этот виджет раньше находился в пакете ``django.forms.extras.widgets``. "
#~ "Теперь находится в ``django.forms.widgets`` и, как и другие виджеты, "
#~ "может быть импортирован из ``django.forms``."

# 6930e5014a2b46c9940ca7e4520e505e
#~ msgid ""
#~ "Like :class:`RadioSelect`, you can now loop over the individual "
#~ "checkboxes making up the lists. See the documentation of :class:"
#~ "`RadioSelect` for more details."
#~ msgstr ""
#~ "Как и для :class:`RadioSelect`, теперь можно использовать цикл по "
#~ "чекбоксам. Смотрите описание :class:`RadioSelect`."
