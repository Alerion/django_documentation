# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2013-02-27 00:21\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../ref/urls.txt:3
msgid "``django.urls`` functions for use in URLconfs"
msgstr ""

#: ../../ref/urls.txt:11
msgid "``path()``"
msgstr ""

#: ../../ref/urls.txt:15 ../../ref/urls.txt:54
msgid "Returns an element for inclusion in ``urlpatterns``. For example::"
msgstr ""

#: ../../ref/urls.txt:28
msgid ""
"The ``route`` argument should be a string or :func:`~django.utils."
"translation.gettext_lazy()` (see :ref:`translating-urlpatterns`) that "
"contains a URL pattern. The string may contain angle brackets (like "
"``<username>`` above) to capture part of the URL and send it as a keyword "
"argument to the view. The angle brackets may include a converter "
"specification (like the ``int`` part of ``<int:section>``) which limits the "
"characters matched and may also change the type of the variable passed to "
"the view. For example, ``<int:section>`` matches a string of decimal digits "
"and converts the value to an ``int``. See :ref:`how-django-processes-a-"
"request` for more details."
msgstr ""

#: ../../ref/urls.txt:39
msgid ""
"The ``view`` argument is a view function or the result of :meth:`~django."
"views.generic.base.View.as_view` for class-based views. It can also be an :"
"func:`django.urls.include`."
msgstr ""

#: ../../ref/urls.txt:43
msgid ""
"The ``kwargs`` argument allows you to pass additional arguments to the view "
"function or method. See :ref:`views-extra-options` for an example."
msgstr ""

#: ../../ref/urls.txt:46
msgid ""
"See :ref:`Naming URL patterns <naming-url-patterns>` for why the ``name`` "
"argument is useful."
msgstr ""

#: ../../ref/urls.txt:50
msgid "``re_path()``"
msgstr ""

#: ../../ref/urls.txt:65
msgid ""
"The ``route`` argument should be a string or :func:`~django.utils."
"translation.gettext_lazy()` (see :ref:`translating-urlpatterns`) that "
"contains a regular expression compatible with Python's :py:mod:`re` module. "
"Strings typically use raw string syntax (``r''``) so that they can contain "
"sequences like ``\\d`` without the need to escape the backslash with another "
"backslash. When a match is made, captured groups from the regular expression "
"are passed to the view -- as named arguments if the groups are named, and as "
"positional arguments otherwise. The values are passed as strings, without "
"any type conversion."
msgstr ""

#: ../../ref/urls.txt:75
msgid ""
"The ``view``, ``kwargs`` and ``name`` arguments are the same as for :func:"
"`~django.urls.path()`."
msgstr ""

#: ../../ref/urls.txt:79
msgid "``include()``"
msgstr ""

# c701938d62154578bb0412d1e72a3538
#: ../../ref/urls.txt:85
msgid ""
"A function that takes a full Python import path to another URLconf module "
"that should be \"included\" in this place. Optionally, the :term:"
"`application namespace` and :term:`instance namespace` where the entries "
"will be included into can also be specified."
msgstr ""

#: ../../ref/urls.txt:90
msgid ""
"Usually, the application namespace should be specified by the included "
"module. If an application namespace is set, the ``namespace`` argument can "
"be used to set a different instance namespace."
msgstr ""

#: ../../ref/urls.txt:94
msgid ""
"``include()`` also accepts as an argument either an iterable that returns "
"URL patterns or a 2-tuple containing such iterable plus the names of the "
"application namespaces."
msgstr ""

#: ../../ref/urls.txt:0
msgid "Параметры"
msgstr ""

# cde006ea4653493baf65e7b3f55bece7
#: ../../ref/urls.txt:98
msgid "URLconf module (or module name)"
msgstr ""

# fb9751ecc8b44e3f87a6832ae0e18d27
# d99c395c510744cea56b8adc6d320dd4
#: ../../ref/urls.txt:99
msgid "Instance namespace for the URL entries being included"
msgstr ""

#: ../../ref/urls.txt:101
msgid ""
"Iterable of :func:`~django.urls.path` and/or :func:`~django.urls.re_path` "
"instances."
msgstr ""

# a87dd9affb6d4164a2ea3d71f318dd1f
# eeb1e53199124840a6a11c16308a7b6a
#: ../../ref/urls.txt:102
msgid "Application namespace for the URL entries being included"
msgstr ""

# b700f63ffec04fbc9e12638d153fbeae
#: ../../ref/urls.txt:105
msgid "See :ref:`including-other-urlconfs` and :ref:`namespaces-and-include`."
msgstr ""

#: ../../ref/urls.txt:108
msgid "``register_converter()``"
msgstr ""

#: ../../ref/urls.txt:112
msgid ""
"The function for registering a converter for use in :func:`~django.urls."
"path()` ``route``\\s."
msgstr ""

#: ../../ref/urls.txt:115
msgid ""
"The ``converter`` argument is a converter class, and ``type_name`` is the "
"converter name to use in path patterns. See :ref:`registering-custom-path-"
"converters` for an example."
msgstr ""

#: ../../ref/urls.txt:121
msgid "``django.conf.urls`` functions for use in URLconfs"
msgstr ""

#: ../../ref/urls.txt:126
msgid "``static()``"
msgstr ""

# 6d63b3307b0a428a88bb325154cc1757
#: ../../ref/urls.txt:130
msgid ""
"Helper function to return a URL pattern for serving files in debug mode::"
msgstr ""

#: ../../ref/urls.txt:140
msgid "``url()``"
msgstr ""

#: ../../ref/urls.txt:144
msgid ""
"This function is an alias to :func:`django.urls.re_path()`. It's likely to "
"be deprecated in a future release."
msgstr ""

#: ../../ref/urls.txt:148
msgid "``handler400``"
msgstr ""

# 79e1d08e50ef4957a82037635c1bd700
#: ../../ref/urls.txt:152
msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called if the HTTP client has sent a request that caused an "
"error condition and a response with a status code of 400."
msgstr ""

#: ../../ref/urls.txt:156
msgid ""
"By default, this is :func:`django.views.defaults.bad_request`. If you "
"implement a custom view, be sure it accepts ``request`` and ``exception`` "
"arguments and returns an :class:`~django.http.HttpResponseBadRequest`."
msgstr ""

#: ../../ref/urls.txt:161
msgid "``handler403``"
msgstr ""

# a050a5eb51e641479d877f0ffe2f6f37
#: ../../ref/urls.txt:165
msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called if the user doesn't have the permissions required to "
"access a resource."
msgstr ""

#: ../../ref/urls.txt:169
msgid ""
"By default, this is :func:`django.views.defaults.permission_denied`. If you "
"implement a custom view, be sure it accepts ``request`` and ``exception`` "
"arguments and returns an :class:`~django.http.HttpResponseForbidden`."
msgstr ""

#: ../../ref/urls.txt:174
msgid "``handler404``"
msgstr ""

# 2d0838524c2745b28e6c7be8a33dc5e7
#: ../../ref/urls.txt:178
msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called if none of the URL patterns match."
msgstr ""

#: ../../ref/urls.txt:181
msgid ""
"By default, this is :func:`django.views.defaults.page_not_found`. If you "
"implement a custom view, be sure it accepts ``request`` and ``exception`` "
"arguments and returns an :class:`~django.http.HttpResponseNotFound`."
msgstr ""

#: ../../ref/urls.txt:186
msgid "``handler500``"
msgstr ""

# 5a192794e2b14f28a212009b613e5f22
#: ../../ref/urls.txt:190
msgid ""
"A callable, or a string representing the full Python import path to the view "
"that should be called in case of server errors. Server errors happen when "
"you have runtime errors in view code."
msgstr ""

#: ../../ref/urls.txt:194
msgid ""
"By default, this is :func:`django.views.defaults.server_error`. If you "
"implement a custom view, be sure it accepts a ``request`` argument and "
"returns an :class:`~django.http.HttpResponseServerError`."
msgstr ""
