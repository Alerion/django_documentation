# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-04-23 16:09\n"
"PO-Revision-Date: 2013-05-13 00:00+0300\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 8c3574e0b9844bc2ab306e3fd9e3a480
#: ../../ref/models/fields.txt:3
msgid "Model field reference"
msgstr "Справочник по полям модели"

# bf5836b84ffa41dea84a87ed1603e8ad
#: ../../ref/models/fields.txt:10
msgid ""
"This document contains all the gory details about all the `field options`_ "
"and `field types`_ Django's got to offer."
msgstr ""
"Этот раздел содержит все существующие подробности о всех :ref:`параметрах "
"поля <common-model-field-options>` и :ref:`типах полей <model-field-types>` "
"в Django."

# 8db684042d98466aa16a0d154ee0faf0
#: ../../ref/models/fields.txt:15
msgid ""
"If the built-in fields don't do the trick, you can try :mod:`django.contrib."
"localflavor`, which contains assorted pieces of code that are useful for "
"particular countries or cultures. Also, you can easily :doc:`write your own "
"custom model fields </howto/custom-model-fields>`."
msgstr ""
"Если существующие поля не предоставляют необходимого функционала, вы можете "
"поискать в :mod:`django.contrib.localflavor`, который содержит "
"дополнительный функционал полезный для различных стран. Так же вы можете "
"легко :doc:`создать собственное поле для модели </howto/custom-model-"
"fields>`."

# b1f19cc7b4d44b24bbcc23bdaf3ee60f
#: ../../ref/models/fields.txt:22
msgid ""
"Technically, these models are defined in :mod:`django.db.models.fields`, but "
"for convenience they're imported into :mod:`django.db.models`; the standard "
"convention is to use ``from django.db import models`` and refer to fields as "
"``models.<Foo>Field``."
msgstr ""
"Технически, эти поля определенны в :mod:`django.db.models.fields`, но для "
"удобства они импортированы в :mod:`django.db.models`; по неписанному "
"соглашению принято использовать ``from django.db import models`` и "
"обращаться к полям, как ``models.<Foo>Field``."

# 949e35976cf4493d969fdcafdd398184
#: ../../ref/models/fields.txt:30
msgid "Field options"
msgstr "Параметры поля"

# 1f48e229206740f489037756eb045c48
#: ../../ref/models/fields.txt:32
msgid ""
"The following arguments are available to all field types. All are optional."
msgstr "Приведенные аргументы доступны для всех полей. Все они не обязательны."

# a64b7d33d09d4249afe63ec8c430cb6c
#: ../../ref/models/fields.txt:35
msgid "``null``"
msgstr "``null``"

# 5edcb87a14ed4743a4bd25d9552d0291
#: ../../ref/models/fields.txt:39
msgid ""
"If ``True``, Django will store empty values as ``NULL`` in the database. "
"Default is ``False``."
msgstr ""
"При ``True`` Django сохранит пустое значение как ``NULL`` в базе данных. "
"Значение по умолчанию -- ``False``."

# 299c9454fa224fce9ffd2932e94b7ee0
#: ../../ref/models/fields.txt:42
msgid ""
"Note that empty string values will always get stored as empty strings, not "
"as ``NULL``. Only use ``null=True`` for non-string fields such as integers, "
"booleans and dates. For both types of fields, you will also need to set "
"``blank=True`` if you wish to permit empty values in forms, as the :attr:"
"`~Field.null` parameter only affects database storage (see :attr:`~Field."
"blank`)."
msgstr ""
"Заметим, что пустая строка всегда сохраняется как пустая строка, а не как "
"``NULL``. Используйте ``null=True`` только для не строковых полей, таких как "
"числовые, булевы и даты. Для всех типов полей, вы так же должны указать "
"``blank=True`` если вы хотите разрешить пустые значения в формах, т.к. "
"параметр :attr:`~Field.null` влияет только на сохранение в базе данных "
"(смотрите :attr:`~Field.blank`)."

# 746d1969e15243ac924113ffee5bfa3e
#: ../../ref/models/fields.txt:49
msgid ""
"Avoid using :attr:`~Field.null` on string-based fields such as :class:"
"`CharField` and :class:`TextField` unless you have an excellent reason. If a "
"string-based field has ``null=True``, that means it has two possible values "
"for \"no data\": ``NULL``, and the empty string. In most cases, it's "
"redundant to have two possible values for \"no data;\" Django convention is "
"to use the empty string, not ``NULL``."
msgstr ""
"Избегайте использования :attr:`~Field.null` для строковых полей таких, как :"
"class:`CharField` и :class:`TextField`, если только у вас нет причин для "
"этого. Если строковое поле содержит ``null=True``, это означает, что оно "
"может содержать два возможных \"пустых\" значения: ``NULL`` и пустую строку. "
"В большинстве случаев избыточно иметь два варианты \"пустых\" значений. "
"Правило Django использовать пустую строку, вместо ``NULL``."

# 9f35d8792c6540219ee6ef19225344a6
#: ../../ref/models/fields.txt:58
msgid ""
"When using the Oracle database backend, the value ``NULL`` will be stored to "
"denote the empty string regardless of this attribute."
msgstr ""
"При использовании Oracle, ``NULL`` будет использоваться для пустой строки "
"независимо от значения этого параметра."

# 8f49544161974108b7bb7556c08adb53
#: ../../ref/models/fields.txt:61
msgid ""
"If you want to accept :attr:`~Field.null` values with :class:`BooleanField`, "
"use :class:`NullBooleanField` instead."
msgstr ""
"Если хотите использовать :attr:`~Field.null` для :class:`BooleanField`, "
"используйте :class:`NullBooleanField` вместо этого."

# 21722edb888c48a3adb088c10c164695
#: ../../ref/models/fields.txt:65
msgid "``blank``"
msgstr "``blank``"

# 6b8cd9cf2523413cb14648f334c6a2b6
#: ../../ref/models/fields.txt:69
msgid "If ``True``, the field is allowed to be blank. Default is ``False``."
msgstr ""
"При ``True`` поле может быть пустым. Значение по умолчанию "
"-- ``False``."

# 15dc731b778542e3b2a7b42fb3efd545
#: ../../ref/models/fields.txt:71
msgid ""
"Note that this is different than :attr:`~Field.null`. :attr:`~Field.null` is "
"purely database-related, whereas :attr:`~Field.blank` is validation-related. "
"If a field has ``blank=True``, form validation will allow entry of an empty "
"value. If a field has ``blank=False``, the field will be required."
msgstr ""
"Заметим что этот параметр отличается от :attr:`~Field.null`. :attr:`~Field."
"null` указывается для базы данных, в то время как :attr:`~Field.blank` -- "
"для проверки данных. При ``blank=True``, проверка данных в форме позволит "
"сохранять пустое значение в поле. При ``blank=False`` поле будет "
"обязательным."

# 0932349bf5ae4d69ac2dd2c90ebedeeb
#: ../../ref/models/fields.txt:79
msgid "``choices``"
msgstr "``choices``"

# 2f1ab5c723af4d5faf0a33502fbd4930
#: ../../ref/models/fields.txt:83
msgid ""
"An iterable (e.g., a list or tuple) of 2-tuples to use as choices for this "
"field. If this is given, the default form widget will be a select box with "
"these choices instead of the standard text field."
msgstr ""
"Итератор (например, список или кортеж) двухэлементных кортежей, который "
"будет использоваться как варианты значений для поля. Если этот параметр "
"указан, в форме будет использоваться ``select`` для этого поля."

# 06b3378ed2e84d00a25066994511c71f
#: ../../ref/models/fields.txt:87
msgid ""
"The first element in each tuple is the actual value to be stored, and the "
"second element is the human-readable name. For example::"
msgstr ""
"Первый элемент -- это значение, которое будет сохранено в базе данных. "
"Второй элемент -- название, которое будет отображаться для пользователей. "
"Например::"

# 7e59d10e970145238c2d46b69156f9f5
#: ../../ref/models/fields.txt:97
msgid ""
"Generally, it's best to define choices inside a model class, and to define a "
"suitably-named constant for each value::"
msgstr "Значения лучше указать в константах внутри модели::"

# 0b5991526b3e4a02b49e980f837915bb
#: ../../ref/models/fields.txt:118
msgid ""
"Though you can define a choices list outside of a model class and then refer "
"to it, defining the choices and names for each choice inside the model class "
"keeps all of that information with the class that uses it, and makes the "
"choices easy to reference (e.g, ``Student.SOPHOMORE`` will work anywhere "
"that the ``Student`` model has been imported)."
msgstr ""
"Можно указать список значений и не в модели, но так все данные будут связаны "
"с моделью, и к значениям можно легко обратиться (например, ``Student."
"SOPHOMORE`` можно использовать импортировав модель ``Student``)."

# 719553d08a9b404c98548b5bd2ec62cf
#: ../../ref/models/fields.txt:124
msgid ""
"You can also collect your available choices into named groups that can be "
"used for organizational purposes::"
msgstr "Вы можете сгруппировать значения в именованные группы::"

# 2c6993e86ae243979d2a220d5468b55f
#: ../../ref/models/fields.txt:141
msgid ""
"The first element in each tuple is the name to apply to the group. The "
"second element is an iterable of 2-tuples, with each 2-tuple containing a "
"value and a human-readable name for an option. Grouped options may be "
"combined with ungrouped options within a single list (such as the `unknown` "
"option in this example)."
msgstr ""
"Первый элемент каждого кортежа -- это название группы. Второй элемент -- "
"итератор с двух-элементными кортежами содержащими значение и отображаемое "
"название. Сгруппированные опции могут комбинироваться с не сгруппированными "
"(как `unknown` в примере выше)."

# 112c83d1f8e24ac29d752bf16d1b34de
#: ../../ref/models/fields.txt:147
msgid ""
"For each model field that has :attr:`~Field.choices` set, Django will add a "
"method to retrieve the human-readable name for the field's current value. "
"See :meth:`~django.db.models.Model.get_FOO_display` in the database API "
"documentation."
msgstr ""
"Для каждой модели с полем содержащим :attr:`~Field.choices`, Django "
"добавляет метод для получения названия текущего значения поля. Смотрите :"
"meth:`~django.db.models.Model.get_FOO_display` в документации про API для "
"работы с базой данных."

# 1ac62f308271409fb2ccb1481d849071
#: ../../ref/models/fields.txt:152
msgid ""
"Finally, note that choices can be any iterable object -- not necessarily a "
"list or tuple. This lets you construct choices dynamically. But if you find "
"yourself hacking :attr:`~Field.choices` to be dynamic, you're probably "
"better off using a proper database table with a :class:`ForeignKey`. :attr:"
"`~Field.choices` is meant for static data that doesn't change much, if ever."
msgstr ""
"Отметим что в качестве списка вариантов значений  может быть любой итератор "
"-- не обязательно список или кортеж. Это позволяет определять варианты "
"значений динамически. Но, если вам необходимо использовать динамический :"
"attr:`~Field.choices`, возможно вам следует использовать правильную "
"структуру таблицы базы данных с :class:`ForeignKey`. :attr:`~Field.choices` "
"предназначен для статических данных, которые почти или вообще не изменяются."

# 4c0fd3c3453b4abebfe2e64d1007a2e6
#: ../../ref/models/fields.txt:159
msgid "``db_column``"
msgstr "``db_column``"

# b47a9cc6ebe84c5a800278745e914956
#: ../../ref/models/fields.txt:163
msgid ""
"The name of the database column to use for this field. If this isn't given, "
"Django will use the field's name."
msgstr ""
"Имя колонки в базе данных для хранения данных этого поля. Если этот параметр "
"не указан, Django будет использовать название поля."

# 31bef95c88c0488c90db54961c7e6d2d
#: ../../ref/models/fields.txt:166
msgid ""
"If your database column name is an SQL reserved word, or contains characters "
"that aren't allowed in Python variable names -- notably, the hyphen -- "
"that's OK. Django quotes column and table names behind the scenes."
msgstr ""
"Если имя колонки это зарезервированное SQL слово, или содержит символы "
"запрещенные в названиях переменной  в Python -- в частности, дефис -- все "
"нормально. Django автоматически экранирует название колонок и таблиц."

# 5b0a481694314364b83c2b1cb19600be
#: ../../ref/models/fields.txt:172
msgid "``db_index``"
msgstr "``db_index``"

# e6bf60e4fa32443da614fd5f86355554
#: ../../ref/models/fields.txt:176
msgid ""
"If ``True``, :djadmin:`django-admin.py sqlindexes <sqlindexes>` will output "
"a ``CREATE INDEX`` statement for this field."
msgstr ""
"При ``True``, :djadmin:`django-admin.py sqlindexes <sqlindexes>`  добавит "
"``CREATE INDEX`` для этого поля."

# 55032a4532e54bfea9e535058dc8e01a
#: ../../ref/models/fields.txt:180
msgid "``db_tablespace``"
msgstr "``db_tablespace``"

# 62481809a3694862bcc3cb0ff5b26b1f
#: ../../ref/models/fields.txt:184
msgid ""
"The name of the :doc:`database tablespace </topics/db/tablespaces>` to use "
"for this field's index, if this field is indexed. The default is the "
"project's :setting:`DEFAULT_INDEX_TABLESPACE` setting, if set, or the :attr:"
"`~Options.db_tablespace` of the model, if any. If the backend doesn't "
"support tablespaces for indexes, this option is ignored."
msgstr ""
"Имя :doc:`\"tablespace\" базы данных </topics/db/tablespaces>` используемое "
"для индекса поля, если поле имеет индекс. По-умолчанию используется значение "
"настройки :setting:`DEFAULT_INDEX_TABLESPACE` проекта, если оно указано, "
"иначе :attr:`~Options.db_tablespace` модели. Если база данных не "
"поддерживает \"tablespace\" для индексов, этот параметр будет проигнорирован."

# 738893ac9a464bf587a73a8c34d12a11
#: ../../ref/models/fields.txt:191
msgid "``default``"
msgstr "``default``"

# 66cc0377f8d54c998b5efa6c0b63b349
#: ../../ref/models/fields.txt:195
msgid ""
"The default value for the field. This can be a value or a callable object. "
"If callable it will be called every time a new object is created."
msgstr ""
"Значение по умолчанию для поля. Это может быть значение или вызываемый"
"(callable) объект. Если это вызываемый объект, он будет вызван при создании "
"нового объекта."

# ef2a2a52a0f54d58947685a918ca2403
#: ../../ref/models/fields.txt:198
msgid ""
"The default cannot be a mutable object (model instance, list, set, etc.), as "
"a reference to the same instance of that object would be used as the default "
"value in all new model instances. Instead, wrap the desired default in a "
"callable.  For example, if you had a custom ``JSONField`` and wanted to "
"specify a dictionary as the default, use a ``lambda`` as follows::"
msgstr ""
"Значение по умолчанию не может быть изменяемым значением (экземпляр модели, "
"список и т.д.), т.к. все объекты модели будут ссылаться на этот объект. "
"Вместо этого укажите функцию, которая возвращает нужное значение.  Например, "
"если у вас есть собственное поле ``JSONField`` и вы хотите указать словарь "
"как значение по умолчанию, используйте ``lambda`` следующим образом::"

# 750eb18dc5034be3ac51a5db175f3c2b
#: ../../ref/models/fields.txt:207
msgid "``editable``"
msgstr "``editable``"

# 7c3627d3daaa459b8889099957a25618
#: ../../ref/models/fields.txt:211
msgid ""
"If ``False``, the field will not be displayed in the admin or any other :"
"class:`~django.forms.ModelForm`. Default is ``True``."
msgstr ""
"При ``False``, поле будет не редактируемое в :class:`~django.forms."
"ModelForm` для модели. Значение по умолчанию -- ``True``."

# 6e65b2b6c34947a59d781de6605a92b4
#: ../../ref/models/fields.txt:215
msgid "``error_messages``"
msgstr "``error_messages``"

# 146706692c50405190649f6c8075250a
#: ../../ref/models/fields.txt:219
msgid ""
"The ``error_messages`` argument lets you override the default messages that "
"the field will raise. Pass in a dictionary with keys matching the error "
"messages you want to override."
msgstr ""
"``error_messages`` позволяет переопределить сообщения ошибок возвращаемых "
"полем. Используйте словарь с ключами соответствующими необходимым ошибкам."

# 39febea652b5492d9d74801ea19ee1a9
#: ../../ref/models/fields.txt:223
msgid ""
"Error message keys include ``null``, ``blank``, ``invalid``, "
"``invalid_choice``, and ``unique``. Additional error message keys are "
"specified for each field in the `Field types`_ section below."
msgstr ""
"Ключи ошибок такие: ``null``, ``blank``, ``invalid``, ``invalid_choice`` и "
"``unique``. Дополнительные ошибки указаны для каждого :ref:`типа поля "
"ниже<model-field-types>`."

# e21a3bb0e16d454cb6229717eb7796e2
#: ../../ref/models/fields.txt:228
msgid "``help_text``"
msgstr "``help_text``"

# 7000d523df3846a78b92c5b0b63d58ce
#: ../../ref/models/fields.txt:232
msgid ""
"Extra \"help\" text to be displayed with the form widget. It's useful for "
"documentation even if your field isn't used on a form."
msgstr ""
"Подсказка, отображаемая под полем в интерфейсе администратора. Это полезно "
"для описания поля, даже если модель не используется в форме."

# 82dcba9212a944749b0d7c7121a6e8c0
#: ../../ref/models/fields.txt:235
msgid ""
"Note that this value is *not* HTML-escaped in automatically-generated forms. "
"This lets you include HTML in :attr:`~Field.help_text` if you so desire. For "
"example::"
msgstr ""
"Заметим, что, при отображении в форме, HTML-символы не экранируются. Это "
"позволяет использовать HTML в :attr:`~Field.help_text` если вам необходимо. "
"Например::"

# 580032aedb9b4beeab09ffd1e206acbe
#: ../../ref/models/fields.txt:241
msgid ""
"Alternatively you can use plain text and ``django.utils.html.escape()`` to "
"escape any HTML special characters."
msgstr ""
"Также вы можете использовать обычный текст и ``django.utils.html.escape()`` "
"что бы экранировать HTML."

# ccb13b4516194e24a9ad1349ee5cf320
#: ../../ref/models/fields.txt:245
msgid "``primary_key``"
msgstr "``primary_key``"

# c9014c14bbc34b37bc7e551859db8b90
#: ../../ref/models/fields.txt:249
msgid "If ``True``, this field is the primary key for the model."
msgstr "При ``True`` это поле будет первичным ключом."

# d28040dbddaa47b5b6ceecea9677247d
#: ../../ref/models/fields.txt:251
msgid ""
"If you don't specify ``primary_key=True`` for any field in your model, "
"Django will automatically add an :class:`AutoField` to hold the primary key, "
"so you don't need to set ``primary_key=True`` on any of your fields unless "
"you want to override the default primary-key behavior. For more, see :ref:"
"`automatic-primary-key-fields`."
msgstr ""
"Если вы не укажите ``primary_key=True`` для какого-либо поля в модели, "
"Django самостоятельно добавит :class:`AutoField` для хранения первичного "
"ключа, вы не обязаны указывать ``primary_key=True``, если не хотите "
"переопределить первичный ключ по умолчанию. Подробнее смотрите :ref:"
"`automatic-primary-key-fields`."

# e979e5b8d0ce4ebe93e0247fbf073b7a
#: ../../ref/models/fields.txt:257
msgid ""
"``primary_key=True`` implies :attr:`null=False <Field.null>` and :attr:"
"`unique=True <Field.unique>`. Only one primary key is allowed on an object."
msgstr ""
"``primary_key=True`` подразумевает :attr:`null=False <Field.null>` и :attr:"
"`unique=True <Field.unique>`. Модель может содержать только один первичный "
"ключ."

# 593fb17b072141369e1e208341eda565
#: ../../ref/models/fields.txt:261
msgid "``unique``"
msgstr "``unique``"

# 95788ac44fcf48ec9547b21db29a57b0
#: ../../ref/models/fields.txt:265
msgid "If ``True``, this field must be unique throughout the table."
msgstr "При ``True`` значение поля должно быть уникальным."

# 38d364c67e0a4b3798cbd4592b5bff91
#: ../../ref/models/fields.txt:267
msgid ""
"This is enforced at the database level and by model validation. If you try "
"to save a model with a duplicate value in a :attr:`~Field.unique` field, a :"
"exc:`django.db.IntegrityError` will be raised by the model's :meth:`~django."
"db.models.Model.save` method."
msgstr ""
"Этот параметр учитывается при сохранении в базу данных и при проверке данных "
"в модели. Если вы попытаетесь сохранить повторное значение в поле с :attr:"
"`~Field.unique`, будет вызвана ошибка :exc:`django.db.IntegrityError` "
"методом :meth:`~django.db.models.Model.save`."

# 9228e41d79ad4f8c9a4a5c808992b330
#: ../../ref/models/fields.txt:272
msgid ""
"This option is valid on all field types except :class:`ManyToManyField` and :"
"class:`FileField`."
msgstr ""
"Этот параметр можно использовать для любого типа поля кроме :class:"
"`ManyToManyField` и :class:`FileField`."

# 703fa578992f4195ac316e755b6bb62a
#: ../../ref/models/fields.txt:275
msgid ""
"Note that when ``unique`` is ``True``, you don't need to specify :attr:"
"`~Field.db_index`, because ``unique`` implies the creation of an index."
msgstr ""
"Заметим что, при ``unique`` равном ``True``, не нужно указывать :attr:"
"`~Field.db_index`, т.к. ``unique`` так же создает индекс."

# 16ac57d4c130475b88e90bfa9b59d0f7
#: ../../ref/models/fields.txt:279
msgid "``unique_for_date``"
msgstr "``unique_for_date``"

# 7676407ce35e44f18d360ba2de0890a5
#: ../../ref/models/fields.txt:283
msgid ""
"Set this to the name of a :class:`DateField` or :class:`DateTimeField` to "
"require that this field be unique for the value of the date field."
msgstr ""
"Этот параметр должен быть равен названию :class:`DateField` или :class:"
"`DateTimeField` поля, для которого значение должно быть уникальным."

# 23874035c391463cba86e99e2c4beb25
#: ../../ref/models/fields.txt:286
msgid ""
"For example, if you have a field ``title`` that has ``unique_for_date="
"\"pub_date\"``, then Django wouldn't allow the entry of two records with the "
"same ``title`` and ``pub_date``."
msgstr ""
"Например, если модель имеет поле ``title`` с ``unique_for_date=\"pub_date"
"\"``, тогда Django позволит сохранять записи только с уникальной комбинацией "
"``title`` и ``pub_date``."

# 95dc37dbce0148aaafc10847615efaf4
#: ../../ref/models/fields.txt:290
msgid "This is enforced by model validation but not at the database level."
msgstr ""
"Эта проверка работает на уровне модели и никак не виляет на проверку в базе "
"данных."

# 8896dd7bc9294164a27a32b55196b7c7
#: ../../ref/models/fields.txt:293
msgid "``unique_for_month``"
msgstr "``unique_for_month``"

# bf8b8c34cc3342a28c0617fd5a46a863
#: ../../ref/models/fields.txt:297
msgid ""
"Like :attr:`~Field.unique_for_date`, but requires the field to be unique "
"with respect to the month."
msgstr ""
"Аналогично :attr:`~Field.unique_for_date`, но значение будет уникально для "
"месяца."

# 9998918199404177bb376e9d49164202
#: ../../ref/models/fields.txt:301
msgid "``unique_for_year``"
msgstr "``unique_for_year``"

# 34718c18f48d4beebe457cd4ea532bf4
#: ../../ref/models/fields.txt:305
msgid ""
"Like :attr:`~Field.unique_for_date` and :attr:`~Field.unique_for_month`."
msgstr ""
"Аналогично :attr:`~Field.unique_for_date` и :attr:`~Field.unique_for_month`."

# 810d4df1fe7b445095fc7c61d7006ad8
#: ../../ref/models/fields.txt:308
msgid "``verbose_name``"
msgstr "``verbose_name``"

# a17ba1776b8b4aa88a8325a70871da6b
#: ../../ref/models/fields.txt:312
msgid ""
"A human-readable name for the field. If the verbose name isn't given, Django "
"will automatically create it using the field's attribute name, converting "
"underscores to spaces. See :ref:`Verbose field names <verbose-field-names>`."
msgstr ""
"Отображаемое имя поля. Если параметр не указан, Django самостоятельно "
"создаст его используя имя атрибута поля, заменяя нижнее подчеркивание на "
"пробелы. Смотрите раздел про :ref:`отображаемые имена полей <verbose-field-"
"names>`."

# 2d7b380f37764041b6fbe885bef493bd
#: ../../ref/models/fields.txt:317
msgid "``validators``"
msgstr "``validators``"

# 5164e5b66d10475eabaf9c1c543a5f4c
#: ../../ref/models/fields.txt:321
msgid ""
"A list of validators to run for this field. See the :doc:`validators "
"documentation </ref/validators>` for more information."
msgstr ""
"Список проверок(\"валидаторов\") выполняемых для этого поля. Смотрите :doc:"
"`раздел о \"валидаторах\" </ref/validators>` для подробной информации."

# 18b963e82b4546918406f0f304af94eb
#: ../../ref/models/fields.txt:327
msgid "Field types"
msgstr "Типы полей"

# 082b945827d14012a2e68d4f99bb07bd
#: ../../ref/models/fields.txt:332
msgid "``AutoField``"
msgstr "``AutoField``"

# 82e1fe5d0c71467d9862d47b34404f7e
#: ../../ref/models/fields.txt:336
msgid ""
"An :class:`IntegerField` that automatically increments according to "
"available IDs. You usually won't need to use this directly; a primary key "
"field will automatically be added to your model if you don't specify "
"otherwise. See :ref:`automatic-primary-key-fields`."
msgstr ""
"Автоинкрементное поле :class:`IntegerField`. Используется для хранения ID. "
"Скорее всего вам не придется использовать это поле, первичный ключ будет "
"автоматически добавлен к модели. Смотрите :ref:`automatic-primary-key-"
"fields`."

# 83d29df4fc8d46cd907838a39c49f99a
#: ../../ref/models/fields.txt:342
msgid "``BigIntegerField``"
msgstr "``BigIntegerField``"

# 5ec28ef1e8e642deb0da59abb230a9c0
#: ../../ref/models/fields.txt:346
msgid ""
"A 64 bit integer, much like an :class:`IntegerField` except that it is "
"guaranteed to fit numbers from -9223372036854775808 to 9223372036854775807. "
"The default form widget for this field is a :class:`~django.forms.TextInput`."
msgstr ""
"64-битное целочисленное, аналогично :class:`IntegerField` но позволяет "
"хранить числа от -9223372036854775808 до 9223372036854775807. Форма будет "
"использовать ``<input type=\"text\">`` (одно строчное поле ввода) для "
"отображения."

# a5cb2135a6bd43d7bd284e7312447416
#: ../../ref/models/fields.txt:352
msgid "``BooleanField``"
msgstr "``BooleanField``"

# 68b6f9896d334c4f868ad663cdc47cb0
#: ../../ref/models/fields.txt:356
msgid "A true/false field."
msgstr "Поле хранящее значение true/false."

# 35625f2943664e72be6c119741801075
#: ../../ref/models/fields.txt:358
msgid ""
"The default form widget for this field is a :class:`~django.forms."
"CheckboxInput`."
msgstr ""
"Виджет по умолчанию для этого поля :class:`~django.forms.CheckboxInput`."

# 594009a7a8ff428e8572d1daf75d7b4e
#: ../../ref/models/fields.txt:361
msgid ""
"If you need to accept :attr:`~Field.null` values then use :class:"
"`NullBooleanField` instead."
msgstr ""
"Если вам нужен параметр :attr:`~Field.null`, используйте поле :class:"
"`NullBooleanField`."

# 85f1d44cd44143a0855fb1a1dc492c4a
#: ../../ref/models/fields.txt:365
msgid "``CharField``"
msgstr "``CharField``"

# 4b41c5b207494cc8be62a33a6c66953f
#: ../../ref/models/fields.txt:369
msgid "A string field, for small- to large-sized strings."
msgstr "Строковое поле для хранения коротких или длинных строк."

# c234a5f64c2247bd84e3791e292fb555
#: ../../ref/models/fields.txt:371
msgid "For large amounts of text, use :class:`~django.db.models.TextField`."
msgstr ""
"Для большого количества текстовой информации используйте :class:`~django.db."
"models.TextField`."

# ebb7457df0b646a98fa6c05394bc5050
# 5a49337e18f64618b252f334bbd41efb
# 99addf16a3d6431ea08c33328f5458c5
# 2bcfac1f138c460aa7c52435559f5693
#: ../../ref/models/fields.txt:373 ../../ref/models/fields.txt:475
#: ../../ref/models/fields.txt:756 ../../ref/models/fields.txt:933
msgid ""
"The default form widget for this field is a :class:`~django.forms.TextInput`."
msgstr "Виджет по умолчанию для этого поля :class:`~django.forms.TextInput`."

# 33c6fdea57dd430c8057f0e066e9f475
#: ../../ref/models/fields.txt:375
msgid ":class:`CharField` has one extra required argument:"
msgstr ":class:`CharField` принимает один дополнительный аргумент:"

# 3685f67898574a29a149e781eaa8f2a8
#: ../../ref/models/fields.txt:379
msgid ""
"The maximum length (in characters) of the field. The max_length is enforced "
"at the database level and in Django's validation."
msgstr ""
"Максимальная длинна(в символах) этого поля. ``max_length`` используется для "
"проверки данных на уровне базы данных и форм Django."

# bf3bae0a55664dd5a2f69042f03e4673
#: ../../ref/models/fields.txt:384
msgid ""
"If you are writing an application that must be portable to multiple database "
"backends, you should be aware that there are restrictions on ``max_length`` "
"for some backends. Refer to the :doc:`database backend notes </ref/"
"databases>` for details."
msgstr ""
"Если вы создаете независимое приложение, которое должно работать на "
"различных базах данных, помните что существуют некоторые ограничения "
"использования ``max_length`` для некоторых типов баз данных. Смотрите раздел "
"про :doc:`использование различных типов баз данных </ref/databases>`."

# 373efc2a709d4fa1b99b8f496b63d5bf
#: ../../ref/models/fields.txt:391
msgid ""
"If you are using this field with MySQLdb 1.2.2 and the ``utf8_bin`` "
"collation (which is *not* the default), there are some issues to be aware "
"of. Refer to the :ref:`MySQL database notes <mysql-collation>` for details."
msgstr ""
"Если вы используете это поле с MySQLdb 1.2.2 и ``utf8_bin`` \"collation"
"\" (которое *не* является значением по умолчанию), могут быть некоторые "
"проблемы. Смотрите :ref:`советы при работе с MySQL <mysql-collation>` для "
"подробностей."

# 692ea20f1f5e4e5984fad147ba250369
#: ../../ref/models/fields.txt:398
msgid "``CommaSeparatedIntegerField``"
msgstr "``CommaSeparatedIntegerField``"

# 05eaed3139b940a88587706a154f9b41
#: ../../ref/models/fields.txt:402
msgid ""
"A field of integers separated by commas. As in :class:`CharField`, the :attr:"
"`~CharField.max_length` argument is required and the note about database "
"portability mentioned there should be heeded."
msgstr ""
"Поле содержащее целые числа разделенные запятыми. Как и в :class:"
"`CharField`, необходим параметр :attr:`~CharField.max_length`. Упомянутые "
"особенности работы с различными типами баз данных так же актуальны."

# 1a94384169c84ed7ab5888cd212442a6
#: ../../ref/models/fields.txt:407
msgid "``DateField``"
msgstr "``DateField``"

# fbc801227a4a40dc8b8f34282e001c1c
#: ../../ref/models/fields.txt:411
msgid ""
"A date, represented in Python by a ``datetime.date`` instance. Has a few "
"extra, optional arguments:"
msgstr ""
"Дата, представленная в виде объекта ``datetime.date`` Python. Принимает "
"несколько дополнительных параметров:"

# 79635f0fed254a31aa7973c53ae4bacb
#: ../../ref/models/fields.txt:416
msgid ""
"Automatically set the field to now every time the object is saved. Useful "
"for \"last-modified\" timestamps. Note that the current date is *always* "
"used; it's not just a default value that you can override."
msgstr ""
"Значение поля будет автоматически установлено в текущую дату при каждом "
"сохранении объекта. Полезно для хранения времени последнего изменения. "
"Заметим, что текущее время будет использовано *всегда*; это не просто "
"значение по умолчанию, которое вы можете переопределить."

# f32850092b49421897cd5b0a79858302
#: ../../ref/models/fields.txt:422
msgid ""
"Automatically set the field to now when the object is first created. Useful "
"for creation of timestamps. Note that the current date is *always* used; "
"it's not just a default value that you can override."
msgstr ""
"Значение поля будет автоматически установлено в текущую дату при создании"
"(первом сохранении) объекта. Полезно для хранения времени создания. Заметим, "
"что текущее время будет использовано *всегда*; это не просто значение по-"
"умолчанию, которое вы можете переопределить."

# 7ce7b7d9be9646ac83ee43e2da746588
#: ../../ref/models/fields.txt:426
msgid ""
"The default form widget for this field is a :class:`~django.forms."
"TextInput`. The admin adds a JavaScript calendar, and a shortcut for \"Today"
"\". Includes an additional ``invalid_date`` error message key."
msgstr ""
"В форме поле будет представлено как `:class:`~django.forms.TextInput` с "
"JavaScript календарем, и кнопкой \"Сегодня\". Содержит дополнительную ошибку "
"``invalid_date``."

# 9676f0dc473b47a99f2aad98dbf1e16e
#: ../../ref/models/fields.txt:432
msgid ""
"As currently implemented, setting ``auto_now`` or ``auto_now_add`` to "
"``True`` will cause the field to have ``editable=False`` and ``blank=True`` "
"set."
msgstr ""
"При использовании ``auto_now`` или ``auto_now_add`` со значением ``True`` "
"будут установлены параметры ``editable=False`` и ``blank=True``."

# 9ea587e4e3524b39a67603cfda36d057
#: ../../ref/models/fields.txt:437
msgid "``DateTimeField``"
msgstr "``DateTimeField``"

# 7ddddeee8f264a7caed679719fd17558
#: ../../ref/models/fields.txt:441
msgid ""
"A date and time, represented in Python by a ``datetime.datetime`` instance. "
"Takes the same extra arguments as :class:`DateField`."
msgstr ""
"Дата и время, представленные объектом ``datetime.datetime`` Python. "
"Принимает аналогичные параметры что и :class:`DateField`."

# 67119680598048e0be2289b889eeac18
#: ../../ref/models/fields.txt:444
msgid ""
"The default form widget for this field is a single :class:`~django.forms."
"TextInput`. The admin uses two separate :class:`~django.forms.TextInput` "
"widgets with JavaScript shortcuts."
msgstr ""
"Виджет по умолчанию в форме для этого поля - :class:`~django.forms."
"TextInput`. Интерфейс администратора использует два виджета :class:`~django."
"forms.TextInput` и JavaScript."

# a845530191a544dcb5ba3624790feb2d
#: ../../ref/models/fields.txt:449
msgid "``DecimalField``"
msgstr "``DecimalField``"

# d25c51fab5bb410fbd56e4f1441f1d0b
#: ../../ref/models/fields.txt:453
msgid ""
"A fixed-precision decimal number, represented in Python by a :class:"
"`~decimal.Decimal` instance. Has two **required** arguments:"
msgstr ""
"Десятичное число с фиксированной точностью, представленное объектом  :class:"
"`~decimal.Decimal` Python. Принимает два **обязательных** параметра:"

# b9801849694b463d9a74448b5f4a93e3
#: ../../ref/models/fields.txt:458
msgid ""
"The maximum number of digits allowed in the number. Note that this number "
"must be greater than or equal to ``decimal_places``, if it exists."
msgstr ""
"Максимальное количество цифр в числе. Заметим, что это число должно быть "
"больше или равно ``decimal_places``, если оно не равно нулю."

# 1926a9516f52462b9b715ced195e8251
#: ../../ref/models/fields.txt:463
msgid "The number of decimal places to store with the number."
msgstr "Количество знаков после запятой."

# 4e32207e096e49c29e7577574ed3633c
#: ../../ref/models/fields.txt:465
msgid ""
"For example, to store numbers up to 999 with a resolution of 2 decimal "
"places, you'd use::"
msgstr ""
"Например, для хранения числа до 999 с двумя знаками после запятой, "
"используйте::"

# 9aca9a3a948f44259a57f69ba3c15981
#: ../../ref/models/fields.txt:470
msgid ""
"And to store numbers up to approximately one billion with a resolution of 10 "
"decimal places::"
msgstr "Для хранения числа до миллиарда и 10 знаков после запятой::"

# d20e1f8cff3d4abd9f64e5b34dab3e86
#: ../../ref/models/fields.txt:479
msgid ""
"For more information about the differences between the :class:`FloatField` "
"and :class:`DecimalField` classes, please see :ref:`FloatField vs. "
"DecimalField <floatfield_vs_decimalfield>`."
msgstr ""
"Для дополнительной информации о разнице между :class:`FloatField` и :class:"
"`DecimalField`, смотрите раздел :ref:`FloatField vs. DecimalField "
"<floatfield_vs_decimalfield>`."

# 5643c3c3b85f43c49301e730cb781305
#: ../../ref/models/fields.txt:484
msgid "``EmailField``"
msgstr "``EmailField``"

# db898623fc2a46148f39e94967e3cfd0
#: ../../ref/models/fields.txt:488
msgid ""
"A :class:`CharField` that checks that the value is a valid email address."
msgstr "Поле :class:`CharField` для хранения правильного email-адреса."

# 42783823cba74640825d684c9e31dec2
#: ../../ref/models/fields.txt:492
msgid ""
"The default 75 character ``max_length`` is not capable of storing all "
"possible RFC3696/5321-compliant email addresses. In order to store all "
"possible valid email addresses, a ``max_length`` of 254 is required. The "
"default ``max_length`` of 75 exists for historical reasons. The default has "
"not been changed in order to maintain backwards compatibility with existing "
"uses of :class:`EmailField`."
msgstr ""
"Значение ``max_length`` в 75 символов не достаточно для хранения всех "
"возможных значений в соответствии RFC3696/5321. Для хранения всех возможных "
"вариантов необходимо значение ``max_length`` в 254. Значение в 75 символов "
"сложилось исторически и не изменяется для обратной совместимости."

# 2f2a524f57904e969789685ccd0efdee
#: ../../ref/models/fields.txt:500
msgid "``FileField``"
msgstr "``FileField``"

# 9b089018e91144c7ae42062df86fb5c7
#: ../../ref/models/fields.txt:504
msgid "A file-upload field."
msgstr "Поле для загрузки файла."

# 6ebc973729c348798c659e7eaf5f06a5
#: ../../ref/models/fields.txt:507
msgid ""
"The ``primary_key`` and ``unique`` arguments are not supported, and will "
"raise a ``TypeError`` if used."
msgstr ""
"``primary_key`` и ``unique`` не принимаются, и вызовут исключение "
"``TypeError`` при использовании."

# 6010854b282b4f9bb639fb34bcb4632e
#: ../../ref/models/fields.txt:510
msgid "Has one **required** argument:"
msgstr "Принимает один **обязательный** параметр:"

# 75c345765fc6430cb35099252d85fc21
#: ../../ref/models/fields.txt:514
msgid ""
"A local filesystem path that will be appended to your :setting:`MEDIA_ROOT` "
"setting to determine the value of the :attr:`~django.db.models.fields.files."
"FieldFile.url` attribute."
msgstr ""
"Путь в файловой системе относительный настройке :setting:`MEDIA_ROOT` для "
"определения :attr:`~django.db.models.fields.files.FieldFile.url`."

# ffe8dc7d538b48be84193da1edf66984
#: ../../ref/models/fields.txt:518
msgid ""
"This path may contain :func:`~time.strftime` formatting, which will be "
"replaced by the date/time of the file upload (so that uploaded files don't "
"fill up the given directory)."
msgstr ""
"Поддерживает форматирование :func:`~time.strftime`, которое будет заменено "
"на дату/время загруженного файла (и загружаемые файлы не заполнят один "
"каталог)."

# b13e63c3d15c4bda8e1619e28c867f0c
#: ../../ref/models/fields.txt:522
msgid ""
"This may also be a callable, such as a function, which will be called to "
"obtain the upload path, including the filename. This callable must be able "
"to accept two arguments, and return a Unix-style path (with forward slashes) "
"to be passed along to the storage system. The two arguments that will be "
"passed are:"
msgstr ""
"Так же принимается вызываемый объект, такой как функция, который будет "
"вызван для получения пути к загруженному файлу, включая имя файла. "
"Вызываемый объект должен принимать два обязательных аргумента, и возвращать "
"путь в стиле Unix (с прямыми слэшами), который будет передан в систему "
"хранения файлов(storage). Два аргумента это:"

# e5a274e5ee6447eb983ed3e7aee124e4
#: ../../ref/models/fields.txt:529
msgid "Argument"
msgstr "Аргумент"

# d19f1390467348f5ae3be0c273b00d06
#: ../../ref/models/fields.txt:529
msgid "Description"
msgstr "Описание"

# f1eaa67b17484094b4180f2b64c88999
#: ../../ref/models/fields.txt:531
msgid "``instance``"
msgstr "``instance``"

# 51d7ea9394724b928722b1b640115e79
#: ../../ref/models/fields.txt:531
msgid ""
"An instance of the model where the ``FileField`` is defined. More "
"specifically, this is the particular instance where the current file is "
"being attached."
msgstr ""
"Экземпляр модели, для которой определено поле ``FileField``. Точнее, это "
"объект для которого сохраняется текущий файл."

# c840ca02ec9f4d34ab785e49b6729966
#: ../../ref/models/fields.txt:536
msgid ""
"In most cases, this object will not have been saved to the database yet, so "
"if it uses the default ``AutoField``, *it might not yet have a value for its "
"primary key field*."
msgstr ""
"В большинстве случаев объект еще не будет сохранен в базу данных, и при "
"использовании ``AutoField``, *первичный ключ объекта может быть пустым*."

# 08b51c302ebd44e8b45b506d7629c8da
#: ../../ref/models/fields.txt:541
msgid "``filename``"
msgstr "``filename``"

# b3fbea48879148bdaa500977c206519f
#: ../../ref/models/fields.txt:541
msgid ""
"The filename that was originally given to the file. This may or may not be "
"taken into account when determining the final destination path."
msgstr ""
"Оригинальное имя файла. Вы можете его учитывать, или проигнорировать, при "
"определении окончательного пути к файлу."

# f2df786f57d547b39cf855f10e9c4a8a
#: ../../ref/models/fields.txt:546
msgid "Also has one optional argument:"
msgstr "Так же принимается один дополнительный параметр:"

# 79ba275a2ca349e88c2e118052f87601
#: ../../ref/models/fields.txt:550
msgid ""
"Optional. A storage object, which handles the storage and retrieval of your "
"files. See :doc:`/topics/files` for details on how to provide this object."
msgstr ""
"Необязателен. Объект \"storage\", который отвечает за хранение и получение "
"файлов. Смотрите :doc:`/topics/files` для подробной информации."

# a2c46f513a22423a9b4bb537b35fe226
#: ../../ref/models/fields.txt:553
msgid ""
"The default form widget for this field is a :class:`~django.forms.FileInput`."
msgstr "Виджет форма для этого поля - :class:`~django.forms.FileInput`."

# 0644b76ce62441aaa7f0cd15a92c9a27
#: ../../ref/models/fields.txt:555
msgid ""
"Using a :class:`FileField` or an :class:`ImageField` (see below) in a model "
"takes a few steps:"
msgstr ""
"Использование :class:`FileField` или :class:`ImageField` (смотрите ниже) "
"требует некоторых дополнительных действий:"

# a6795ee231464a619bf58d72ce463600
#: ../../ref/models/fields.txt:558
msgid ""
"In your settings file, you'll need to define :setting:`MEDIA_ROOT` as the "
"full path to a directory where you'd like Django to store uploaded files. "
"(For performance, these files are not stored in the database.) Define :"
"setting:`MEDIA_URL` as the base public URL of that directory. Make sure that "
"this directory is writable by the Web server's user account."
msgstr ""
"В файле настроек необходимо определить :setting:`MEDIA_ROOT`, как полный "
"путь к каталогу, куда Django должен сохранять файлы. (Для повышения производительности "
"файлы не хранятся в базе данных.) Определить :setting:`MEDIA_URL`, который "
"является URL-ом к этому каталогу и используется для создания URL-а к файлу. "
"Убедитесь, что пользователь, от которого работает сервер, имеет права записи "
"в этот каталог."

# 7e466f2d372b4bc295d8ef8ca77cd635
#: ../../ref/models/fields.txt:564
msgid ""
"Add the :class:`FileField` or :class:`ImageField` to your model, making sure "
"to define the :attr:`~FileField.upload_to` option to tell Django to which "
"subdirectory of :setting:`MEDIA_ROOT` it should upload files."
msgstr ""
"Добавьте :class:`FileField` или :class:`ImageField` к модели, убедитесь что "
"определили :attr:`~FileField.upload_to` что бы указать DJango в каком под-"
"каталоге в :setting:`MEDIA_ROOT` должны быть сохранены файлы."

# 2b93b64f17ef4548b5a447c10fb61f18
#: ../../ref/models/fields.txt:568
msgid ""
"All that will be stored in your database is a path to the file (relative to :"
"setting:`MEDIA_ROOT`). You'll most likely want to use the convenience :attr:"
"`~django.db.models.fields.files.FieldFile.url` attribute provided by Django. "
"For example, if your :class:`ImageField` is called ``mug_shot``, you can get "
"the absolute path to your image in a template with ``{{ object.mug_shot."
"url }}``."
msgstr ""
"Все, что будет сохранено в базе данных, это путь к файлу (относительно :"
"setting:`MEDIA_ROOT`). Скорее всего вы будете использовать :attr:`~django.db."
"models.fields.files.FieldFile.url` предоставленную Django. Например, если :"
"class:`ImageField` назван ``mug_shot``, вы можете получить URL к файлу в "
"шаблоне используя ``{{ object.mug_shot.url }}``."

# 3755e07f631d4b4a83e71bba8133d25e
#: ../../ref/models/fields.txt:575
msgid ""
"For example, say your :setting:`MEDIA_ROOT` is set to ``'/home/media'``, "
"and :attr:`~FileField.upload_to` is set to ``'photos/%Y/%m/%d'``. The ``'%Y/"
"%m/%d'`` part of :attr:`~FileField.upload_to` is :func:`~time.strftime` "
"formatting; ``'%Y'`` is the four-digit year, ``'%m'`` is the two-digit month "
"and ``'%d'`` is the two-digit day. If you upload a file on Jan. 15, 2007, it "
"will be saved in the directory ``/home/media/photos/2007/01/15``."
msgstr ""
"Например, :setting:`MEDIA_ROOT` равен ``'/home/media'``, и :attr:`~FileField."
"upload_to` равен ``'photos/%Y/%m/%d'``. ``'%Y/%m/%d'`` часть параметра :attr:"
"`~FileField.upload_to` это форматирование :func:`~time.strftime`; ``'%Y'`` "
"-- год из 4-х цифр, ``'%m'`` -- номер месяца из 2-х цифр и ``'%d'`` -- число "
"месяца из 2-х цифр. Если вы загрузили файл 15 января 2007, он будет сохранен "
"в каталоге ``/home/media/photos/2007/01/15``."

# 24a7aff69f894620bc484c8f0c57a76e
#: ../../ref/models/fields.txt:582
msgid ""
"If you wanted to retrieve the uploaded file's on-disk filename, or the "
"file's size, you could use the :attr:`~django.core.files.File.name` and :"
"attr:`~django.core.files.File.size` attributes respectively; for more "
"information on the available attributes and methods, see the :class:`~django."
"core.files.File` class reference and the :doc:`/topics/files` topic guide."
msgstr ""
"Если вам нужны название файла или его размер, используйте атрибуты :attr:"
"`~django.core.files.File.name` и :attr:`~django.core.files.File.size` "
"соответственно; больше информации о доступных методах и атрибутах вы найдете "
"в справке о :class:`~django.core.files.File` и разделе документации :doc:`/"
"topics/files`."

# 331bc9a31d734743b73ab865cccd49a2
#: ../../ref/models/fields.txt:590
msgid ""
"The file is saved as part of saving the model in the database, so the actual "
"file name used on disk cannot be relied on until after the model has been "
"saved."
msgstr ""
"Процесс сохранения файла часть процесса сохранения объекта, таким образом "
"имя файла сохраненного на диске не будет доступно, пока объект не будет "
"сохранен."

# 75e79999d24a4aabb4fffc2e9efbbe94
#: ../../ref/models/fields.txt:594
msgid ""
"The uploaded file's relative URL can be obtained using the :attr:`~django.db."
"models.fields.files.FieldFile.url` attribute. Internally, this calls the :"
"meth:`~django.core.files.storage.Storage.url` method of the underlying :"
"class:`~django.core.files.storage.Storage` class."
msgstr ""
"Что бы получить URL к загруженному файлу используйте атрибут :attr:`~django."
"db.models.fields.files.FieldFile.url`. При этом будет вызван метод :meth:"
"`~django.core.files.storage.Storage.url` класса :class:`~django.core.files."
"storage.Storage`."

# 4f30fb5c203440dd95125ae0c5fa2206
#: ../../ref/models/fields.txt:601
msgid ""
"Note that whenever you deal with uploaded files, you should pay close "
"attention to where you're uploading them and what type of files they are, to "
"avoid security holes. *Validate all uploaded files* so that you're sure the "
"files are what you think they are. For example, if you blindly let somebody "
"upload files, without validation, to a directory that's within your Web "
"server's document root, then somebody could upload a CGI or PHP script and "
"execute that script by visiting its URL on your site. Don't allow that."
msgstr ""
"Заметим, что при загрузке файлов, вы должны обращать внимание куда вы "
"загружаете файлы и какие типы файлов загружаются, что бы предотвратить "
"возможные уязвимости в защите системы. *Проверяйте все загружаемые файлы*. "
"Например, если вы разрешите загрузить файл без проверки в каталог, которая "
"обрабатывается сервером, кто-нибудь сможет загрузить CGI или PHP скрипт и "
"выполнить его посетив его URL на вашем сайте. Не допускайте это."

# 82d3e19145f149e1ba0b68d7a1b9bc17
#: ../../ref/models/fields.txt:609
msgid ""
"Also note that even an uploaded HTML file, since it can be executed by the "
"browser (though not by the server), can pose security threats that are "
"equivalent to XSS or CSRF attacks."
msgstr ""
"Так же заметим что это относится и к HTML файлам, так как они могу быть "
"выполнены в браузере(хоть и не на сервере), и нести угрозу XSS или CSRF "
"атаки."

# 62509adbe0414b92b2aae736e8e5cb68
#: ../../ref/models/fields.txt:613
msgid ""
"By default, :class:`FileField` instances are created as ``varchar(100)`` "
"columns in your database. As with other fields, you can change the maximum "
"length using the :attr:`~CharField.max_length` argument."
msgstr ""
"По-умолчанию, экземпляр :class:`FileField` создается как колонка ``varchar"
"(100)`` в базе данных. Как и с другими полями вы можете изменить "
"максимальную длину используя аргумент :attr:`~CharField.max_length`."

# d0fba97f8c144d3fbc44c789f00b1f70
#: ../../ref/models/fields.txt:618
msgid "FileField and FieldFile"
msgstr "FileField и FieldFile"

# 1652b28e48d24256abde753aa031246b
#: ../../ref/models/fields.txt:624
msgid ""
"When you access a :class:`~django.db.models.FileField` on a model, you are "
"given an instance of :class:`FieldFile` as a proxy for accessing the "
"underlying file. This class has several attributes and methods that can be "
"used to interact with file data:"
msgstr ""
"При доступе к :class:`~django.db.models.FileField` модели, вы получаете "
"экземпляр :class:`FieldFile` как \"proxy\" для работы с файлом. Этот класс "
"содержит несколько методов для работы с файлом:"

# 75e79999d24a4aabb4fffc2e9efbbe94
#: ../../ref/models/fields.txt:631
msgid ""
"A read-only property to access the file's relative URL by calling the :meth:"
"`~django.core.files.storage.Storage.url` method of the underlying :class:"
"`~django.core.files.storage.Storage` class."
msgstr ""
"read-only свойство для получения URL вызовом метода :meth:`~django.core."
"files.storage.Storage.url` класса :class:`~django.core.files.storage."
"Storage`."

# 00efa5f28acf40b390570cdf6e152350
#: ../../ref/models/fields.txt:637
msgid ""
"Behaves like the standard Python ``open()`` method and opens the file "
"associated with this instance in the mode specified by ``mode``."
msgstr ""
"Работает так же как и родной метод Python ``open()``, открывает файл "
"связанный с объектом в режиме определенном аргументом ``mode``."

# e2375f94a807447f9bbb555003b817b2
#: ../../ref/models/fields.txt:642
msgid ""
"Behaves like the standard Python ``file.close()`` method and closes the file "
"associated with this instance."
msgstr ""
"Работает так же как и метод ``file.close()`` в Python  и закрывает файл "
"связанный с объектом."

# 9461704bb51d499b89e444fb66f14211
#: ../../ref/models/fields.txt:647
msgid ""
"This method takes a filename and file contents and passes them to the "
"storage class for the field, then associates the stored file with the model "
"field. If you want to manually associate file data with :class:`~django.db."
"models.FileField` instances on your model, the ``save()`` method is used to "
"persist that file data."
msgstr ""
"Этот метод принимает имя файла и содержимое и передает его в экземпляр "
"класса \"storage\" этого поля, потом добавляет файл в модель. Если вы хотите "
"самостоятельно добавить содержимое файла в поле :class:`~django.db.models."
"FileField` вашей модели, метод ``save()`` то, что вам нужно."

# f875b0b4104c4415a1f0ddcacf846357
#: ../../ref/models/fields.txt:653
msgid ""
"Takes two required arguments: ``name`` which is the name of the file, and "
"``content`` which is an object containing the file's contents.  The optional "
"``save`` argument controls whether or not the instance is saved after the "
"file has been altered. Defaults to ``True``."
msgstr ""
"Принимает два аргумента: ``name`` -- название файла, и ``content`` -- "
"содержимое файла.  Дополнительный аргумент ``save`` указывает сохранять ли "
"объект после изменения поля. По-умолчанию -- ``True``."

# 5a35a656cac94d348b007fda814f4b32
#: ../../ref/models/fields.txt:658
msgid ""
"Note that the ``content`` argument should be an instance of :class:`django."
"core.files.File`, not Python's built-in file object. You can construct a :"
"class:`~django.core.files.File` from an existing Python file object like "
"this::"
msgstr ""
"Заметим, что аргумент ``content`` должен быть экземпляром :class:`django."
"core.files.File`, а не встроенный объект файла в Python. Вы можете создать "
"объект :class:`~django.core.files.File` из существующего объекта файла "
"Python::"

# 42648af5e1344238a58edab90f87bdb7
#: ../../ref/models/fields.txt:668
msgid "Or you can construct one from a Python string like this::"
msgstr "Или же создать из строки с содержимым файла::"

# 55163e17c41e43fcaba376b95531e153
#: ../../ref/models/fields.txt:673
msgid "For more information, see :doc:`/topics/files`."
msgstr "Подробности в :doc:`/topics/files`."

# db96c77494b542b3b68ff09250e383c3
#: ../../ref/models/fields.txt:677
msgid ""
"Deletes the file associated with this instance and clears all attributes on "
"the field. Note: This method will close the file if it happens to be open "
"when ``delete()`` is called."
msgstr ""
"Удаляет файл связанный с объектом и очищает все атрибуты поля. Заметка: этот "
"метод закрывает файл, если он был открыт во время вызова ``delete()``."

# 65dfde837435447191e53893a216728b
#: ../../ref/models/fields.txt:681
msgid ""
"The optional ``save`` argument controls whether or not the instance is saved "
"after the file has been deleted. Defaults to ``True``."
msgstr ""
"Дополнительный аргумент ``save`` указывает сохранять ли модель после "
"удаления файла. По-умолчанию -- ``True``."

# 5038e28aafea4691b6a7246d7217384b
#: ../../ref/models/fields.txt:684
msgid ""
"Note that when a model is deleted, related files are not deleted. If you "
"need to cleanup orphaned files, you'll need to handle it yourself (for "
"instance, with a custom management command that can be run manually or "
"scheduled to run periodically via e.g. cron)."
msgstr ""
"Обратите внимание, когда объект модели удаляется, связанные файлы не "
"удаляются. Если вам необходимо удалять их, делайте это самостоятельно "
"(например, используя команду запущенную через cron)."

# 385fd41490fb49c880e3f92d620bab25
#: ../../ref/models/fields.txt:692
msgid "``FilePathField``"
msgstr "``FilePathField``"

# 0585d29386c94d5ba1bf44d9f508d210
#: ../../ref/models/fields.txt:696
msgid ""
"A :class:`CharField` whose choices are limited to the filenames in a certain "
"directory on the filesystem. Has three special arguments, of which the first "
"is **required**:"
msgstr ""
"Поле :class:`CharField` значение которого ограничено именем файла из "
"определенного каталога. Принимает три дополнительных аргумента, первый из "
"них **обязателен**:"

# 87ebbe7c341b437da3babc01bf72b52c
#: ../../ref/models/fields.txt:702
msgid ""
"Required. The absolute filesystem path to a directory from which this :class:"
"`FilePathField` should get its choices. Example: ``\"/home/images\"``."
msgstr ""
"Обязательно. Абсолютный путь к каталогу, из которого :class:`FilePathField` "
"принимает значение. Например: ``\"/home/images\"``."

# 07530c2dcfef4f08802d4940560059b5
#: ../../ref/models/fields.txt:707
msgid ""
"Optional. A regular expression, as a string, that :class:`FilePathField` "
"will use to filter filenames. Note that the regex will be applied to the "
"base filename, not the full path. Example: ``\"foo.*\\.txt$\"``, which will "
"match a file called ``foo23.txt`` but not ``bar.txt`` or ``foo23.png``."
msgstr ""
"Необязательный. Регулярное выражение как строка, которое :class:"
"`FilePathField` использует как фильтр названий. Регулярное выражение "
"применяется к названию файла, а не к полному пути. Например: ``\"foo.*\\.txt$"
"\"``, пропустит ``foo23.txt`` но отфильтрует ``bar.txt`` или ``foo23.gif``."

# 5421eb38402143589395bf27d57d672c
#: ../../ref/models/fields.txt:714
msgid ""
"Optional. Either ``True`` or ``False``. Default is ``False``. Specifies "
"whether all subdirectories of :attr:`~FilePathField.path` should be included"
msgstr ""
"Необязательный. Принимает ``True`` или ``False``. По-умолчанию ``False``. "
"Определяет должны ли быть включены подкаталоги :attr:`~FilePathField.path`."

# 5421eb38402143589395bf27d57d672c
#: ../../ref/models/fields.txt:721
msgid ""
"Optional.  Either ``True`` or ``False``.  Default is ``True``.  Specifies "
"whether files in the specified location should be included.  Either this or :"
"attr:`~FilePathField.allow_folders` must be ``True``."
msgstr ""
"Необязательный. Принимает ``True`` или ``False``. По-умолчанию ``True``. "
"Определяет должны ли быть включены указанные подкаталоги. Этот параметр или :"
"attr:`~FilePathField.allow_folders` должен быть ``True``."

# 5421eb38402143589395bf27d57d672c
#: ../../ref/models/fields.txt:729
msgid ""
"Optional.  Either ``True`` or ``False``.  Default is ``False``.  Specifies "
"whether folders in the specified location should be included.  Either this "
"or :attr:`~FilePathField.allow_files` must be ``True``."
msgstr ""
"Необязательный. Принимает ``True`` или ``False``. По-умолчанию ``False``. "
"Определяет должны ли быть включены указанные подкаталоги. Этот параметр или :"
"attr:`~FilePathField.allow_files` должен быть ``True``."

# f874b74b1b98491c86ceda74f32a799b
#: ../../ref/models/fields.txt:734
msgid "Of course, these arguments can be used together."
msgstr "Конечно же можно использовать все три аргумента вместе."

# 1f2f5a551ea44eb1a6f3e279a0b38fab
#: ../../ref/models/fields.txt:736
msgid ""
"The one potential gotcha is that :attr:`~FilePathField.match` applies to the "
"base filename, not the full path. So, this example::"
msgstr ""
"Следует помнить, что :attr:`~FilePathField.match` применяется к имени файла, "
"а не абсолютному пути. Таким образом::"

# f17ceaa13f8f488185382de87d36d775
#: ../../ref/models/fields.txt:741
msgid ""
"...will match ``/home/images/foo.png`` but not ``/home/images/foo/bar.png`` "
"because the :attr:`~FilePathField.match` applies to the base filename (``foo."
"png`` and ``bar.png``)."
msgstr ""
"...соответствует ``/home/images/foo.png`` но не ``/home/images/foo/bar.png`` т."
"к. :attr:`~FilePathField.match` применяется к имени файла (``foo.png`` и "
"``bar.png``)."

# 2262ca133bee441584b0eece2e4a35a2
#: ../../ref/models/fields.txt:745
msgid ""
"By default, :class:`FilePathField` instances are created as ``varchar(100)`` "
"columns in your database. As with other fields, you can change the maximum "
"length using the :attr:`~CharField.max_length` argument."
msgstr ""
"По-умолчанию, экземпляр :class:`FilePathField` создается как колонка "
"``varchar(100)`` в базе данных. Как и с другими полями вы можете изменить "
"максимальную длину используя аргумент :attr:`~CharField.max_length`."

# 0d4b75c208d1453698b1f5da20114b1f
#: ../../ref/models/fields.txt:750
msgid "``FloatField``"
msgstr "``FloatField``"

# 0ff04ae1624148f0a2e3ca4e3f6cfa7e
#: ../../ref/models/fields.txt:754
msgid "A floating-point number represented in Python by a ``float`` instance."
msgstr "Число с плавающей точкой представленное объектом ``float``."

# 1a919f175dce4b58bae1e6ab899292b9
#: ../../ref/models/fields.txt:762
msgid ""
"The :class:`FloatField` class is sometimes mixed up with the :class:"
"`DecimalField` class. Although they both represent real numbers, they "
"represent those numbers differently. ``FloatField`` uses Python's ``float`` "
"type internally, while ``DecimalField`` uses Python's ``Decimal`` type. For "
"information on the difference between the two, see Python's documentation "
"for the :mod:`decimal` module."
msgstr ""
":class:`FloatField` иногда путают с :class:`DecimalField`. Хоть оба и "
"представляют вещественные числа, они делают это по разному. ``FloatField`` "
"использует тип ``float`` в Python, в то время как ``DecimalField`` "
"использует тип ``Decimal``. Подробности смотрите в документации  Python "
"модуля :mod:`decimal`."

# 468c1c14b7904a12b113fc543eeb7ac1
#: ../../ref/models/fields.txt:770
msgid "``ImageField``"
msgstr "``ImageField``"

# 3ec80fb0e2db41f083e3b6b0e83057eb
#: ../../ref/models/fields.txt:774
msgid ""
"Inherits all attributes and methods from :class:`FileField`, but also "
"validates that the uploaded object is a valid image."
msgstr ""
"Наследует все атрибуты и методы поля :class:`FileField`, но так же проверяет "
"является ли загруженный файл изображением."

# 9639abfecb544310851a7d1cdc2d0c6a
#: ../../ref/models/fields.txt:777
msgid ""
"In addition to the special attributes that are available for :class:"
"`FileField`, an :class:`ImageField` also has ``height`` and ``width`` "
"attributes."
msgstr ""
"В дополнение к атрибутам поля :class:`FileField` :class:`ImageField` "
"содержит так же ``height`` и ``width``."

# 10b8eef0943a4a728b3c189dea293653
#: ../../ref/models/fields.txt:780
msgid ""
"To facilitate querying on those attributes, :class:`ImageField` has two "
"extra optional arguments:"
msgstr ""
"Для определения этих аргументов :class:`ImageField` принимает дополнительные "
"аргументы:"

# 85ea5105c062407585681b79c585f52c
#: ../../ref/models/fields.txt:785
msgid ""
"Name of a model field which will be auto-populated with the height of the "
"image each time the model instance is saved."
msgstr ""
"Имя поля, которому автоматически будет присвоено значение высоты изображения "
"при каждом сохранении объекта."

# c661f625e1ac4d8c8fac23c59cac1992
#: ../../ref/models/fields.txt:790
msgid ""
"Name of a model field which will be auto-populated with the width of the "
"image each time the model instance is saved."
msgstr ""
"Имя поля, которому автоматически будет присвоено значение ширины изображения "
"при каждом сохранении объекта."

# 8f8a360c12304295a8be9d4c944007fb
#: ../../ref/models/fields.txt:793
msgid "Requires the `Python Imaging Library`_."
msgstr "Требуется `Python Imaging Library`_."

# 693103d12f804a60afad1589f7412835
#: ../../ref/models/fields.txt:797
msgid ""
"By default, :class:`ImageField` instances are created as ``varchar(100)`` "
"columns in your database. As with other fields, you can change the maximum "
"length using the :attr:`~CharField.max_length` argument."
msgstr ""
"По-умолчанию, экземпляр :class:`ImageField` создается как колонка ``varchar"
"(100)`` в базе данных. Как и с другими полями вы можете изменить "
"максимальную длину используя аргумент :attr:`~CharField.max_length`."

# bfd201dcf2f849ea938d4b5ed07c459f
#: ../../ref/models/fields.txt:802
msgid "``IntegerField``"
msgstr "``IntegerField``"

# 8ff59a1ad1714952be0166a7b1267e7c
#: ../../ref/models/fields.txt:806
msgid ""
"An integer. The default form widget for this field is a :class:`~django."
"forms.TextInput`."
msgstr "Число. Форма использует виджет :class:`~django.forms.TextInput`."

# c7e236a1ca364e4cb5bed0841e9a4938
#: ../../ref/models/fields.txt:810
msgid "``IPAddressField``"
msgstr "``IPAddressField``"

# 6f5c0727235843fdbd8d5b19c45c167c
#: ../../ref/models/fields.txt:814
msgid ""
"An IP address, in string format (e.g. \"192.0.2.30\"). The default form "
"widget for this field is a :class:`~django.forms.TextInput`."
msgstr ""
"IP адрес в виде строки(например, \"192.0.2.30\"). Форма использует виджет  :"
"class:`~django.forms.TextInput`."

# 10efef2ebb6146259b432f82eea2a6ce
#: ../../ref/models/fields.txt:818
msgid "``GenericIPAddressField``"
msgstr "``GenericIPAddressField``"

# 9e28b938238a4ccbabfb06fd1019df22
#: ../../ref/models/fields.txt:824
msgid ""
"An IPv4 or IPv6 address, in string format (e.g. ``192.0.2.30`` or "
"``2a02:42fe::4``). The default form widget for this field is a :class:"
"`~django.forms.TextInput`."
msgstr ""
"Адрес IPv4 или IPv6 в виде строки (например, ``192.0.2.30`` или "
"``2a02:42fe::4``). Форма использует виджет :class:`~django.forms.TextInput`."

# 8f11f506da0f4f1bacec1998c5c225a3
#: ../../ref/models/fields.txt:828
msgid ""
"The IPv6 address normalization follows :rfc:`4291#section-2.2` section 2.2, "
"including using the IPv4 format suggested in paragraph 3 of that section, "
"like ``::ffff:192.0.2.0``. For example, ``2001:0::0:01`` would be normalized "
"to ``2001::1``, and ``::ffff:0a0a:0a0a`` to ``::ffff:10.10.10.10``. All "
"characters are converted to lowercase."
msgstr ""
"Преобразование адреса IPv6 происходит в соответствии с :rfc:"
"`4291#section-2.2` раздел 2.2, включая рекомендации по форматированию IPv4 в "
"параграфа 3 этого раздела, таких как ``::ffff:192.0.2.0``. Например, "
"``2001:0::0:01`` будет преобразован ``2001::1``, а ``::ffff:0a0a:0a0a`` в "
"``::ffff:10.10.10.10``. Все символы будут преобразованы в нижний регистр."

# 0083f498c8b8437ebd28a6d107af6468
#: ../../ref/models/fields.txt:836
msgid ""
"Limits valid inputs to the specified protocol. Accepted values are "
"``'both'`` (default), ``'IPv4'`` or ``'IPv6'``. Matching is case insensitive."
msgstr ""
"Определяет формат IP адреса. Принимает значение ``'both'`` (по умолчанию), "
"``'IPv4'`` или ``'IPv6'``. Значение не чувствительно регистру."

# 05daf697f56548e3a921c39c24c664a4
#: ../../ref/models/fields.txt:842
msgid ""
"Unpacks IPv4 mapped addresses like ``::ffff:192.0.2.1``. If this option is "
"enabled that address would be unpacked to ``192.0.2.1``. Default is "
"disabled. Can only be used when ``protocol`` is set to ``'both'``."
msgstr ""
"Преобразует адрес IPv4. Если эта опция установлена, адрес ``::"
"ffff::192.0.2.1`` будет преобразован в ``192.0.2.1``. По-умолчанию "
"отключена. Может быть использовано если ``protocol`` установлен в ``'both'``."

# 6606f41ad49146eaa1940d1640714d49
#: ../../ref/models/fields.txt:848
msgid "``NullBooleanField``"
msgstr "``NullBooleanField``"

# 7a370dcd7f804de19fa3cd2daf834398
#: ../../ref/models/fields.txt:852
msgid ""
"Like a :class:`BooleanField`, but allows ``NULL`` as one of the options. Use "
"this instead of a :class:`BooleanField` with ``null=True``. The default form "
"widget for this field is a :class:`~django.forms.NullBooleanSelect`."
msgstr ""
"Как и :class:`BooleanField`, но принимает значение ``NULL``. Используете его "
"вместо :class:`BooleanField` с ``null=True``. Форма использует виджет :class:"
"`~django.forms.NullBooleanSelect`."

# 230cf89377a14151bd8eeedfc5299dac
#: ../../ref/models/fields.txt:857
msgid "``PositiveIntegerField``"
msgstr "``PositiveIntegerField``"

# 4068d3aefae14d06afca8debfa591e7c
#: ../../ref/models/fields.txt:861
msgid ""
"Like an :class:`IntegerField`, but must be either positive or zero (`0`). "
"The value `0` is accepted for backward compatibility reasons."
msgstr ""
"Как и поле :class:`IntegerField`, но значение должно быть больше или равно "
"нулю (`0`). Значение `0` принимается для обратной совместимости."

# 8aeb8e6539d3496fb8386a1d98e107be
#: ../../ref/models/fields.txt:865
msgid "``PositiveSmallIntegerField``"
msgstr "``PositiveSmallIntegerField``"

# 45c7cd2886f148ffa8bd561ab732e191
#: ../../ref/models/fields.txt:869
msgid ""
"Like a :class:`PositiveIntegerField`, but only allows values under a certain "
"(database-dependent) point."
msgstr ""
"Как и поле :class:`PositiveIntegerField`, но принимает значения в "
"определенном диапазоне(зависит от типа базы данных)."

# 528a021487b44adba07404ac592151b9
#: ../../ref/models/fields.txt:873
msgid "``SlugField``"
msgstr "``SlugField``"

# 1614324341bc4c67b2bb5e4cde36f595
#: ../../ref/models/fields.txt:877
msgid ""
":term:`Slug` is a newspaper term. A slug is a short label for something, "
"containing only letters, numbers, underscores or hyphens. They're generally "
"used in URLs."
msgstr ""
":term:`Slug` -- газетный термин. \"Slug\" -- это короткое название-метка, "
"которое содержит только буквы, числа, нижнее подчеркивание или дефис. В "
"основном используются в URL."

# db6c0ab23a6e4de5acb87c5682e734ec
#: ../../ref/models/fields.txt:881
msgid ""
"Like a CharField, you can specify :attr:`~CharField.max_length` (read the "
"note about database portability and :attr:`~CharField.max_length` in that "
"section, too). If :attr:`~CharField.max_length` is not specified, Django "
"will use a default length of 50."
msgstr ""
"Как и для ``CharField``, можно указать :attr:`~CharField.max_length` "
"(упомянутые особенности работы с различными типами баз данных так же "
"актуальны). Если :attr:`~CharField.max_length` не указан, Django будет "
"использовать значение 50."

# 8c5fbaf0c4b742e39ceb1cf2887dfb18
#: ../../ref/models/fields.txt:886
msgid "Implies setting :attr:`Field.db_index` to ``True``."
msgstr ""
"Устанавливает :attr:`Field.db_index` в ``True``, если аргумент явно не "
"указан."

# b38d4980701c47beaa8beabae7d8214a
#: ../../ref/models/fields.txt:888
msgid ""
"It is often useful to automatically prepopulate a SlugField based on the "
"value of some other value.  You can do this automatically in the admin "
"using :attr:`~django.contrib.admin.ModelAdmin.prepopulated_fields`."
msgstr ""
"Обычно значение SlugField создается основываясь на каком-то другом значении"
"(например, название статьи). Это может работать автоматически в интерфейсе "
"администрации благодаря параметру :attr:`~django.contrib.admin.ModelAdmin."
"prepopulated_fields`."

# c96a689127ac4b0aa63cccadb6f38ea2
#: ../../ref/models/fields.txt:893
msgid "``SmallIntegerField``"
msgstr "``SmallIntegerField``"

# 8f4d2afa4d564e20bac96947ab99aa55
#: ../../ref/models/fields.txt:897
msgid ""
"Like an :class:`IntegerField`, but only allows values under a certain "
"(database-dependent) point."
msgstr ""
"Как и поле :class:`IntegerField`, но принимает значения в определенном "
"диапазоне(зависит от типа базы данных)."

# 7e9ffe6139cf4afb91b92e2de31373ab
#: ../../ref/models/fields.txt:901
msgid "``TextField``"
msgstr "``TextField``"

# 1db7d2c5db7a48b5bebc5b6759ba332c
#: ../../ref/models/fields.txt:905
msgid ""
"A large text field. The default form widget for this field is a :class:"
"`~django.forms.Textarea`."
msgstr ""
"Большое текстовое поле. Форма использует виджет :class:`~django.forms."
"Textarea`."

# b0cfac2022804d58a432f9c0e98ff372
#: ../../ref/models/fields.txt:910
msgid ""
"If you are using this field with MySQLdb 1.2.1p2 and the ``utf8_bin`` "
"collation (which is *not* the default), there are some issues to be aware "
"of. Refer to the :ref:`MySQL database notes <mysql-collation>` for details."
msgstr ""
"Если вы используете это поле с MySQLdb 1.2.1p2 и ``utf8_bin`` \"collation"
"\" (которое *не* является значением по умолчанию), могут быть некоторые "
"проблемы. Смотрите :ref:`советы при работе с MySQL <mysql-collation>` для "
"подробностей."

# 4c7cf6a35a414a7780a52d9b3c2739ef
#: ../../ref/models/fields.txt:916
msgid "``TimeField``"
msgstr "``TimeField``"

# ff4c3ad454724348a3a62310a8799add
#: ../../ref/models/fields.txt:920
msgid ""
"A time, represented in Python by a ``datetime.time`` instance. Accepts the "
"same auto-population options as :class:`DateField`."
msgstr ""
"Время, представленное объектом ``datetime.time`` Python. Принимает те же "
"аргументы что и :class:`DateField`."

# a7638b00dcb44a02b5863c4d4ef05846
#: ../../ref/models/fields.txt:923
msgid ""
"The default form widget for this field is a :class:`~django.forms."
"TextInput`. The admin adds some JavaScript shortcuts."
msgstr ""
"Форма использует виджет :class:`~django.forms.TextInput`. Интерфейс "
"администратора так же использует немного JavaScript. "

# 74494961615e41c9989f9e307c7d82af
#: ../../ref/models/fields.txt:927
msgid "``URLField``"
msgstr "``URLField``"

# 2d93325aec6141b6a4743fda17f75170
#: ../../ref/models/fields.txt:931
msgid "A :class:`CharField` for a URL."
msgstr "Поле :class:`CharField` для URL."

# c068c988bff24970967a42210d75a0d7
#: ../../ref/models/fields.txt:935
msgid ""
"Like all :class:`CharField` subclasses, :class:`URLField` takes the "
"optional :attr:`~CharField.max_length` argument. If you don't specify :attr:"
"`~CharField.max_length`, a default of 200 is used."
msgstr ""
"Как подкласс :class:`CharField` :class:`URLField` принимает необязательный "
"аргумент :attr:`~CharField.max_length`. Если вы не укажите :attr:`~CharField."
"max_length`, будет использовано значение -- 200."

# 03206900d94d446fb1ae6f9df899804b
#: ../../ref/models/fields.txt:941
msgid ""
"The current value of the field will be displayed as a clickable link above "
"the input widget."
msgstr "Текущее значение будет отображаться как ссылка под полем формы."

# b2d5ca194bdb4413a0fbd07f0c7a8e7a
#: ../../ref/models/fields.txt:946
msgid "Relationship fields"
msgstr "Поля отношений"

# d23c120ec8db4e33b3c52534445f0ed2
#: ../../ref/models/fields.txt:953
msgid "Django also defines a set of fields that represent relations."
msgstr ""
"Django предоставляет набор полей для определения связей между моделями."

# ee73d6cc498c49ee95019db656bf6e07
#: ../../ref/models/fields.txt:958
msgid "``ForeignKey``"
msgstr "``ForeignKey``"

# d0089dc5c247434dbf435d7eae829b45
#: ../../ref/models/fields.txt:962
msgid ""
"A many-to-one relationship. Requires a positional argument: the class to "
"which the model is related."
msgstr ""
"Связь многое-к-одному. Принимает позиционный аргумент: класс связанной "
"модели."

# e8c653b65641489986a454054ebbfc2a
#: ../../ref/models/fields.txt:967
msgid ""
"To create a recursive relationship -- an object that has a many-to-one "
"relationship with itself -- use ``models.ForeignKey('self')``."
msgstr ""
"Для создания рекурсивной связи -- объект со связью многое-к-одному на себя "
"-- используйте ``models.ForeignKey('self')``."

# 9748ca87459c4f1282fbdd6c2a122cbd
#: ../../ref/models/fields.txt:972
msgid ""
"If you need to create a relationship on a model that has not yet been "
"defined, you can use the name of the model, rather than the model object "
"itself::"
msgstr ""
"Если вам необходимо добавить связь на модель, которая еще не определена, вы "
"можете использовать имя модели вместо класса::"

# 92f857e28da04bc9b798694cbc8002cc
#: ../../ref/models/fields.txt:982
msgid ""
"To refer to models defined in another application, you can explicitly "
"specify a model with the full application label. For example, if the "
"``Manufacturer`` model above is defined in another application called "
"``production``, you'd need to use::"
msgstr ""
"Для связи на модель из другого приложения используйте название модели и "
"приложения. Например, если модель ``Manufacturer`` находится в приложении "
"``production``, используйте::"

# 11f402d534ce46c893bec481886fcf74
#: ../../ref/models/fields.txt:990
msgid ""
"This sort of reference can be useful when resolving circular import "
"dependencies between two applications."
msgstr ""
"Такой способ позволяет создать циклическую зависимость между моделями из "
"разных приложений."

# 7cff833dae4c44f099057320a9e12dc4
#: ../../ref/models/fields.txt:993
msgid ""
"A database index is automatically created on the ``ForeignKey``. You can "
"disable this by setting :attr:`~Field.db_index` to ``False``.  You may want "
"to avoid the overhead of an index if you are creating a foreign key for "
"consistency rather than joins, or if you will be creating an alternative "
"index like a partial or multiple column index."
msgstr ""
"В базе данных автоматом создается индекс для ``ForeignKey``. Можно указать "
"для :attr:`~Field.db_index` ``False``, что бы отключить такое поведение. Это "
"может пригодиться, если внешний ключ используется для согласованности "
"данных, а не объединения(join) в запросах, или вы хотите самостоятельно "
"создать альтернативный индекс или индекс на несколько колонок."

# 02d578ada9c4485b98e2f47c12adc0ac
# dcce012faebf4d0396e2b2a96dd8ec51
#: ../../ref/models/fields.txt:1000 ../../ref/models/fields.txt:1127
msgid "Database Representation"
msgstr "Представление в базе данных"

# b474d05aa81e4e9487e6271a03138ee2
#: ../../ref/models/fields.txt:1002
msgid ""
"Behind the scenes, Django appends ``\"_id\"`` to the field name to create "
"its database column name. In the above example, the database table for the "
"``Car`` model will have a ``manufacturer_id`` column. (You can change this "
"explicitly by specifying :attr:`~Field.db_column`) However, your code should "
"never have to deal with the database column name, unless you write custom "
"SQL. You'll always deal with the field names of your model object."
msgstr ""
"За кулисами, Django добавляет ``\"_id\"`` к названию поля для создания "
"названия колонки. В примере выше, таблица для модели ``Car`` будет содержать "
"колонку ``manufacturer_id``. (Такое поведение можно изменить указав "
"аргумент :attr:`~Field.db_column`) Хотя, ваш код никогда не должен "
"использовать названий колонок, если только вы не используете чистый SQL. Вы "
"всегда будете использовать названия полей модели."

# 4182db376f8a4f9484e745cb148b4499
# 05c6b1fc246e43cb9664c3ec9be7e5fe
#: ../../ref/models/fields.txt:1012 ../../ref/models/fields.txt:1141
msgid "Arguments"
msgstr "Параметры"

# 5556ec4080254de79724c440589044ee
#: ../../ref/models/fields.txt:1014
msgid ""
":class:`ForeignKey` accepts an extra set of arguments -- all optional -- "
"that define the details of how the relation works."
msgstr ""
":class:`ForeignKey` принимает дополнительные аргументы -- все не обязательны "
"-- которые определяют как должна работать связь."

# ce6c861277f94919b621092bfeaa6626
#: ../../ref/models/fields.txt:1019
msgid ""
"A dictionary of lookup arguments and values (see :doc:`/topics/db/queries`) "
"that limit the available admin or ModelForm choices for this object. Use "
"this with functions from the Python ``datetime`` module to limit choices of "
"objects by date. For example::"
msgstr ""
"Словарь параметров для фильтрации (смотрите :doc:`/topics/db/queries`), "
"которые ограничивают множество связанных объектов, отображаемых в воле "
"формы. Используйте функции модуля Python ``datetime`` что бы ограничить "
"множество по дате. Например::"

# 2a489537c2c04f0a84cb70789a8cc31d
#: ../../ref/models/fields.txt:1026
msgid ""
"only allows the choice of related objects with a ``pub_date`` before the "
"current date to be chosen."
msgstr "позволяет выбирать связанные объекты с ``pub_date`` до текущей даты."

# f2f109ca071141c79cd3d6e9527976b8
#: ../../ref/models/fields.txt:1029
msgid ""
"Instead of a dictionary this can also be a :class:`~django.db.models.Q` "
"object for more :ref:`complex queries <complex-lookups-with-q>`. However, if "
"``limit_choices_to`` is a :class:`~django.db.models.Q` object then it will "
"only have an effect on the choices available in the admin when the field is "
"not listed in ``raw_id_fields`` in the ``ModelAdmin`` for the model."
msgstr ""
"Вместо словаря можете использовать объект :class:`~django.db.models.Q` для :"
"ref:`сложных запросов <complex-lookups-with-q>`. Однако, если "
"``limit_choices_to`` объект :class:`~django.db.models.Q`, он будет "
"использован в интерфейсе администратора только, если поле не находится в "
"``raw_id_fields`` класса ``ModelAdmin`` для этой модели."

# 55230a57e9df458e9ef33a0b029aa87c
#: ../../ref/models/fields.txt:1037
msgid ""
"The name to use for the relation from the related object back to this one. "
"See the :ref:`related objects documentation <backwards-related-objects>` for "
"a full explanation and example. Note that you must set this value when "
"defining relations on :ref:`abstract models <abstract-base-classes>`; and "
"when you do so :ref:`some special syntax <abstract-related-name>` is "
"available."
msgstr ""
"Название, используемое для обратной связи от связанной модели. Ищите "
"подробности и примеры :ref:`раздел о связанных объектах <backwards-related-"
"objects>`. Заметим, что вы должны определить этот параметр для поля в :ref:"
"`абстрактной модели <abstract-base-classes>`; при это можно использовать :"
"ref:`некоторые дополнительные возможности <abstract-related-name>`."

# 743fb6f6f76f46b68bad10893d0baf37
#: ../../ref/models/fields.txt:1044
msgid ""
"If you'd prefer Django not to create a backwards relation, set "
"``related_name`` to ``'+'`` or end it with ``'+'``. For example, this will "
"ensure that the ``User`` model won't have a backwards relation to this "
"model::"
msgstr ""
"Если вы не хотите что бы Django создавал обратную связь, установите "
"``related_name`` в ``'+'`` или добавьте в конце ``'+'``. Например, такой код "
"создаст связь, но не добавить обратную связь в модель ``User``::"

# 67aeaa8e376a4995b86f097e7174523c
#: ../../ref/models/fields.txt:1053
msgid ""
"The field on the related object that the relation is to. By default, Django "
"uses the primary key of the related object."
msgstr ""
"Поле связанной модели, которое используется для создания связи между "
"таблицами. По-умолчанию, Django использует первичный ключ."

# 9f3747827cfa4f0f9a5c92df3a660289
#: ../../ref/models/fields.txt:1058
msgid ""
"When an object referenced by a :class:`ForeignKey` is deleted, Django by "
"default emulates the behavior of the SQL constraint ``ON DELETE CASCADE`` "
"and also deletes the object containing the ``ForeignKey``. This behavior can "
"be overridden by specifying the :attr:`on_delete` argument. For example, if "
"you have a nullable :class:`ForeignKey` and you want it to be set null when "
"the referenced object is deleted::"
msgstr ""
"Когда объект, на который ссылается :class:`ForeignKey`, удаляется, Django по-"
"умолчанию повторяет поведение ограничения ``ON DELETE CASCADE`` в SQL и "
"удаляет объекты содержащие ``ForeignKey``. Такое поведение может быть "
"переопределено параметром :attr:`on_delete`. Например, если ваше поле :class:"
"`ForeignKey` может содержать ``NULL`` и вы хотите, что бы оно "
"устанавливалось в ``NULL``  после удаления связанного объекта::"

# 3d652d7d0a674ee3a3e5644c4ccb622f
#: ../../ref/models/fields.txt:1067
msgid ""
"The possible values for :attr:`~ForeignKey.on_delete` are found in :mod:"
"`django.db.models`:"
msgstr ""
"Возможные значения для :attr:`~ForeignKey.on_delete` находятся в :mod:"
"`django.db.models`:"

# 718ffd92a1324a128bc588f9eaab0847
#: ../../ref/models/fields.txt:1072
msgid "Cascade deletes; the default."
msgstr "Каскадное удаление, значение по умолчанию."

# 9c414319e02044d7bb5d1c6b84f5330c
#: ../../ref/models/fields.txt:1076
msgid ""
"Prevent deletion of the referenced object by raising :exc:`~django.db.models."
"ProtectedError`, a subclass of :exc:`django.db.IntegrityError`."
msgstr ""
"Препятствует удалению связанного объекта вызывая исключение :exc:`django.db."
"models.ProtectedError`(подкласс :exc:`django.db.IntegrityError`)."

# a6428fdb07584ab190ee6415f0aa35ac
#: ../../ref/models/fields.txt:1082
msgid ""
"Set the :class:`ForeignKey` null; this is only possible if :attr:`~Field."
"null` is ``True``."
msgstr ""
"Устанавливает :class:`ForeignKey` в ``NULL``; возможно только если :attr:"
"`null` равен ``True``."

# 62a9d7a56451469480a62c4f0caff3d1
#: ../../ref/models/fields.txt:1087
msgid ""
"Set the :class:`ForeignKey` to its default value; a default for the :class:"
"`ForeignKey` must be set."
msgstr ""
"Устанавливает :class:`ForeignKey` в значение по умолчанию; значение по-"
"умолчанию должно быть указано для :class:`ForeignKey`."

# 2b16266adda24ffc835673f59757fa69
#: ../../ref/models/fields.txt:1092
msgid ""
"Set the :class:`ForeignKey` to the value passed to :func:`~django.db.models."
"SET()`, or if a callable is passed in, the result of calling it. In most "
"cases, passing a callable will be necessary to avoid executing queries at "
"the time your models.py is imported::"
msgstr ""
"Устанавливает :class:`ForeignKey` в значение указанное в :func:`~django.db."
"models.SET()`. Если указан выполняемый объект, результат его выполнения. "
"Вызываемый объект можно использовать, что бы избежать запросов во время "
"импорта models.py::"

# ec245c0521ea4cd0b673d172b0019256
#: ../../ref/models/fields.txt:1106
msgid ""
"Take no action. If your database backend enforces referential integrity, "
"this will cause an :exc:`~django.db.IntegrityError` unless you manually add "
"a SQL ``ON DELETE`` constraint to the database field (perhaps using :ref:"
"`initial sql<initial-sql>`)."
msgstr ""
"Ничего не делать. Если используемый тип базы данных следит за целостностью "
"связей, будет вызвано исключение :exc:`~django.db.IntegrityError`, за "
"исключением, когда вы самостоятельно добавите  SQL правило ``ON DELETE`` для "
"поля таблицы (возможно используя :ref:`загрузочный sql<initial-sql>`)."

# ea27a02a3b6c43f4bbd64075e142ad5f
#: ../../ref/models/fields.txt:1114
msgid "``ManyToManyField``"
msgstr "``ManyToManyField``"

# c3ebc38f2b4f4ea6b5c424b4c1912bd3
#: ../../ref/models/fields.txt:1118
msgid ""
"A many-to-many relationship. Requires a positional argument: the class to "
"which the model is related. This works exactly the same as it does for :"
"class:`ForeignKey`, including all the options regarding :ref:`recursive "
"<recursive-relationships>` and :ref:`lazy <lazy-relationships>` "
"relationships."
msgstr ""
"Связь многое-ко-многому. Принимает позиционный аргумент: класс связанной "
"модели. Работает так же как и :class:`ForeignKey`, включая :ref:`рекурсивную "
"<recursive-relationships>` и :ref:`\"ленивую\" <lazy-relationships>` связь."

# 8a94266df21741b6837ccd7776766155
#: ../../ref/models/fields.txt:1123
msgid ""
"Related objects can be added, removed, or created with the field's :class:"
"`~django.db.models.fields.related.RelatedManager`."
msgstr ""
"Связанные объекты могу быть добавлены, удалены или созданы с помощью :class:"
"`~django.db.models.fields.related.RelatedManager`."

# a20b2447d01a493eb260a80cf11a1b00
#: ../../ref/models/fields.txt:1129
msgid ""
"Behind the scenes, Django creates an intermediary join table to represent "
"the many-to-many relationship. By default, this table name is generated "
"using the name of the many-to-many field and the name of the table for the "
"model that contains it. Since some databases don't support table names above "
"a certain length, these table names will be automatically truncated to 64 "
"characters and a uniqueness hash will be used. This means you might see "
"table names like ``author_books_9cdf4``; this is perfectly normal.  You can "
"manually provide the name of the join table using the :attr:"
"`~ManyToManyField.db_table` option."
msgstr ""
"Django самостоятельно создаст промежуточную таблицу для хранения связи "
"многое-ко-многим. По-умолчанию, название этой таблицы создается из названия "
"поля и связанной модели. Так как некоторые базы данных не поддерживают "
"длинные названия таблиц, оно будет обрезано до 64 символов и будет добавлен "
"уникальный хэш. Это означает что вы можете увидеть такие названия таблиц "
"``author_books_9cdf4``; это нормально. Вы можете указать название "
"промежуточной таблицы используя параметр :attr:`~ManyToManyField.db_table`."

# 0e254819a98c42cb8b969ecc2d13d268
#: ../../ref/models/fields.txt:1143
msgid ""
":class:`ManyToManyField` accepts an extra set of arguments -- all optional "
"-- that control how the relationship functions."
msgstr ""
":class:`ManyToManyField` принимает дополнительные аргументы -- все не "
"обязательны -- которые определяют ка должна работать связь."

# 331f6897a2a94821b03a0e671bc2fb0e
#: ../../ref/models/fields.txt:1148
msgid "Same as :attr:`ForeignKey.related_name`."
msgstr "Аналогично :attr:`ForeignKey.related_name`."

# 2c12b6fdc2e44856a0c012e835baa32d
#: ../../ref/models/fields.txt:1150
msgid ""
"If you have more than one ``ManyToManyField`` pointing to the same model and "
"want to suppress the backwards relations, set each ``related_name`` to a "
"unique value ending with ``'+'``::"
msgstr ""
"Если у вас несколько ``ManyToManyField`` указывающих на одну модель и хотите "
"избежать создания обратных связей, укажите в ``related_name`` уникальное "
"значение с ``'+'`` в конце::"

# 28a9ed874c5544099722db8de0cd60b4
#: ../../ref/models/fields.txt:1159
msgid "Same as :attr:`ForeignKey.limit_choices_to`."
msgstr "Аналогично :attr:`ForeignKey.limit_choices_to`."

# 386c14006cfe42008e9238ace5584383
#: ../../ref/models/fields.txt:1161
msgid ""
"``limit_choices_to`` has no effect when used on a ``ManyToManyField`` with a "
"custom intermediate table specified using the :attr:`~ManyToManyField."
"through` parameter."
msgstr ""
"``limit_choices_to``не работает для ``ManyToManyField`` переопределенной "
"через :attr:`~ManyToManyField.through` промежуточной моделью."

# 5a21d4f19c8e4e88951c5900ddb81fa4
#: ../../ref/models/fields.txt:1167
msgid ""
"Only used in the definition of ManyToManyFields on self. Consider the "
"following model::"
msgstr "Используется только при рекурсивной связи. Например, есть модель::"

# f68ae1c4697d459c908fd5376ff44708
#: ../../ref/models/fields.txt:1173
msgid ""
"When Django processes this model, it identifies that it has a :class:"
"`ManyToManyField` on itself, and as a result, it doesn't add a "
"``person_set`` attribute to the ``Person`` class. Instead, the :class:"
"`ManyToManyField` is assumed to be symmetrical -- that is, if I am your "
"friend, then you are my friend."
msgstr ""
"Загружая эту модель Django определяет, что она содержит :class:"
"`ManyToManyField` указывающее на себя, и не добавляет атрибут ``person_set`` "
"классу модели ``Person``. Вместо этого подразумевается, что :class:"
"`ManyToManyField`симметрично  -- то есть, если я твой друг, то и ты мне друг."

# 668954eee40f4282b0b11888c00c6afa
#: ../../ref/models/fields.txt:1179
msgid ""
"If you do not want symmetry in many-to-many relationships with ``self``, "
"set :attr:`~ManyToManyField.symmetrical` to ``False``. This will force "
"Django to add the descriptor for the reverse relationship, allowing :class:"
"`ManyToManyField` relationships to be non-symmetrical."
msgstr ""
"Если вам не нужна симметричность для связи многое-ко-многим к ``self``, "
"установите :attr:`~ManyToManyField.symmetrical` в ``False``. Это заставит "
"Django добавить дескриптор для обратной связи позволяя :class:"
"`ManyToManyField` быть не симетричным."

# 9dc8fd04bc744848912b63d9b3632b1a
#: ../../ref/models/fields.txt:1186
msgid ""
"Django will automatically generate a table to manage many-to-many "
"relationships. However, if you want to manually specify the intermediary "
"table, you can use the :attr:`~ManyToManyField.through` option to specify "
"the Django model that represents the intermediate table that you want to use."
msgstr ""
"Django автоматически создает промежуточную таблицу для хранения связи. "
"Однако, если вы хотите самостоятельно определить промежуточную таблицу, "
"используйте параметр :attr:`~ManyToManyField.through` указав модель Django, "
"которая будет хранить связь между моделями."

# 0845754cb225453d86c8838da74774fc
#: ../../ref/models/fields.txt:1192
msgid ""
"The most common use for this option is when you want to associate :ref:"
"`extra data with a many-to-many relationship <intermediary-manytomany>`."
msgstr ""
"Обычно используют для :ref:`хранения дополнительных данных <intermediary-"
"manytomany>`."

# 3fe1e19d86be4840a482c7d645842ccd
#: ../../ref/models/fields.txt:1198
msgid ""
"The name of the table to create for storing the many-to-many data. If this "
"is not provided, Django will assume a default name based upon the names of: "
"the table for the model defining the relationship and the name of the field "
"itself."
msgstr ""
"Имя промежуточной таблицы для хранения связей многое-ко-многим. Если не "
"указан, Django самостоятельно создаст название по умолчанию используя "
"название таблицы определяющей связь и название поля."

# 13a32ac5c4184542b884d2bb36eb12b1
#: ../../ref/models/fields.txt:1206
msgid "``OneToOneField``"
msgstr "``OneToOneField``"

# 3908cd10d0684bb4b068b1d79e67c23c
#: ../../ref/models/fields.txt:1210
msgid ""
"A one-to-one relationship. Conceptually, this is similar to a :class:"
"`ForeignKey` with :attr:`unique=True <Field.unique>`, but the \"reverse\" "
"side of the relation will directly return a single object."
msgstr ""
"Связь один-к-одному. Работает так же, как и :class:`ForeignKey` с :attr:"
"`unique=True <Field.unique>`, но \"обратная\" связь возвращает один объект."

# a44a448d3b3c42b29b3e3ed60d91d96e
#: ../../ref/models/fields.txt:1214
msgid ""
"This is most useful as the primary key of a model which \"extends\" another "
"model in some way; :ref:`multi-table-inheritance` is implemented by adding "
"an implicit one-to-one relation from the child model to the parent model, "
"for example."
msgstr ""
"В основном применяется как первичный ключ модели, которая \"расширяет\" "
"другую модель. Например, :ref:`multi-table-inheritance` работает через "
"неявное добавление связи один-к-одному от дочерней модели к родительской."

# 3294d5281bf14f96887346600ffc2b6d
#: ../../ref/models/fields.txt:1219
msgid ""
"One positional argument is required: the class to which the model will be "
"related. This works exactly the same as it does for :class:`ForeignKey`, "
"including all the options regarding :ref:`recursive <recursive-"
"relationships>` and :ref:`lazy <lazy-relationships>` relationships."
msgstr ""
"Принимает обязательный позиционный аргумент: класс связанной модели. "
"Работает так же как и :class:`ForeignKey`, включая :ref:`рекурсивную "
"<recursive-relationships>` и :ref:`\"ленивую\" <lazy-relationships>` связь."

# d6506538d1bc4daf9348d818541abf56
#: ../../ref/models/fields.txt:1226
msgid ""
"Additionally, ``OneToOneField`` accepts all of the extra arguments accepted "
"by :class:`ForeignKey`, plus one extra argument:"
msgstr ""
"Так же ``OneToOneField`` принимает все дополнительные параметры принимаемые :"
"class:`ForeignKey`, и еще один дополнительный:"

# 0c2d3028dd88429d93ad8996b26e000f
#: ../../ref/models/fields.txt:1231
msgid ""
"When ``True`` and used in a model which inherits from another (concrete) "
"model, indicates that this field should be used as the link back to the "
"parent class, rather than the extra ``OneToOneField`` which would normally "
"be implicitly created by subclassing."
msgstr ""
"При ``True`` и связанной модели, которая наследуется от другой модели, "
"определяет, что должна сохраняться связь на родительскую модель, а не поле "
"``OneToOneField`` дочерней модели, которое используется для организации "
"наследования моделей."

# eac78538e7a943089aabb4f7e287fcfe
#~ msgid ""
#~ "When using the Oracle database backend, the ``null=True`` option will be "
#~ "coerced for string-based fields that have the empty string as a possible "
#~ "value, and the value ``NULL`` will be stored to denote the empty string."
#~ msgstr ""
#~ "Базу данных Oracle принуждает использовать параметр ``null=True`` для "
#~ "полей содержащих пустые строки, т.к. пустая строка в любом случае будет "
#~ "сохранена как ``NULL``."

# 3db863fff97b49298c864bb69172dfd0
#~ msgid ""
#~ "An iterable (e.g., a list or tuple) of 2-tuples to use as choices for "
#~ "this field."
#~ msgstr ""
#~ "Итератор (например, список или кортеж) двух элементных кортежей, который "
#~ "представляет возможные значения для поля."

# a476634468b1440e933e3ffba538bad2
#~ msgid ""
#~ "If this is given, Django's admin will use a select box instead of the "
#~ "standard text field and will limit choices to the choices given."
#~ msgstr ""
#~ "Если этот параметр указан, Django будет использовать `select` вместо "
#~ "обычно поля ввода с указанными значениями."

# 989256f596904c15896f92a0c36c274d
#~ msgid "A choices list looks like this::"
#~ msgstr "Список выбора выглядит следующим образом::"

# e8791684c6a141409f8d8562962d00a1
#~ msgid "The choices list can be defined either as part of your model class::"
#~ msgstr "Список выбора может быть определен как часть класса модели::"

# 56eeaf02a0d440959c9d14fb640fbfe6
#~ msgid "or outside your model class altogether::"
#~ msgstr "или вне модели::"

# 18088d3b3dd04aec805a4d3f8bc064d9
#~ msgid "The admin represents this as a checkbox."
#~ msgstr "Интерфейс администратора отображает его как \"checkbox\"."

# 7ea77972e584406c8fbb70cfcb838df7
# 2cd5a0971f6e4ba7b41f9233044cffa4
# c39d201a4b3a4319bc10478010c69b1b
# 7135c9597bc844b9bf1029ee7057a762
#~ msgid ""
#~ "The admin represents this as an ``<input type=\"text\">`` (a single-line "
#~ "input)."
#~ msgstr ""
#~ "Интерфейс администратора отображает поле как ``<input type=\"text\">``."

# 0238f5fa36f54e76955c6fe78307adde
#~ msgid ""
#~ "The admin represents this as two ``<input type=\"text\">`` fields, with "
#~ "JavaScript shortcuts."
#~ msgstr ""
#~ "В интерфейсе администратора поле будет представлено как ``<input type="
#~ "\"text\">`` с JavaScript виджетом."

# 7baf9bc3a27d4a1d873d0572db0fbca1
#~ msgid ""
#~ "The admin represents this field as an ``<input type=\"file\">`` (a file-"
#~ "upload widget)."
#~ msgstr ""
#~ "Интерфейс администратора отображает это поле как ``<input type=\"file"
#~ "\">``."

# 07aa3cc0412e4e659893012794c0f0a0
#~ msgid ""
#~ "An integer. The admin represents this as an ``<input type=\"text\">`` (a "
#~ "single-line input)."
#~ msgstr ""
#~ "Целое число. Интерфейс администратора отображает его как ``<input type="
#~ "\"text\">``."

# b9b3d7b20a3244db8f4bd48a2350511b
#~ msgid ""
#~ "A large text field. The admin represents this as a ``<textarea>`` (a "
#~ "multi-line input)."
#~ msgstr ""
#~ "Большое текстовое поле. Интерфейс администратора отображает поле как "
#~ "``<textarea>``."

# 22ed7c19571c49ac8592c0da81372d9f
#~ msgid ""
#~ "The admin represents this as an ``<input type=\"text\">`` with some "
#~ "JavaScript shortcuts."
#~ msgstr ""
#~ "Интерфейс администратора отображает поле как ``<input type=\"text\">`` с "
#~ "JavaScript виджетом."

# c84f43a1f02e4edb82d6d38cdd620483
#~ msgid ""
#~ "If ``True``, the URL given will be checked for existence (i.e., the URL "
#~ "actually loads and doesn't give a 404 response) using a ``HEAD`` request. "
#~ "Redirects are allowed, but will not be followed."
#~ msgstr ""
#~ "При ``True``, переданный URL будет проверен на доступность (то есть "
#~ "страница по этому адресу доступна для загрузки и не возарвщает ответ со "
#~ "статусом 404) используя ``HEAD`` запрос. Перенаправления разрешены, но не "
#~ "обрабатываются."

# 37d4d8adde684a4283f682dc1d5fa26f
#~ msgid ""
#~ "Note that when you're using the single-threaded development server, "
#~ "validating a URL being served by the same server will hang. This should "
#~ "not be a problem for multithreaded servers."
#~ msgstr ""
#~ "Если вы используете одно-поточный сервер, и будет выполнена проверка "
#~ "адреса обрабатываемого этим же сервером, сервер зависнет. Это не должно "
#~ "быть проблемой для много-поточного сервера."

# 8518ecdc360745deb178ad0e3980ddfd
#~ msgid "``XMLField``"
#~ msgstr "``XMLField``"

# 6266eac19ff849e2bce93e7e9bc87629
#~ msgid ""
#~ "A :class:`TextField` that stores XML data and a path to a schema. Takes "
#~ "one optional argument:"
#~ msgstr ""
#~ "Поле :class:`TextField`, которое хранит XML и пусть к XML Schema. "
#~ "Принимает один не обязательный аргумент:"

# 277c1edc453b4107b94a03c170cd050a
#~ msgid "The filesystem path to a schema for the field."
#~ msgstr "Путь в файловой системе к XML Schema."
