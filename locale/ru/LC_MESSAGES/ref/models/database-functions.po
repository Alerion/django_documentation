# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2015-03-19 15:06+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../ref/models/database-functions.txt:3
msgid "Database Functions"
msgstr ""

#: ../../ref/models/database-functions.txt:8
msgid ""
"The classes documented below provide a way for users to use functions "
"provided by the underlying database as annotations, aggregations, or filters "
"in Django. Functions are also :doc:`expressions <expressions>`, so they can "
"be used and combined with other expressions like :ref:`aggregate functions "
"<aggregation-functions>`."
msgstr ""

#: ../../ref/models/database-functions.txt:14
#: ../../ref/models/database-functions.txt:178
msgid "We'll be using the following model in examples of each function::"
msgstr ""

#: ../../ref/models/database-functions.txt:22
msgid ""
"We don't usually recommend allowing ``null=True`` for ``CharField`` since "
"this allows the field to have two \"empty values\", but it's important for "
"the ``Coalesce`` example below."
msgstr ""

#: ../../ref/models/database-functions.txt:29
msgid "Comparison and conversion functions"
msgstr ""

#: ../../ref/models/database-functions.txt:32
msgid "``Cast``"
msgstr ""

#: ../../ref/models/database-functions.txt:36
msgid ""
"Forces the result type of ``expression`` to be the one from ``output_field``."
msgstr ""

#: ../../ref/models/database-functions.txt:38
#: ../../ref/models/database-functions.txt:99
#: ../../ref/models/database-functions.txt:251
#: ../../ref/models/database-functions.txt:431
#: ../../ref/models/database-functions.txt:510
#: ../../ref/models/database-functions.txt:637
#: ../../ref/models/database-functions.txt:736
#: ../../ref/models/database-functions.txt:760
#: ../../ref/models/database-functions.txt:784
#: ../../ref/models/database-functions.txt:807
#: ../../ref/models/database-functions.txt:830
#: ../../ref/models/database-functions.txt:846
#: ../../ref/models/database-functions.txt:869
#: ../../ref/models/database-functions.txt:892
#: ../../ref/models/database-functions.txt:915
#: ../../ref/models/database-functions.txt:939
#: ../../ref/models/database-functions.txt:963
#: ../../ref/models/database-functions.txt:986
#: ../../ref/models/database-functions.txt:1010
#: ../../ref/models/database-functions.txt:1026
#: ../../ref/models/database-functions.txt:1049
#: ../../ref/models/database-functions.txt:1064
#: ../../ref/models/database-functions.txt:1088
#: ../../ref/models/database-functions.txt:1113
#: ../../ref/models/database-functions.txt:1136
#: ../../ref/models/database-functions.txt:1159
#: ../../ref/models/database-functions.txt:1182
#: ../../ref/models/database-functions.txt:1215
#: ../../ref/models/database-functions.txt:1239
#: ../../ref/models/database-functions.txt:1261
#: ../../ref/models/database-functions.txt:1277
#: ../../ref/models/database-functions.txt:1306
#: ../../ref/models/database-functions.txt:1323
#: ../../ref/models/database-functions.txt:1353
#: ../../ref/models/database-functions.txt:1374
#: ../../ref/models/database-functions.txt:1390
#: ../../ref/models/database-functions.txt:1408
#: ../../ref/models/database-functions.txt:1432
#: ../../ref/models/database-functions.txt:1447
#: ../../ref/models/database-functions.txt:1487
#: ../../ref/models/database-functions.txt:1515
#: ../../ref/models/database-functions.txt:1547
#: ../../ref/models/database-functions.txt:1565
#: ../../ref/models/database-functions.txt:1584
msgid "Usage example::"
msgstr ""

#: ../../ref/models/database-functions.txt:50
msgid "``Coalesce``"
msgstr ""

#: ../../ref/models/database-functions.txt:54
msgid ""
"Accepts a list of at least two field names or expressions and returns the "
"first non-null value (note that an empty string is not considered a null "
"value). Each argument must be of a similar type, so mixing text and numbers "
"will result in a database error."
msgstr ""

#: ../../ref/models/database-functions.txt:59
msgid "Usage examples::"
msgstr ""

#: ../../ref/models/database-functions.txt:81
msgid ""
"A Python value passed to ``Coalesce`` on MySQL may be converted to an "
"incorrect type unless explicitly cast to the correct database type:"
msgstr ""

#: ../../ref/models/database-functions.txt:91
msgid "``Greatest``"
msgstr ""

#: ../../ref/models/database-functions.txt:95
msgid ""
"Accepts a list of at least two field names or expressions and returns the "
"greatest value. Each argument must be of a similar type, so mixing text and "
"numbers will result in a database error."
msgstr ""

#: ../../ref/models/database-functions.txt:116
msgid ""
"``annotated_comment.last_updated`` will be the most recent of ``blog."
"modified`` and ``comment.modified``."
msgstr ""

#: ../../ref/models/database-functions.txt:121
msgid ""
"The behavior of ``Greatest`` when one or more expression may be ``null`` "
"varies between databases:"
msgstr ""

#: ../../ref/models/database-functions.txt:124
msgid ""
"PostgreSQL: ``Greatest`` will return the largest non-null expression, or "
"``null`` if all expressions are ``null``."
msgstr ""

#: ../../ref/models/database-functions.txt:126
msgid ""
"SQLite, Oracle, and MySQL: If any expression is ``null``, ``Greatest`` will "
"return ``null``."
msgstr ""

#: ../../ref/models/database-functions.txt:129
msgid ""
"The PostgreSQL behavior can be emulated using ``Coalesce`` if you know a "
"sensible minimum value to provide as a default."
msgstr ""

#: ../../ref/models/database-functions.txt:133
msgid "``Least``"
msgstr ""

#: ../../ref/models/database-functions.txt:137
msgid ""
"Accepts a list of at least two field names or expressions and returns the "
"least value. Each argument must be of a similar type, so mixing text and "
"numbers will result in a database error."
msgstr ""

#: ../../ref/models/database-functions.txt:143
msgid ""
"The behavior of ``Least`` when one or more expression may be ``null`` varies "
"between databases:"
msgstr ""

#: ../../ref/models/database-functions.txt:146
msgid ""
"PostgreSQL: ``Least`` will return the smallest non-null expression, or "
"``null`` if all expressions are ``null``."
msgstr ""

#: ../../ref/models/database-functions.txt:148
msgid ""
"SQLite, Oracle, and MySQL: If any expression is ``null``, ``Least`` will "
"return ``null``."
msgstr ""

#: ../../ref/models/database-functions.txt:151
msgid ""
"The PostgreSQL behavior can be emulated using ``Coalesce`` if you know a "
"sensible maximum value to provide as a default."
msgstr ""

#: ../../ref/models/database-functions.txt:155
msgid "``NullIf``"
msgstr ""

#: ../../ref/models/database-functions.txt:161
msgid ""
"Accepts two expressions and returns ``None`` if they are equal, otherwise "
"returns ``expression1``."
msgstr ""

#: ../../ref/models/database-functions.txt:164
msgid "Caveats on Oracle"
msgstr ""

#: ../../ref/models/database-functions.txt:166
msgid ""
"Due to an :ref:`Oracle convention<oracle-null-empty-strings>`, this function "
"returns the empty string instead of ``None`` when the expressions are of "
"type :class:`~django.db.models.CharField`."
msgstr ""

#: ../../ref/models/database-functions.txt:170
msgid ""
"Passing ``Value(None)`` to ``expression1`` is prohibited on Oracle since "
"Oracle doesn't accept ``NULL`` as the first argument."
msgstr ""

#: ../../ref/models/database-functions.txt:176
msgid "Date functions"
msgstr ""

#: ../../ref/models/database-functions.txt:189
msgid "``Extract``"
msgstr ""

#: ../../ref/models/database-functions.txt:193
msgid "Extracts a component of a date as a number."
msgstr ""

#: ../../ref/models/database-functions.txt:195
msgid ""
"Takes an ``expression`` representing a ``DateField``, ``DateTimeField``, "
"``TimeField``, or ``DurationField`` and a ``lookup_name``, and returns the "
"part of the date referenced by ``lookup_name`` as an ``IntegerField``. "
"Django usually uses the databases' extract function, so you may use any "
"``lookup_name`` that your database supports. A ``tzinfo`` subclass, usually "
"provided by ``pytz``, can be passed to extract a value in a specific "
"timezone."
msgstr ""

#: ../../ref/models/database-functions.txt:202
msgid ""
"Given the datetime ``2015-06-15 23:30:01.000321+00:00``, the built-in "
"``lookup_name``\\s return:"
msgstr ""

#: ../../ref/models/database-functions.txt:205
msgid "\"year\": 2015"
msgstr ""

#: ../../ref/models/database-functions.txt:206
msgid "\"iso_year\": 2015"
msgstr ""

#: ../../ref/models/database-functions.txt:207
msgid "\"quarter\": 2"
msgstr ""

#: ../../ref/models/database-functions.txt:208
msgid "\"month\": 6"
msgstr ""

#: ../../ref/models/database-functions.txt:209
msgid "\"day\": 15"
msgstr ""

#: ../../ref/models/database-functions.txt:210
msgid "\"week\": 25"
msgstr ""

#: ../../ref/models/database-functions.txt:211
msgid "\"week_day\": 2"
msgstr ""

#: ../../ref/models/database-functions.txt:212
msgid "\"hour\": 23"
msgstr ""

#: ../../ref/models/database-functions.txt:213
msgid "\"minute\": 30"
msgstr ""

#: ../../ref/models/database-functions.txt:214
msgid "\"second\": 1"
msgstr ""

#: ../../ref/models/database-functions.txt:216
msgid ""
"If a different timezone like ``Australia/Melbourne`` is active in Django, "
"then the datetime is converted to the timezone before the value is "
"extracted. The timezone offset for Melbourne in the example date above is "
"+10:00. The values returned when this timezone is active will be the same as "
"above except for:"
msgstr ""

#: ../../ref/models/database-functions.txt:221
msgid "\"day\": 16"
msgstr ""

#: ../../ref/models/database-functions.txt:222
msgid "\"week_day\": 3"
msgstr ""

#: ../../ref/models/database-functions.txt:223
msgid "\"hour\": 9"
msgstr ""

#: ../../ref/models/database-functions.txt:225
msgid "``week_day`` values"
msgstr ""

#: ../../ref/models/database-functions.txt:227
msgid ""
"The ``week_day`` ``lookup_type`` is calculated differently from most "
"databases and from Python's standard functions. This function will return "
"``1`` for Sunday, ``2`` for Monday, through ``7`` for Saturday."
msgstr ""

#: ../../ref/models/database-functions.txt:231
msgid "The equivalent calculation in Python is::"
msgstr ""

#: ../../ref/models/database-functions.txt:238
msgid "``week`` values"
msgstr ""

#: ../../ref/models/database-functions.txt:240
msgid ""
"The ``week`` ``lookup_type`` is calculated based on `ISO-8601 <https://en."
"wikipedia.org/wiki/ISO-8601>`_, i.e., a week starts on a Monday. The first "
"week of a year is the one that contains the year's first Thursday, i.e. the "
"first week has the majority (four or more) of its days in the year. The "
"value returned is in the range 1 to 52 or 53."
msgstr ""

#: ../../ref/models/database-functions.txt:247
msgid ""
"Each ``lookup_name`` above has a corresponding ``Extract`` subclass (listed "
"below) that should typically be used instead of the more verbose equivalent, "
"e.g. use ``ExtractYear(...)`` rather than ``Extract(..., "
"lookup_name='year')``."
msgstr ""

#: ../../ref/models/database-functions.txt:271
msgid "``DateField`` extracts"
msgstr ""

#: ../../ref/models/database-functions.txt:281
msgid "Returns the ISO-8601 week-numbering year."
msgstr ""

#: ../../ref/models/database-functions.txt:305
msgid ""
"These are logically equivalent to ``Extract('date_field', lookup_name)``. "
"Each class is also a ``Transform`` registered on ``DateField`` and "
"``DateTimeField`` as ``__(lookup_name)``, e.g. ``__year``."
msgstr ""

#: ../../ref/models/database-functions.txt:309
msgid ""
"Since ``DateField``\\s don't have a time component, only ``Extract`` "
"subclasses that deal with date-parts can be used with ``DateField``::"
msgstr ""

#: ../../ref/models/database-functions.txt:338
msgid "``DateTimeField`` extracts"
msgstr ""

#: ../../ref/models/database-functions.txt:340
msgid ""
"In addition to the following, all extracts for ``DateField`` listed above "
"may also be used on ``DateTimeField``\\s ."
msgstr ""

#: ../../ref/models/database-functions.txt:355
msgid ""
"These are logically equivalent to ``Extract('datetime_field', "
"lookup_name)``. Each class is also a ``Transform`` registered on "
"``DateTimeField`` as ``__(lookup_name)``, e.g. ``__minute``."
msgstr ""

#: ../../ref/models/database-functions.txt:359
msgid "``DateTimeField`` examples::"
msgstr ""

#: ../../ref/models/database-functions.txt:391
msgid ""
"When :setting:`USE_TZ` is ``True`` then datetimes are stored in the database "
"in UTC. If a different timezone is active in Django, the datetime is "
"converted to that timezone before the value is extracted. The example below "
"converts to the Melbourne timezone (UTC +10:00), which changes the day, "
"weekday, and hour values that are returned::"
msgstr ""

#: ../../ref/models/database-functions.txt:409
msgid ""
"Explicitly passing the timezone to the ``Extract`` function behaves in the "
"same way, and takes priority over an active timezone::"
msgstr ""

#: ../../ref/models/database-functions.txt:424
msgid "``Now``"
msgstr ""

#: ../../ref/models/database-functions.txt:428
msgid ""
"Returns the database server's current date and time when the query is "
"executed, typically using the SQL ``CURRENT_TIMESTAMP``."
msgstr ""

#: ../../ref/models/database-functions.txt:437
msgid "PostgreSQL considerations"
msgstr ""

#: ../../ref/models/database-functions.txt:439
msgid ""
"On PostgreSQL, the SQL ``CURRENT_TIMESTAMP`` returns the time that the "
"current transaction started. Therefore for cross-database compatibility, "
"``Now()`` uses ``STATEMENT_TIMESTAMP`` instead. If you need the transaction "
"timestamp, use :class:`django.contrib.postgres.functions.TransactionNow`."
msgstr ""

#: ../../ref/models/database-functions.txt:445
msgid "``Trunc``"
msgstr ""

#: ../../ref/models/database-functions.txt:449
msgid "Truncates a date up to a significant component."
msgstr ""

#: ../../ref/models/database-functions.txt:451
msgid ""
"When you only care if something happened in a particular year, hour, or day, "
"but not the exact second, then ``Trunc`` (and its subclasses) can be useful "
"to filter or aggregate your data. For example, you can use ``Trunc`` to "
"calculate the number of sales per day."
msgstr ""

#: ../../ref/models/database-functions.txt:456
msgid ""
"``Trunc`` takes a single ``expression``, representing a ``DateField``, "
"``TimeField``, or ``DateTimeField``, a ``kind`` representing a date or time "
"part, and an ``output_field`` that's either ``DateTimeField()``, "
"``TimeField()``, or ``DateField()``. It returns a datetime, date, or time "
"depending on ``output_field``, with fields up to ``kind`` set to their "
"minimum value. If ``output_field`` is omitted, it will default to the "
"``output_field`` of ``expression``. A ``tzinfo`` subclass, usually provided "
"by ``pytz``, can be passed to truncate a value in a specific timezone."
msgstr ""

#: ../../ref/models/database-functions.txt:465
msgid ""
"The ``is_dst`` parameter indicates whether or not ``pytz`` should interpret "
"nonexistent and ambiguous datetimes in daylight saving time. By default "
"(when ``is_dst=None``), ``pytz`` raises an exception for such datetimes."
msgstr ""

#: ../../ref/models/database-functions.txt:471
msgid "The ``is_dst`` parameter was added."
msgstr ""

#: ../../ref/models/database-functions.txt:473
msgid ""
"Given the datetime ``2015-06-15 14:30:50.000321+00:00``, the built-in "
"``kind``\\s return:"
msgstr ""

#: ../../ref/models/database-functions.txt:476
msgid "\"year\": 2015-01-01 00:00:00+00:00"
msgstr ""

#: ../../ref/models/database-functions.txt:477
msgid "\"quarter\": 2015-04-01 00:00:00+00:00"
msgstr ""

#: ../../ref/models/database-functions.txt:478
msgid "\"month\": 2015-06-01 00:00:00+00:00"
msgstr ""

#: ../../ref/models/database-functions.txt:479
msgid "\"week\": 2015-06-15 00:00:00+00:00"
msgstr ""

#: ../../ref/models/database-functions.txt:480
msgid "\"day\": 2015-06-15 00:00:00+00:00"
msgstr ""

#: ../../ref/models/database-functions.txt:481
msgid "\"hour\": 2015-06-15 14:00:00+00:00"
msgstr ""

#: ../../ref/models/database-functions.txt:482
msgid "\"minute\": 2015-06-15 14:30:00+00:00"
msgstr ""

#: ../../ref/models/database-functions.txt:483
msgid "\"second\": 2015-06-15 14:30:50+00:00"
msgstr ""

#: ../../ref/models/database-functions.txt:485
msgid ""
"If a different timezone like ``Australia/Melbourne`` is active in Django, "
"then the datetime is converted to the new timezone before the value is "
"truncated. The timezone offset for Melbourne in the example date above is "
"+10:00. The values returned when this timezone is active will be:"
msgstr ""

#: ../../ref/models/database-functions.txt:490
msgid "\"year\": 2015-01-01 00:00:00+11:00"
msgstr ""

#: ../../ref/models/database-functions.txt:491
msgid "\"quarter\": 2015-04-01 00:00:00+10:00"
msgstr ""

#: ../../ref/models/database-functions.txt:492
msgid "\"month\": 2015-06-01 00:00:00+10:00"
msgstr ""

#: ../../ref/models/database-functions.txt:493
msgid "\"week\": 2015-06-16 00:00:00+10:00"
msgstr ""

#: ../../ref/models/database-functions.txt:494
msgid "\"day\": 2015-06-16 00:00:00+10:00"
msgstr ""

#: ../../ref/models/database-functions.txt:495
msgid "\"hour\": 2015-06-16 00:00:00+10:00"
msgstr ""

#: ../../ref/models/database-functions.txt:496
msgid "\"minute\": 2015-06-16 00:30:00+10:00"
msgstr ""

#: ../../ref/models/database-functions.txt:497
msgid "\"second\": 2015-06-16 00:30:50+10:00"
msgstr ""

#: ../../ref/models/database-functions.txt:499
msgid ""
"The year has an offset of +11:00 because the result transitioned into "
"daylight saving time."
msgstr ""

#: ../../ref/models/database-functions.txt:502
msgid ""
"Each ``kind`` above has a corresponding ``Trunc`` subclass (listed below) "
"that should typically be used instead of the more verbose equivalent, e.g. "
"use ``TruncYear(...)`` rather than ``Trunc(..., kind='year')``."
msgstr ""

#: ../../ref/models/database-functions.txt:506
msgid ""
"The subclasses are all defined as transforms, but they aren't registered "
"with any fields, because the obvious lookup names are already reserved by "
"the ``Extract`` subclasses."
msgstr ""

#: ../../ref/models/database-functions.txt:536
msgid "``DateField`` truncation"
msgstr ""

#: ../../ref/models/database-functions.txt:548
msgid "Truncates to midnight on the Monday of the week."
msgstr ""

#: ../../ref/models/database-functions.txt:556
msgid ""
"These are logically equivalent to ``Trunc('date_field', kind)``. They "
"truncate all parts of the date up to ``kind`` which allows grouping or "
"filtering dates with less precision. ``expression`` can have an "
"``output_field`` of either ``DateField`` or ``DateTimeField``."
msgstr ""

#: ../../ref/models/database-functions.txt:561
msgid ""
"Since ``DateField``\\s don't have a time component, only ``Trunc`` "
"subclasses that deal with date-parts can be used with ``DateField``::"
msgstr ""

#: ../../ref/models/database-functions.txt:596
msgid "``DateTimeField`` truncation"
msgstr ""

#: ../../ref/models/database-functions.txt:603
msgid ""
"``TruncDate`` casts ``expression`` to a date rather than using the built-in "
"SQL truncate function. It's also registered as a transform on  "
"``DateTimeField`` as ``__date``."
msgstr ""

#: ../../ref/models/database-functions.txt:612
msgid ""
"``TruncTime`` casts ``expression`` to a time rather than using the built-in "
"SQL truncate function. It's also registered as a transform on "
"``DateTimeField`` as ``__time``."
msgstr ""

#: ../../ref/models/database-functions.txt:632
msgid ""
"These are logically equivalent to ``Trunc('datetime_field', kind)``. They "
"truncate all parts of the date up to ``kind`` and allow grouping or "
"filtering datetimes with less precision. ``expression`` must have an "
"``output_field`` of ``DateTimeField``."
msgstr ""

#: ../../ref/models/database-functions.txt:664
msgid "``TimeField`` truncation"
msgstr ""

#: ../../ref/models/database-functions.txt:678
msgid ""
"These are logically equivalent to ``Trunc('time_field', kind)``. They "
"truncate all parts of the time up to ``kind`` which allows grouping or "
"filtering times with less precision. ``expression`` can have an "
"``output_field`` of either ``TimeField`` or ``DateTimeField``."
msgstr ""

#: ../../ref/models/database-functions.txt:683
msgid ""
"Since ``TimeField``\\s don't have a date component, only ``Trunc`` "
"subclasses that deal with time-parts can be used with ``TimeField``::"
msgstr ""

#: ../../ref/models/database-functions.txt:719
msgid "Math Functions"
msgstr ""

#: ../../ref/models/database-functions.txt:723
msgid "We'll be using the following model in math function examples::"
msgstr ""

#: ../../ref/models/database-functions.txt:730
msgid "``Abs``"
msgstr ""

#: ../../ref/models/database-functions.txt:734
msgid "Returns the absolute value of a numeric field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:744
#: ../../ref/models/database-functions.txt:768
#: ../../ref/models/database-functions.txt:792
#: ../../ref/models/database-functions.txt:815
#: ../../ref/models/database-functions.txt:854
#: ../../ref/models/database-functions.txt:877
#: ../../ref/models/database-functions.txt:900
#: ../../ref/models/database-functions.txt:923
#: ../../ref/models/database-functions.txt:947
#: ../../ref/models/database-functions.txt:971
#: ../../ref/models/database-functions.txt:994
#: ../../ref/models/database-functions.txt:1072
#: ../../ref/models/database-functions.txt:1096
#: ../../ref/models/database-functions.txt:1121
#: ../../ref/models/database-functions.txt:1144
#: ../../ref/models/database-functions.txt:1167
#: ../../ref/models/database-functions.txt:1190
#: ../../ref/models/database-functions.txt:1288
msgid "It can also be registered as a transform. For example::"
msgstr ""

#: ../../ref/models/database-functions.txt:753
msgid "``ACos``"
msgstr ""

#: ../../ref/models/database-functions.txt:757
msgid ""
"Returns the arccosine of a numeric field or expression. The expression value "
"must be within the range -1 to 1."
msgstr ""

#: ../../ref/models/database-functions.txt:777
msgid "``ASin``"
msgstr ""

#: ../../ref/models/database-functions.txt:781
msgid ""
"Returns the arcsine of a numeric field or expression. The expression value "
"must be in the range -1 to 1."
msgstr ""

#: ../../ref/models/database-functions.txt:801
msgid "``ATan``"
msgstr ""

#: ../../ref/models/database-functions.txt:805
msgid "Returns the arctangent of a numeric field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:824
msgid "``ATan2``"
msgstr ""

#: ../../ref/models/database-functions.txt:828
msgid "Returns the arctangent of ``expression1 / expression2``."
msgstr ""

#: ../../ref/models/database-functions.txt:839
msgid "``Ceil``"
msgstr ""

#: ../../ref/models/database-functions.txt:843
msgid ""
"Returns the smallest integer greater than or equal to a numeric field or "
"expression."
msgstr ""

#: ../../ref/models/database-functions.txt:863
msgid "``Cos``"
msgstr ""

#: ../../ref/models/database-functions.txt:867
msgid "Returns the cosine  of a numeric field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:886
msgid "``Cot``"
msgstr ""

#: ../../ref/models/database-functions.txt:890
msgid "Returns the cotangent of a numeric field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:909
msgid "``Degrees``"
msgstr ""

#: ../../ref/models/database-functions.txt:913
msgid "Converts a numeric field or expression from radians to degrees."
msgstr ""

#: ../../ref/models/database-functions.txt:932
msgid "``Exp``"
msgstr ""

#: ../../ref/models/database-functions.txt:936
msgid ""
"Returns the value of ``e`` (the natural logarithm base) raised to the power "
"of a numeric field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:956
msgid "``Floor``"
msgstr ""

#: ../../ref/models/database-functions.txt:960
msgid ""
"Returns the largest integer value not greater than a numeric field or "
"expression."
msgstr ""

#: ../../ref/models/database-functions.txt:980
msgid "``Ln``"
msgstr ""

#: ../../ref/models/database-functions.txt:984
msgid "Returns the natural logarithm a numeric field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:1003
msgid "``Log``"
msgstr ""

#: ../../ref/models/database-functions.txt:1007
msgid ""
"Accepts two numeric fields or expressions and returns the logarithm of the "
"first to base of the second."
msgstr ""

#: ../../ref/models/database-functions.txt:1019
msgid "``Mod``"
msgstr ""

#: ../../ref/models/database-functions.txt:1023
msgid ""
"Accepts two numeric fields or expressions and returns the remainder of the "
"first divided by the second (modulo operation)."
msgstr ""

#: ../../ref/models/database-functions.txt:1035
msgid "``Pi``"
msgstr ""

#: ../../ref/models/database-functions.txt:1039
msgid "Returns the value of the mathematical constant ``π``."
msgstr ""

#: ../../ref/models/database-functions.txt:1042
msgid "``Power``"
msgstr ""

#: ../../ref/models/database-functions.txt:1046
msgid ""
"Accepts two numeric fields or expressions and returns the value of the first "
"raised to the power of the second."
msgstr ""

#: ../../ref/models/database-functions.txt:1058
msgid "``Radians``"
msgstr ""

#: ../../ref/models/database-functions.txt:1062
msgid "Converts a numeric field or expression from degrees to radians."
msgstr ""

#: ../../ref/models/database-functions.txt:1081
msgid "``Round``"
msgstr ""

#: ../../ref/models/database-functions.txt:1085
msgid ""
"Rounds a numeric field or expression to the nearest integer. Whether half "
"values are rounded up or down depends on the database."
msgstr ""

#: ../../ref/models/database-functions.txt:1105
msgid "``Sign``"
msgstr ""

#: ../../ref/models/database-functions.txt:1111
msgid "Returns the sign (-1, 0, 1) of a numeric field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:1130
msgid "``Sin``"
msgstr ""

#: ../../ref/models/database-functions.txt:1134
msgid "Returns the sine of a numeric field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:1153
msgid "``Sqrt``"
msgstr ""

#: ../../ref/models/database-functions.txt:1157
msgid "Returns the square root of a nonnegative numeric field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:1176
msgid "``Tan``"
msgstr ""

#: ../../ref/models/database-functions.txt:1180
msgid "Returns the tangent of a numeric field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:1201
msgid "Text functions"
msgstr ""

#: ../../ref/models/database-functions.txt:1204
msgid "``Chr``"
msgstr ""

#: ../../ref/models/database-functions.txt:1208
msgid ""
"Accepts a numeric field or expression and returns the text representation of "
"the expression as a single character. It works the same as Python's :func:"
"`chr` function."
msgstr ""

#: ../../ref/models/database-functions.txt:1212
msgid ""
"Like :class:`Length`, it can be registered as a transform on "
"``IntegerField``. The default lookup name is ``chr``."
msgstr ""

#: ../../ref/models/database-functions.txt:1224
msgid "``Concat``"
msgstr ""

#: ../../ref/models/database-functions.txt:1228
msgid ""
"Accepts a list of at least two text fields or expressions and returns the "
"concatenated text. Each argument must be of a text or char type. If you want "
"to concatenate a ``TextField()`` with a ``CharField()``, then be sure to "
"tell Django that the ``output_field`` should be a ``TextField()``. "
"Specifying an ``output_field`` is also required when concatenating a "
"``Value`` as in the example below."
msgstr ""

#: ../../ref/models/database-functions.txt:1235
msgid ""
"This function will never have a null result. On backends where a null "
"argument results in the entire expression being null, Django will ensure "
"that each null part is converted to an empty string first."
msgstr ""

#: ../../ref/models/database-functions.txt:1255
msgid "``Left``"
msgstr ""

#: ../../ref/models/database-functions.txt:1259
msgid ""
"Returns the first ``length`` characters of the given text field or "
"expression."
msgstr ""

#: ../../ref/models/database-functions.txt:1270
msgid "``Length``"
msgstr ""

#: ../../ref/models/database-functions.txt:1274
msgid ""
"Accepts a single text field or expression and returns the number of "
"characters the value has. If the expression is null, then the length will "
"also be null."
msgstr ""

#: ../../ref/models/database-functions.txt:1297
msgid "``Lower``"
msgstr ""

#: ../../ref/models/database-functions.txt:1301
msgid ""
"Accepts a single text field or expression and returns the lowercase "
"representation."
msgstr ""

#: ../../ref/models/database-functions.txt:1304
#: ../../ref/models/database-functions.txt:1351
#: ../../ref/models/database-functions.txt:1582
msgid ""
"It can also be registered as a transform as described in :class:`Length`."
msgstr ""

#: ../../ref/models/database-functions.txt:1315
msgid "``LPad``"
msgstr ""

#: ../../ref/models/database-functions.txt:1319
msgid ""
"Returns the value of the given text field or expression padded on the left "
"side with ``fill_text`` so that the resulting value is ``length`` characters "
"long. The default ``fill_text`` is a space."
msgstr ""

#: ../../ref/models/database-functions.txt:1334
msgid "``LTrim``"
msgstr ""

#: ../../ref/models/database-functions.txt:1338
msgid ""
"Similar to :class:`~django.db.models.functions.Trim`, but removes only "
"leading spaces."
msgstr ""

#: ../../ref/models/database-functions.txt:1342
msgid "``MD5``"
msgstr ""

#: ../../ref/models/database-functions.txt:1348
msgid ""
"Accepts a single text field or expression and returns the MD5 hash of the "
"string."
msgstr ""

#: ../../ref/models/database-functions.txt:1362
msgid "``Ord``"
msgstr ""

#: ../../ref/models/database-functions.txt:1366
msgid ""
"Accepts a single text field or expression and returns the Unicode code point "
"value for the first character of that expression. It works similar to "
"Python's :func:`ord` function, but an exception isn't raised if the "
"expression is more than one character long."
msgstr ""

#: ../../ref/models/database-functions.txt:1371
msgid ""
"It can also be registered as a transform as described in :class:`Length`. "
"The default lookup name is ``ord``."
msgstr ""

#: ../../ref/models/database-functions.txt:1383
msgid "``Repeat``"
msgstr ""

#: ../../ref/models/database-functions.txt:1387
msgid ""
"Returns the value of the given text field or expression repeated ``number`` "
"times."
msgstr ""

#: ../../ref/models/database-functions.txt:1400
msgid "``Replace``"
msgstr ""

#: ../../ref/models/database-functions.txt:1404
msgid ""
"Replaces all occurrences of ``text`` with ``replacement`` in ``expression``. "
"The default replacement text is the empty string. The arguments to the "
"function are case-sensitive."
msgstr ""

#: ../../ref/models/database-functions.txt:1420
msgid "``Reverse``"
msgstr ""

#: ../../ref/models/database-functions.txt:1426
msgid ""
"Accepts a single text field or expression and returns the characters of that "
"expression in reverse order."
msgstr ""

#: ../../ref/models/database-functions.txt:1429
msgid ""
"It can also be registered as a transform as described in :class:`Length`. "
"The default lookup name is ``reverse``."
msgstr ""

#: ../../ref/models/database-functions.txt:1441
msgid "``Right``"
msgstr ""

#: ../../ref/models/database-functions.txt:1445
msgid ""
"Returns the last ``length`` characters of the given text field or expression."
msgstr ""

#: ../../ref/models/database-functions.txt:1456
msgid "``RPad``"
msgstr ""

#: ../../ref/models/database-functions.txt:1460
msgid ""
"Similar to :class:`~django.db.models.functions.LPad`, but pads on the right "
"side."
msgstr ""

#: ../../ref/models/database-functions.txt:1464
msgid "``RTrim``"
msgstr ""

#: ../../ref/models/database-functions.txt:1468
msgid ""
"Similar to :class:`~django.db.models.functions.Trim`, but removes only "
"trailing spaces."
msgstr ""

#: ../../ref/models/database-functions.txt:1472
msgid "``SHA1``, ``SHA224``, ``SHA256``, ``SHA384``, and ``SHA512``"
msgstr ""

#: ../../ref/models/database-functions.txt:1482
msgid ""
"Accepts a single text field or expression and returns the particular hash of "
"the string."
msgstr ""

#: ../../ref/models/database-functions.txt:1485
msgid ""
"They can also be registered as transforms as described in :class:`Length`."
msgstr ""

#: ../../ref/models/database-functions.txt:1495
msgid "PostgreSQL"
msgstr ""

#: ../../ref/models/database-functions.txt:1497
msgid ""
"The `pgcrypto extension <https://www.postgresql.org/docs/current/ pgcrypto."
"html>`_ must be installed. You can use the :class:`~django.contrib.postgres."
"operations.CryptoExtension` migration operation to install it."
msgstr ""

#: ../../ref/models/database-functions.txt:1502
msgid "Oracle"
msgstr ""

#: ../../ref/models/database-functions.txt:1504
msgid "Oracle doesn't support the ``SHA224`` function."
msgstr ""

#: ../../ref/models/database-functions.txt:1507
msgid "``StrIndex``"
msgstr ""

#: ../../ref/models/database-functions.txt:1511
msgid ""
"Returns a positive integer corresponding to the 1-indexed position of the "
"first occurrence of ``substring`` inside ``string``, or 0 if ``substring`` "
"is not found."
msgstr ""

#: ../../ref/models/database-functions.txt:1533
msgid ""
"In MySQL, a database table's :ref:`collation<mysql-collation>` determines "
"whether string comparisons (such as the ``expression`` and ``substring`` of "
"this function) are case-sensitive. Comparisons are case-insensitive by "
"default."
msgstr ""

#: ../../ref/models/database-functions.txt:1539
msgid "``Substr``"
msgstr ""

#: ../../ref/models/database-functions.txt:1543
msgid ""
"Returns a substring of length ``length`` from the field or expression "
"starting at position ``pos``. The position is 1-indexed, so the position "
"must be greater than 0. If ``length`` is ``None``, then the rest of the "
"string will be returned."
msgstr ""

#: ../../ref/models/database-functions.txt:1558
msgid "``Trim``"
msgstr ""

#: ../../ref/models/database-functions.txt:1562
msgid ""
"Returns the value of the given text field or expression with leading and "
"trailing spaces removed."
msgstr ""

#: ../../ref/models/database-functions.txt:1575
msgid "``Upper``"
msgstr ""

#: ../../ref/models/database-functions.txt:1579
msgid ""
"Accepts a single text field or expression and returns the uppercase "
"representation."
msgstr ""

#: ../../ref/models/database-functions.txt:1595
msgid "Window functions"
msgstr ""

#: ../../ref/models/database-functions.txt:1597
msgid ""
"There are a number of functions to use in a :class:`~django.db.models."
"expressions.Window` expression for computing the rank of elements or the :"
"class:`Ntile` of some rows."
msgstr ""

#: ../../ref/models/database-functions.txt:1602
msgid "``CumeDist``"
msgstr ""

#: ../../ref/models/database-functions.txt:1606
msgid ""
"Calculates the cumulative distribution of a value within a window or "
"partition. The cumulative distribution is defined as the number of rows "
"preceding or peered with the current row divided by the total number of rows "
"in the frame."
msgstr ""

#: ../../ref/models/database-functions.txt:1611
msgid "``DenseRank``"
msgstr ""

#: ../../ref/models/database-functions.txt:1615
msgid "Equivalent to :class:`Rank` but does not have gaps."
msgstr ""

#: ../../ref/models/database-functions.txt:1618
msgid "``FirstValue``"
msgstr ""

#: ../../ref/models/database-functions.txt:1622
msgid ""
"Returns the value evaluated at the row that's the first row of the window "
"frame, or ``None`` if no such value exists."
msgstr ""

#: ../../ref/models/database-functions.txt:1626
msgid "``Lag``"
msgstr ""

#: ../../ref/models/database-functions.txt:1630
msgid ""
"Calculates the value offset by ``offset``, and if no row exists there, "
"returns ``default``."
msgstr ""

#: ../../ref/models/database-functions.txt:1633
#: ../../ref/models/database-functions.txt:1657
msgid ""
"``default`` must have the same type as the ``expression``, however, this is "
"only validated by the database and not in Python."
msgstr ""

#: ../../ref/models/database-functions.txt:1636
#: ../../ref/models/database-functions.txt:1660
msgid "MariaDB and ``default``"
msgstr ""

#: ../../ref/models/database-functions.txt:1638
#: ../../ref/models/database-functions.txt:1662
msgid ""
"MariaDB `doesn't support <https://jira.mariadb.org/browse/MDEV-12981>`_ the "
"``default`` parameter."
msgstr ""

#: ../../ref/models/database-functions.txt:1642
msgid "``LastValue``"
msgstr ""

#: ../../ref/models/database-functions.txt:1646
msgid ""
"Comparable to :class:`FirstValue`, it calculates the last value in a given "
"frame clause."
msgstr ""

#: ../../ref/models/database-functions.txt:1650
msgid "``Lead``"
msgstr ""

#: ../../ref/models/database-functions.txt:1654
msgid ""
"Calculates the leading value in a given :ref:`frame <window-frames>`. Both "
"``offset`` and ``default`` are evaluated with respect to the current row."
msgstr ""

#: ../../ref/models/database-functions.txt:1666
msgid "``NthValue``"
msgstr ""

#: ../../ref/models/database-functions.txt:1670
msgid ""
"Computes the row relative to the offset ``nth`` (must be a positive value) "
"within the window. Returns ``None`` if no row exists."
msgstr ""

#: ../../ref/models/database-functions.txt:1673
msgid ""
"Some databases may handle a nonexistent nth-value differently. For example, "
"Oracle returns an empty string rather than ``None`` for character-based "
"expressions. Django doesn't do any conversions in these cases."
msgstr ""

#: ../../ref/models/database-functions.txt:1678
msgid "``Ntile``"
msgstr ""

#: ../../ref/models/database-functions.txt:1682
msgid ""
"Calculates a partition for each of the rows in the frame clause, "
"distributing numbers as evenly as possible between 1 and ``num_buckets``. If "
"the rows don't divide evenly into a number of buckets, one or more buckets "
"will be represented more frequently."
msgstr ""

#: ../../ref/models/database-functions.txt:1688
msgid "``PercentRank``"
msgstr ""

#: ../../ref/models/database-functions.txt:1692
msgid ""
"Computes the percentile rank of the rows in the frame clause. This "
"computation is equivalent to evaluating::"
msgstr ""

#: ../../ref/models/database-functions.txt:1697
msgid ""
"The following table explains the calculation for the percentile rank of a "
"row:"
msgstr ""

#: ../../ref/models/database-functions.txt:1700
msgid "Row #"
msgstr ""

#: ../../ref/models/database-functions.txt:1700
msgid "Value"
msgstr ""

#: ../../ref/models/database-functions.txt:1700
msgid "Rank"
msgstr ""

#: ../../ref/models/database-functions.txt:1700
msgid "Calculation"
msgstr ""

#: ../../ref/models/database-functions.txt:1700
msgid "Percent Rank"
msgstr ""

#: ../../ref/models/database-functions.txt:1702
msgid "1"
msgstr ""

#: ../../ref/models/database-functions.txt:1702
msgid "15"
msgstr ""

#: ../../ref/models/database-functions.txt:1702
msgid "(1-1)/(7-1)"
msgstr ""

#: ../../ref/models/database-functions.txt:1702
msgid "0.0000"
msgstr ""

#: ../../ref/models/database-functions.txt:1703
#: ../../ref/models/database-functions.txt:1704
#: ../../ref/models/database-functions.txt:1705
msgid "2"
msgstr ""

#: ../../ref/models/database-functions.txt:1703
#: ../../ref/models/database-functions.txt:1704
#: ../../ref/models/database-functions.txt:1705
msgid "20"
msgstr ""

#: ../../ref/models/database-functions.txt:1703
#: ../../ref/models/database-functions.txt:1704
#: ../../ref/models/database-functions.txt:1705
msgid "(2-1)/(7-1)"
msgstr ""

#: ../../ref/models/database-functions.txt:1703
#: ../../ref/models/database-functions.txt:1704
#: ../../ref/models/database-functions.txt:1705
msgid "0.1666"
msgstr ""

#: ../../ref/models/database-functions.txt:1704
msgid "3"
msgstr ""

#: ../../ref/models/database-functions.txt:1705
msgid "4"
msgstr ""

#: ../../ref/models/database-functions.txt:1706
#: ../../ref/models/database-functions.txt:1707
msgid "5"
msgstr ""

#: ../../ref/models/database-functions.txt:1706
#: ../../ref/models/database-functions.txt:1707
msgid "30"
msgstr ""

#: ../../ref/models/database-functions.txt:1706
#: ../../ref/models/database-functions.txt:1707
msgid "(5-1)/(7-1)"
msgstr ""

#: ../../ref/models/database-functions.txt:1706
#: ../../ref/models/database-functions.txt:1707
msgid "0.6666"
msgstr ""

#: ../../ref/models/database-functions.txt:1707
msgid "6"
msgstr ""

#: ../../ref/models/database-functions.txt:1708
msgid "7"
msgstr ""

#: ../../ref/models/database-functions.txt:1708
msgid "40"
msgstr ""

#: ../../ref/models/database-functions.txt:1708
msgid "(7-1)/(7-1)"
msgstr ""

#: ../../ref/models/database-functions.txt:1708
msgid "1.0000"
msgstr ""

#: ../../ref/models/database-functions.txt:1712
msgid "``Rank``"
msgstr ""

#: ../../ref/models/database-functions.txt:1716
msgid ""
"Comparable to ``RowNumber``, this function ranks rows in the window. The "
"computed rank contains gaps. Use :class:`DenseRank` to compute rank without "
"gaps."
msgstr ""

#: ../../ref/models/database-functions.txt:1721
msgid "``RowNumber``"
msgstr ""

#: ../../ref/models/database-functions.txt:1725
msgid ""
"Computes the row number according to the ordering of either the frame clause "
"or the ordering of the whole query if there is no partitioning of the :ref:"
"`window frame <window-frames>`."
msgstr ""
