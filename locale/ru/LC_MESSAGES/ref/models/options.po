# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2013, 2014, 2015, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-05 11:28+0300\n"
"PO-Revision-Date: 2016-03-17 16:02+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# d258a73cb4544c7daff9c6f339fbfbcc
#: ../../ref/models/options.txt:3
msgid "Model ``Meta`` options"
msgstr "Параметры модели"

# 4b583de99e6e4b16878d9c6a2a208a0e
#: ../../ref/models/options.txt:5
msgid ""
"This document explains all the possible :ref:`metadata options <meta-"
"options>` that you can give your model in its internal ``class Meta``."
msgstr ""
"Этот раздел описывает все возможные :ref:`настройки модели <meta-options>` "
"которые вы можете определить через ``class Meta``."

# ff4bd6e0c6254170bda3ba35707df9e4
#: ../../ref/models/options.txt:10
msgid "Available ``Meta`` options"
msgstr "Параметры ``Meta``"

# 7eb908962e064fd5af7eaf9d2fbe5ecc
#: ../../ref/models/options.txt:15
msgid "``abstract``"
msgstr "``abstract``"

# 5dff99ca9f7b49e2a69c1402cc1c4b5a
#: ../../ref/models/options.txt:19
msgid ""
"If ``abstract = True``, this model will be an :ref:`abstract base class "
"<abstract-base-classes>`."
msgstr ""
"При ``abstract = True``, эта модель будет :ref:`абстрактной моделью "
"<abstract-base-classes>`."

# 9b0631d9ac424ef78a2bbdf87ffdfe0e
#: ../../ref/models/options.txt:23
msgid "``app_label``"
msgstr "``app_label``"

#: ../../ref/models/options.txt:27
msgid ""
"If a model is defined outside of an application in :setting:"
"`INSTALLED_APPS`, it must declare which app it belongs to::"
msgstr ""
"Если модель определена вне приложения из :setting:`INSTALLED_APPS`, она "
"должна указать к какому приложению она относится::"

#: ../../ref/models/options.txt:32
msgid ""
"If you want to represent a model with the format ``app_label.object_name`` "
"or ``app_label.model_name`` you can use ``model._meta.label`` or ``model."
"_meta.label_lower`` respectively."
msgstr ""
"Если вы хотите представить модель в формате ``app_label.object_name`` или "
"``app_label.model_name``, вы можете использовать ``model._meta.label`` и "
"``model._meta.label_lower`` соответственно."

# f0786eee219f40278f3335648355fe54
#: ../../ref/models/options.txt:37
#, fuzzy
msgid "``base_manager_name``"
msgstr "``verbose_name``"

#: ../../ref/models/options.txt:43
msgid ""
"The name of the manager to use for the model's :attr:`~django.db.models."
"Model._base_manager`."
msgstr ""

# 0c5bb9f034914b9eb4c722bec10c57fb
#: ../../ref/models/options.txt:47
msgid "``db_table``"
msgstr "``db_table``"

# 64e96f22f8e54c1d80a78c1240dfcb7a
#: ../../ref/models/options.txt:51
msgid "The name of the database table to use for the model::"
msgstr "Название таблицы в базе данных для этой модели::"

# c101f9cca056486a961e8a1346edb032
#: ../../ref/models/options.txt:58
msgid "Table names"
msgstr "Название таблицы"

# c38ab2f15caa4f11a3e1e4992c73c4f0
#: ../../ref/models/options.txt:60
msgid ""
"To save you time, Django automatically derives the name of the database "
"table from the name of your model class and the app that contains it. A "
"model's database table name is constructed by joining the model's \"app label"
"\" -- the name you used in :djadmin:`manage.py startapp <startapp>` -- to "
"the model's class name, with an underscore between them."
msgstr ""
"Экономя ваше время, Django автоматически создаст название таблицы из "
"названия модели и приложения. Название таблицы состоит из названия "
"приложения(\"app label\") -- название используемое для команды :djadmin:"
"`manage.py startapp <startapp>` -- и названия модели, объединенные нижним "
"подчеркиванием."

# d3c57a4a33c34c4ea23ec6788bf826a3
#: ../../ref/models/options.txt:66
msgid ""
"For example, if you have an app ``bookstore`` (as created by ``manage.py "
"startapp bookstore``), a model defined as ``class Book`` will have a "
"database table named ``bookstore_book``."
msgstr ""
"Например, есть приложение ``bookstore`` (созданное командой ``manage.py "
"startapp bookstore``), и модель ``class Book``, название таблицы будет "
"``bookstore_book``."

# e34d0723d0144eaea877f0b0c6d0ffad
#: ../../ref/models/options.txt:70
msgid ""
"To override the database table name, use the ``db_table`` parameter in "
"``class Meta``."
msgstr ""
"Для переопределения названия таблицы используйте атрибут ``db_table`` "
"``class Meta``."

# 1f4d945d304b42848b0556206c8a96aa
#: ../../ref/models/options.txt:73
msgid ""
"If your database table name is an SQL reserved word, or contains characters "
"that aren't allowed in Python variable names -- notably, the hyphen -- "
"that's OK. Django quotes column and table names behind the scenes."
msgstr ""
"Если имя колонки это зарезервированное SQL слово, или содержит символы "
"запрещенные в названиях переменной в Python – в частности, дефис – все "
"нормально. Django автоматически экранирует название колонок и таблиц."

# 4f3414456d264cfd93238c85f4561795
#: ../../ref/models/options.txt:77
msgid "Use lowercase table names for MySQL"
msgstr "Используйте нижний регистр для названий таблиц в MySQL"

# 7edc74b87d314e8fb44bbb7214172ba7
#: ../../ref/models/options.txt:79
msgid ""
"It is strongly advised that you use lowercase table names when you override "
"the table name via ``db_table``, particularly if you are using the MySQL "
"backend. See the :ref:`MySQL notes <mysql-notes>` for more details."
msgstr ""
"Настоятельно рекомендуем использовать нижний регистр при переопределении "
"названия таблицы через ``db_table``, особенно при использовании MySQL. "
"Подробности в :ref:`примечания для MySQL <mysql-notes>`."

# a9416d688b14425fa04c6b030990c308
#: ../../ref/models/options.txt:83
msgid "Table name quoting for Oracle"
msgstr "Названия таблиц в кавычках для Oracle"

# b72d6d6ae6a94aa593a2c546547bb942
#: ../../ref/models/options.txt:85
msgid ""
"In order to meet the 30-char limitation Oracle has on table names, and match "
"the usual conventions for Oracle databases, Django may shorten table names "
"and turn them all-uppercase. To prevent such transformations, use a quoted "
"name as the value for ``db_table``::"
msgstr ""
"Т.к в Oracle есть ограничение в 30 символов на название таблиц, и для "
"соблюдения соглашений работы с Oracle, Django может ограничить название "
"таблицы и преобразовать его в верхний регистр. Чтобы избежать этого, укажите "
"название в кавычках в настройке ``db_table``::"

# 438fe74045c6416da10fa753694df710
#: ../../ref/models/options.txt:92
msgid ""
"Such quoted names can also be used with Django's other supported database "
"backends; except for Oracle, however, the quotes have no effect. See the :"
"ref:`Oracle notes <oracle-notes>` for more details."
msgstr ""
"Кавычки можно использовать для других типов базы данных, не только Oracle, "
"однако, они не будут иметь никакого эффекта. Смотрите :ref:`заметки о работе "
"с Oracle <oracle-notes>`."

# 14dfec7e126b46ac9dec2dc51fd5d564
#: ../../ref/models/options.txt:97
msgid "``db_tablespace``"
msgstr "``db_tablespace``"

# d512eec6e3904a94b36cab736e61e1a7
#: ../../ref/models/options.txt:101
msgid ""
"The name of the :doc:`database tablespace </topics/db/tablespaces>` to use "
"for this model. The default is the project's :setting:`DEFAULT_TABLESPACE` "
"setting, if set. If the backend doesn't support tablespaces, this option is "
"ignored."
msgstr ""
"Имя :doc:`“tablespace” базы данных </topics/db/tablespaces>` для этой "
"модели. По умолчанию используется настройка :setting:`DEFAULT_TABLESPACE`, "
"если она определена. Если база данных не поддерживает “tablespace” для "
"индексов, этот параметр будет проигнорирован."

# f0786eee219f40278f3335648355fe54
#: ../../ref/models/options.txt:107
#, fuzzy
msgid "``default_manager_name``"
msgstr "``default_related_name``"

#: ../../ref/models/options.txt:113
msgid ""
"The name of the manager to use for the model's :attr:`~django.db.models."
"Model._default_manager`."
msgstr ""

# f0786eee219f40278f3335648355fe54
#: ../../ref/models/options.txt:117
msgid "``default_related_name``"
msgstr "``default_related_name``"

#: ../../ref/models/options.txt:121
msgid ""
"The name that will be used by default for the relation from a related object "
"back to this one. The default is ``<model_name>_set``."
msgstr ""
"Название, которое будет использоваться для обратных связей к этой модели. По "
"умолчанию ``<model_name>_set``."

#: ../../ref/models/options.txt:124
msgid "This option also sets :attr:`~ForeignKey.related_query_name`."
msgstr ""

#: ../../ref/models/options.txt:126
msgid ""
"As the reverse name for a field should be unique, be careful if you intend "
"to subclass your model. To work around name collisions, part of the name "
"should contain ``'%(app_label)s'`` and ``'%(model_name)s'``, which are "
"replaced respectively by the name of the application the model is in, and "
"the name of the model, both lowercased. See the paragraph on :ref:`related "
"names for abstract models <abstract-related-name>`."
msgstr ""
"Т.к. название поля обратной связи должно быть уникальным, будьте осторожны, "
"если собираетесь наследоваться от модели. Чтобы избежать коллизий в "
"названиях, можно добавить ``'%(app_label)s'`` и ``'%(model_name)s'``, "
"которые будут заменены соответственно на название приложения модели и "
"название модели в нижнем регистре. Смотрите :ref:`именование обратных связей "
"для абстрактных моделей <abstract-related-name>`."

#: ../../ref/models/options.txt:135
msgid ""
"This attribute now affects ``related_query_name``. The old query lookup name "
"is deprecated::"
msgstr ""

# df1ca5ea1a274bd38d0434b3279380c4
#: ../../ref/models/options.txt:158
msgid "``get_latest_by``"
msgstr "``get_latest_by``"

# d6d9744f8ca948e4b853b798187c0cbc
#: ../../ref/models/options.txt:162
msgid ""
"The name of an orderable field in the model, typically a :class:"
"`DateField`, :class:`DateTimeField`, or :class:`IntegerField`. This "
"specifies the default field to use in your model :class:`Manager`’s :meth:"
"`~django.db.models.query.QuerySet.latest` and :meth:`~django.db.models.query."
"QuerySet.earliest` methods."
msgstr ""
"Название сортируемого поля модели, обычно :class:`DateField`, :class:"
"`DateTimeField` или :class:`IntegerField`. Определяет поле по умолчанию, "
"которое будет использовано методами :meth:`~django.db.models.query.QuerySet."
"latest` и :meth:`~django.db.models.query.QuerySet.earliest` :class:`Manager`-"
"а модели."

# d7e0f4e5ed854172bfd09464a7c38e78
#: ../../ref/models/options.txt:168
msgid "Example::"
msgstr "Например::"

# d4ead685278a48e28b5a7a90ce4f339c
#: ../../ref/models/options.txt:172
msgid "See the :meth:`~django.db.models.query.QuerySet.latest` docs for more."
msgstr ""
"Подробности в разделе о :meth:`~django.db.models.query.QuerySet.latest`."

# b66c0b57595b4ed2b61d3b2194e6900c
#: ../../ref/models/options.txt:175
msgid "``managed``"
msgstr "``managed``"

# 57498771df3d42cf9c860174bfe7c567
#: ../../ref/models/options.txt:179
msgid ""
"Defaults to ``True``, meaning Django will create the appropriate database "
"tables in :djadmin:`migrate` or as part of migrations and remove them as "
"part of a :djadmin:`flush` management command. That is, Django *manages* the "
"database tables' lifecycles."
msgstr ""
"По умолчанию ``True``, означает что Django создаст необходимые таблицы в "
"базе данных при выполнении команды :djadmin:`migrate` и удалит их при "
"выполнении :djadmin:`flush`. То есть Django *управляет* таблицами."

# 90a61f3fc4d949f9aec68c74e4fee5d6
#: ../../ref/models/options.txt:184
msgid ""
"If ``False``, no database table creation or deletion operations will be "
"performed for this model. This is useful if the model represents an existing "
"table or a database view that has been created by some other means. This is "
"the *only* difference when ``managed=False``. All other aspects of model "
"handling are exactly the same as normal. This includes"
msgstr ""
"При ``False``, таблицы модели не будет создаваться или удаляться. Это "
"полезно, если модель отображает существующую таблицу или \"VIEW\" в базе "
"данных, которая была создана другим способом. Это *единственная* разница при "
"``managed=False``. Все остальные этапы работы с моделью не изменяются. Они "
"включают"

# 5e9d4e709c694feebe3e6be55a659900
#: ../../ref/models/options.txt:190
msgid ""
"Adding an automatic primary key field to the model if you don't declare it.  "
"To avoid confusion for later code readers, it's recommended to specify all "
"the columns from the database table you are modeling when using unmanaged "
"models."
msgstr ""
"Автоматическое добавление первичного ключа, если он не был определен.  Для "
"ясности лучше определить в модели все поля таблицы, которую отображает "
"модель с `managed=False``."

# 32e23ac9bf4f430dad9044aae7ce2923
#: ../../ref/models/options.txt:195
msgid ""
"If a model with ``managed=False`` contains a :class:`~django.db.models."
"ManyToManyField` that points to another unmanaged model, then the "
"intermediate table for the many-to-many join will also not be created. "
"However, the intermediary table between one managed and one unmanaged model "
"*will* be created."
msgstr ""
"Если модель с ``managed=False`` содержит :class:`~django.db.models."
"ManyToManyField` на другую неуправляемую модель, промежуточная таблица для "
"хранения связи многое-ко-многим не будет создана. Однако, промежуточная "
"таблица между управляемой и не управляемой моделью *будет* создана."

# c4018d33e65b4783a6d4e27665d9fa3c
#: ../../ref/models/options.txt:201
msgid ""
"If you need to change this default behavior, create the intermediary table "
"as an explicit model (with ``managed`` set as needed) and use the :attr:"
"`ManyToManyField.through` attribute to make the relation use your custom "
"model."
msgstr ""
"Если вы хотите переопределить такое поведение по умолчанию, создайте модель "
"для промежуточной таблицы (с необходимым ``managed``) и укажите "
"использование этой модели через параметр :attr:`ManyToManyField.through`."

# 861a2585096440fba645b44d8ad68878
#: ../../ref/models/options.txt:206
msgid ""
"For tests involving models with ``managed=False``, it's up to you to ensure "
"the correct tables are created as part of the test setup."
msgstr ""
"Правильное создание таблиц при тестировании в тестовой базе данных для "
"модели с ``managed=False`` ложится на ваши плечи."

# 0009477403e1456b95ea40cbcae01687
#: ../../ref/models/options.txt:209
msgid ""
"If you're interested in changing the Python-level behavior of a model class, "
"you *could* use ``managed=False`` and create a copy of an existing model. "
"However, there's a better approach for that situation: :ref:`proxy-models`."
msgstr ""
"Если вы хотите переопределить поведение модели на уровне Python, вы *можете* "
"использовать ``managed=False`` и создать копию существующей модели. Однако, "
"есть лучшее решение для такой ситуации: :ref:`proxy-models`."

# 26e37df93c814b3b9f803a843d8d4d2d
#: ../../ref/models/options.txt:214
msgid "``order_with_respect_to``"
msgstr "``order_with_respect_to``"

# 4002cd1d348744bbbf1c0008b896b268
#: ../../ref/models/options.txt:218
msgid ""
"Makes this object orderable with respect to the given field, usually a "
"``ForeignKey``. This can be used to make related objects orderable with "
"respect to a parent object. For example, if an ``Answer`` relates to a "
"``Question`` object, and a question has more than one answer, and the order "
"of answers matters, you'd do this::"
msgstr ""
"Объекты модели будут отсортированы относительно указанного поля. Почти "
"всегда используется для ``ForeignKey``. Можно использовать для сортировки "
"связанных объектов по значению из родительского объекта. Например, модель "
"``Answer``(ответ) связана с моделью ``Question``(вопрос) через "
"``ForeignKey``, вопрос содержит несколько ответов и порядок этих ответов "
"имеет значение::"

# e6dd93aa5e7943dcbcfe30f2df8c6143
#: ../../ref/models/options.txt:237
msgid ""
"When ``order_with_respect_to`` is set, two additional methods are provided "
"to retrieve and to set the order of the related objects: "
"``get_RELATED_order()`` and ``set_RELATED_order()``, where ``RELATED`` is "
"the lowercased model name. For example, assuming that a ``Question`` object "
"has multiple related ``Answer`` objects, the list returned contains the "
"primary keys of the related ``Answer`` objects::"
msgstr ""
"При добавлении ``order_with_respect_to``, будет добавлено два дополнительных "
"метода для получения и установки порядка связанных объектов: "
"``get_RELATED_order()`` и ``set_RELATED_order()``, где ``RELATED`` название "
"модели в нижнем регистре. Например, предполагая что объект ``Question`` "
"имеет несколько связанных объектов ``Answer``, возвращенный список будет "
"содержать значения первичного ключа объектов ``Answer``::"

# 4dac0ca321864f5ba32b44e27c3b48e2
#: ../../ref/models/options.txt:248
msgid ""
"The order of a ``Question`` object's related ``Answer`` objects can be set "
"by passing in a list of ``Answer`` primary keys::"
msgstr ""
"Для определения порядка объектов ``Answer`` передайте список первичных "
"ключей в метод ``set_answer_order``::"

# a7f22e9f75dc4bb5b4034aa6fe7baab5
#: ../../ref/models/options.txt:253
msgid ""
"The related objects also get two methods, ``get_next_in_order()`` and "
"``get_previous_in_order()``, which can be used to access those objects in "
"their proper order. Assuming the ``Answer`` objects are ordered by ``id``::"
msgstr ""
"К связанным объектам также добавляется два метода, ``get_next_in_order()`` и "
"``get_previous_in_order()``, для получения объектов в определенном порядке. "
"Предположим что объекты ``Answer`` отсортированы по ``id``::"

#: ../../ref/models/options.txt:263
msgid "``order_with_respect_to`` implicitly sets the ``ordering`` option"
msgstr "``order_with_respect_to`` неявно использует ``ordering``"

#: ../../ref/models/options.txt:265
msgid ""
"Internally, ``order_with_respect_to`` adds an additional field/database "
"column named ``_order`` and sets the model's :attr:`~Options.ordering` "
"option to this field. Consequently, ``order_with_respect_to`` and "
"``ordering`` cannot be used together, and the ordering added by "
"``order_with_respect_to`` will apply whenever you obtain a list of objects "
"of this model."
msgstr ""
"Внутри ``order_with_respect_to`` добавляет колонку в базе данных ``_order`` "
"и указывает её в опции модели :attr:`~Options.ordering`. Поэтому "
"``order_with_respect_to`` и ``ordering`` не могут использоваться вместе, и "
"сортировка из ``order_with_respect_to`` будет использоваться при любом "
"получении объектов модели."

# 26e37df93c814b3b9f803a843d8d4d2d
#: ../../ref/models/options.txt:272
msgid "Changing ``order_with_respect_to``"
msgstr "Изменение ``order_with_respect_to``"

# 817102734fc7484cbe3ebbad76b9f146
#: ../../ref/models/options.txt:274
msgid ""
"Because ``order_with_respect_to`` adds a new database column, be sure to "
"make and apply the appropriate migrations if you add or change "
"``order_with_respect_to`` after your initial :djadmin:`migrate`."
msgstr ""
"Т.к. ``order_with_respect_to`` добавляет дополнительное поле в таблицу базы "
"данных с названием ``_order``, не забудьте создать и применить миграцию, "
"если вы добавите или поменяете ``order_with_respect_to`` первого запуска "
"после :djadmin:`migrate`."

# 08d9f2d090eb472b811e1b94ac78828d
#: ../../ref/models/options.txt:279
msgid "``ordering``"
msgstr "``ordering``"

# bf653ec507fb430fa04d0a0261c18309
#: ../../ref/models/options.txt:283
msgid ""
"The default ordering for the object, for use when obtaining lists of "
"objects::"
msgstr "Сортировка по умолчанию используемая при получении объектов::"

# 626f80acb9044cb0a7566d0e5ae0ecf5
#: ../../ref/models/options.txt:287
msgid ""
"This is a tuple or list of strings. Each string is a field name with an "
"optional \"-\" prefix, which indicates descending order. Fields without a "
"leading \"-\" will be ordered ascending. Use the string \"?\" to order "
"randomly."
msgstr ""
"Это кортеж или список строк. Каждая строка это название поля с "
"необязательным префиксом \"-\", который указывает на нисходящую сортировку. "
"Поля без \"-\" будут отсортированы по возрастанию. Используйте \"?\" для "
"случайной сортировке."

# f7d883c4e7884bc188f0507e6d1b9389
#: ../../ref/models/options.txt:291
msgid "For example, to order by a ``pub_date`` field ascending, use this::"
msgstr "Например, для сортировки по возрастанию по полю ``pub_date``::"

# 7d4afbb578cc467883a5e6937561afeb
#: ../../ref/models/options.txt:295
msgid "To order by ``pub_date`` descending, use this::"
msgstr "Нисходящая сортировка по полю  ``pub_date``::"

# 12fee70873df40c3961688e223c1c337
#: ../../ref/models/options.txt:299
msgid ""
"To order by ``pub_date`` descending, then by ``author`` ascending, use this::"
msgstr ""
"Для нисходящей сортировки по ``pub_date`` и восходящей по ``author``, "
"используйте::"

#: ../../ref/models/options.txt:303
msgid ""
"Default ordering also affects :ref:`aggregation queries <aggregation-"
"ordering-interaction>`."
msgstr ""

# 3ee836e1106b4860b10768d570bc33af
#: ../../ref/models/options.txt:308
msgid ""
"Ordering is not a free operation. Each field you add to the ordering incurs "
"a cost to your database. Each foreign key you add will implicitly include "
"all of its default orderings as well."
msgstr ""
"Сортировка не бесплатная операция. Каждое поле влияет на скорость выполнения "
"запроса. Каждый внешний ключ добавит сортировку по умолчанию связанной "
"модели."

#: ../../ref/models/options.txt:312
msgid ""
"If a query doesn't have an ordering specified, results are returned from the "
"database in an unspecified order. A particular ordering is guaranteed only "
"when ordering by a set of fields that uniquely identify each object in the "
"results. For example, if a ``name`` field isn't unique, ordering by it won't "
"guarantee objects with the same name always appear in the same order."
msgstr ""

# 3f436714fa86457e9026d112815f178b
#: ../../ref/models/options.txt:319
msgid "``permissions``"
msgstr "``permissions``"

# d70c8df1a8974962869fdf9fec4749c3
#: ../../ref/models/options.txt:323
msgid ""
"Extra permissions to enter into the permissions table when creating this "
"object. Add, delete and change permissions are automatically created for "
"each model. This example specifies an extra permission, "
"``can_deliver_pizzas``::"
msgstr ""
"Дополнительные разрешения(permissions) будут добавлены в таблицу разрешений "
"при создании модели. Разрешения на добавление, удаление и изменение "
"автоматически создаются для каждой модели. Этот пример добавляет разрешение "
"``can_deliver_pizzas``::"

# ffd966d0011f4ee09ba92913f0a3e281
#: ../../ref/models/options.txt:329
msgid ""
"This is a list or tuple of 2-tuples in the format ``(permission_code, "
"human_readable_permission_name)``."
msgstr ""
"Это список 2-х элементных кортежей в формате ``(код разрешения, название "
"разрешения)``."

# 3f436714fa86457e9026d112815f178b
#: ../../ref/models/options.txt:333
msgid "``default_permissions``"
msgstr "``default_permissions``"

# a883d7f2cae44477a04726cd321231f9
#: ../../ref/models/options.txt:337
msgid ""
"Defaults to ``('add', 'change', 'delete')``. You may customize this list, "
"for example, by setting this to an empty list if your app doesn't require "
"any of the default permissions. It must be specified on the model before the "
"model is created by :djadmin:`migrate` in order to prevent any omitted "
"permissions from being created."
msgstr ""
"По умолчанию ``('add', 'change', 'delete')``. Вы можете поменять этот "
"список, например, указав пустой список, если ваше приложение не требует "
"никаких прав доступа. Необходимо указать в модели перед тем, как она будет "
"создана командой :djadmin:`migrate`."

# 7484421d0da643e9bcd3ba6ebf2e4d3c
#: ../../ref/models/options.txt:344
msgid "``proxy``"
msgstr "``proxy``"

# f24b020f818f4e1a8de7ed51b066078a
#: ../../ref/models/options.txt:348
msgid ""
"If ``proxy = True``, a model which subclasses another model will be treated "
"as a :ref:`proxy model <proxy-models>`."
msgstr ""
"При ``proxy = True``, модель унаследованная от другой модели будет создана "
"как :ref:`proxy-модель <proxy-models>`."

#: ../../ref/models/options.txt:352
msgid "``required_db_features``"
msgstr "``required_db_features``"

#: ../../ref/models/options.txt:356
msgid ""
"List of database features that the current connection should have so that "
"the model is considered during the migration phase. For example, if you set "
"this list to ``['gis_enabled']``, the model will only be synchronized on GIS-"
"enabled databases. It's also useful to skip some models when testing with "
"several database backends. Avoid relations between models that may or may "
"not be created as the ORM doesn't handle this."
msgstr ""
"Список функций базы данных, который необходимы для работы модели. "
"Учитываются при миграции. Например, если указать ``['gis_enabled']``, "
"таблица для модели будет создана только для базы данных, которая "
"поддерживает GIS. Эта опция также полезна при тестировании на разных базах "
"данных. Избегайте связей между моделями, которые не могут быть созданы в "
"одной базе данных. ORM не умеет обрабатывать такие ситуации."

#: ../../ref/models/options.txt:364
msgid "``required_db_vendor``"
msgstr "``required_db_vendor``"

#: ../../ref/models/options.txt:368
msgid ""
"Name of a supported database vendor that this model is specific to. Current "
"built-in vendor names are: ``sqlite``, ``postgresql``, ``mysql``, "
"``oracle``. If this attribute is not empty and the current connection vendor "
"doesn't match it, the model will not be synchronized."
msgstr ""
"Список поддерживаемых баз данных. Текущий список: ``sqlite``, "
"``postgresql``, ``mysql``, ``oracle``. Если эта опция не пустая, и база "
"данных не соответствует указанной, таблица для модели не будет создана при "
"миграции."

# 6671f64da69448f885651db539422937
#: ../../ref/models/options.txt:374
msgid "``select_on_save``"
msgstr "``select_on_save``"

# 11645f21efb44ed6a461cdf2f418e4c7
#: ../../ref/models/options.txt:378
msgid ""
"Determines if Django will use the pre-1.6 :meth:`django.db.models.Model."
"save()` algorithm. The old algorithm uses ``SELECT`` to determine if there "
"is an existing row to be updated. The new algorithm tries an ``UPDATE`` "
"directly. In some rare cases the ``UPDATE`` of an existing row isn't visible "
"to Django. An example is the PostgreSQL ``ON UPDATE`` trigger which returns "
"``NULL``. In such cases the new algorithm will end up doing an ``INSERT`` "
"even when a row exists in the database."
msgstr ""
"Указывает использовать ли старый(до 1.6) алгоритм работы :meth:`django.db."
"models.Model.save()`. Старый алгоритм использовал ``SELECT`` для определения "
"существует ли запись для обновления. Новый алгоритм сразу пробует обновить "
"запись через ``UPDATE``. В некоторых редких случаях ``UPDATE`` существующей "
"записи не виден для Django. Например, в PostgreSQL срабатывание ``ON "
"UPDATE`` возвращает ``NULL``. В таких случаях новый алгоритм в конце концов "
"попытается выполнить ``INSERT``, даже если запись существует в базе данных."

# c712d072601c4f9eb7bb2f60b6399a49
#: ../../ref/models/options.txt:387
msgid ""
"Usually there is no need to set this attribute. The default is ``False``."
msgstr ""
"Обычно нет надобности менять эту настройку. По умолчанию равно ``False``."

# 50283c94bd954028a3ddf42a66d6600a
#: ../../ref/models/options.txt:390
msgid ""
"See :meth:`django.db.models.Model.save()` for more about the old and new "
"saving algorithm."
msgstr ""
"Различия работы старого и нового алгоритмов смотрите в описании метода :meth:"
"`django.db.models.Model.save()`."

# 570a63d83dc4413db0c54dc9b126eb4b
#: ../../ref/models/options.txt:394
#, fuzzy
msgid "``indexes``"
msgstr "``index_together``"

#: ../../ref/models/options.txt:400
msgid ""
"A list of :doc:`indexes </ref/models/indexes>` that you want to define on "
"the model::"
msgstr ""

# 570a63d83dc4413db0c54dc9b126eb4b
#: ../../ref/models/options.txt:416
msgid "``unique_together``"
msgstr "``unique_together``"

# 9ce0a8c1c125456c88751f41fb87c811
#: ../../ref/models/options.txt:420
msgid "Sets of field names that, taken together, must be unique::"
msgstr "Множество полей, комбинация значений которых должна быть уникальна::"

# 4f1a6373c1ff4a5e922c91c30bf7c858
#: ../../ref/models/options.txt:424
msgid ""
"This is a tuple of tuples that must be unique when considered together. It's "
"used in the Django admin and is enforced at the database level (i.e., the "
"appropriate ``UNIQUE`` statements are included in the ``CREATE TABLE`` "
"statement)."
msgstr ""
"Кортеж кортежей полей, которые должны быть вместе уникальны. Используется в "
"интерфейсе администратора для проверки данных и на уровне базы данных (то "
"есть соответствующее определение ``UNIQUE`` будет добавлено в ``CREATE "
"TABLE`` запрос)."

# 86c0ff01812946379d5c7d1b1723e66e
#: ../../ref/models/options.txt:429
msgid ""
"For convenience, unique_together can be a single tuple when dealing with a "
"single set of fields::"
msgstr ""
"Для удобства ``unique_together`` может быть одноуровневым  списком, если "
"определяется один набор уникальных полей::"

# 3b89bc7cb2bb455a8968ece208f66766
#: ../../ref/models/options.txt:434
msgid ""
"A :class:`~django.db.models.ManyToManyField` cannot be included in "
"unique_together. (It's not clear what that would even mean!) If you need to "
"validate uniqueness related to a :class:`~django.db.models.ManyToManyField`, "
"try using a signal or an explicit :attr:`through <ManyToManyField.through>` "
"model."
msgstr ""
":class:`~django.db.models.ManyToManyField` не должен быть включен в "
"``unique_together``. (Не понятно что подразумевается.) Если вам необходимо "
"проверить уникальность связанных через :class:`~django.db.models."
"ManyToManyField` объектов, попробуйте использовать сигналы или подходящую :"
"attr:`through <ManyToManyField.through>` model."

# 74b047e77a1148f58aa693ac04cbd07b
#: ../../ref/models/options.txt:440
msgid ""
"The ``ValidationError`` raised during model validation when the constraint "
"is violated has the ``unique_together`` error code."
msgstr ""
"Будет вызвано исключение ``ValidationError`` в процессе проверки модели, "
"если проверка ограничений(constraint) вернула ошибку с кодом "
"``unique_together``."

# 570a63d83dc4413db0c54dc9b126eb4b
#: ../../ref/models/options.txt:444
msgid "``index_together``"
msgstr "``index_together``"

# 9ce0a8c1c125456c88751f41fb87c811
#: ../../ref/models/options.txt:448
msgid "Sets of field names that, taken together, are indexed::"
msgstr "Множество полей, для которых создается один индекс::"

# 313ad982f1644a679359d3b7e670236e
#: ../../ref/models/options.txt:454
msgid ""
"This list of fields will be indexed together (i.e. the appropriate ``CREATE "
"INDEX`` statement will be issued.)"
msgstr ""
"Будет создан один индекс для группы полей (то есть будет выполнен "
"необходимый ``CREATE INDEX``.)"

# 86c0ff01812946379d5c7d1b1723e66e
#: ../../ref/models/options.txt:457
msgid ""
"For convenience, ``index_together`` can be a single list when dealing with a "
"single set of fields::"
msgstr ""
"Для удобства ``index_together`` может быть одноуровневым  списком, если "
"определяется один набор полей::"

# f0786eee219f40278f3335648355fe54
#: ../../ref/models/options.txt:463
msgid "``verbose_name``"
msgstr "``verbose_name``"

# 564d85dce8d34b15977642496f9dc349
#: ../../ref/models/options.txt:467
msgid "A human-readable name for the object, singular::"
msgstr "Читабельное название модели, в единственном числе::"

# 67ff1759f19a4da89453f44656b84618
#: ../../ref/models/options.txt:471
msgid ""
"If this isn't given, Django will use a munged version of the class name: "
"``CamelCase`` becomes ``camel case``."
msgstr ""
"Если не указано, Django создаст из названия модели: ``CamelCase`` станет "
"``camel case``."

# 4e8194e1af334532817d25ddd62aa1de
#: ../../ref/models/options.txt:475
msgid "``verbose_name_plural``"
msgstr "``verbose_name_plural``"

# 2dcc199c32f44a23865b844905039002
#: ../../ref/models/options.txt:479
msgid "The plural name for the object::"
msgstr "Название модели в множественном числе::"

# dbe859f3b1e94cb5b340f67606f8d479
#: ../../ref/models/options.txt:483
msgid ""
"If this isn't given, Django will use :attr:`~Options.verbose_name` + ``\"s"
"\"``."
msgstr ""
"Если не указано, Django создаст по правилу :attr:`~Options.verbose_name` + ``"
"\"s\"``."

#: ../../ref/models/options.txt:486
msgid "Read-only ``Meta`` attributes"
msgstr "Неизменяемые атрибуты ``Meta``"

# 9b0631d9ac424ef78a2bbdf87ffdfe0e
#: ../../ref/models/options.txt:489
msgid "``label``"
msgstr "``label``"

#: ../../ref/models/options.txt:493
msgid ""
"Representation of the object, returns ``app_label.object_name``, e.g. "
"``'polls.Question'``."
msgstr ""
"Представление объекта, возвращает ``app_label.object_name``, например "
"``'polls.Question'``."

# 9b0631d9ac424ef78a2bbdf87ffdfe0e
#: ../../ref/models/options.txt:497
msgid "``label_lower``"
msgstr "``label_lower``"

#: ../../ref/models/options.txt:501
msgid ""
"Representation of the model, returns ``app_label.model_name``, e.g. ``'polls."
"question'``."
msgstr ""
"Представление объекта, возвращает ``app_label.model_name``, например "
"``'polls.question'``."

# 0b794b58c4fb4977b094107ee2471389
#~ msgid ""
#~ "If a model exists outside of the standard locations (:file:`models.py` or "
#~ "a ``models`` package in an app), the model must define which app it is "
#~ "part of::"
#~ msgstr ""
#~ "Если модель находится не в стандартной локации (:file:`models.py` или "
#~ "пакет ``models`` приложения), модель должна определять к какому "
#~ "приложению она принадлежит::"

# 7749b3817bca4eb3ac8b5c122d383f87
#~ msgid ""
#~ "``app_label`` is no longer required for models that are defined outside "
#~ "the ``models`` module of an application."
#~ msgstr ""
#~ "``app_label`` больше не обязательный параметр для моделей, которые "
#~ "находятся вне модуля ``models`` приложения."
