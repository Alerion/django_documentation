# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-03 16:48+0300\n"
"PO-Revision-Date: 2017-04-05 11:28+0300\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../ref/models/indexes.txt:3
msgid "Model index reference"
msgstr ""

#: ../../ref/models/indexes.txt:9
msgid ""
"Index classes ease creating database indexes. They can be added using the :"
"attr:`Meta.indexes <django.db.models.Options.indexes>` option. This document "
"explains the API references of :class:`Index` which includes the `index "
"options`_."
msgstr ""

#: ../../ref/models/indexes.txt:14
msgid "Referencing built-in indexes"
msgstr ""

#: ../../ref/models/indexes.txt:16
msgid ""
"Indexes are defined in ``django.db.models.indexes``, but for convenience "
"they're imported into :mod:`django.db.models`. The standard convention is to "
"use ``from django.db import models`` and refer to the indexes as ``models."
"<IndexClass>``."
msgstr ""

#: ../../ref/models/indexes.txt:22
msgid "``Index`` options"
msgstr ""

#: ../../ref/models/indexes.txt:26
msgid "Creates an index (B-Tree) in the database."
msgstr ""

#: ../../ref/models/indexes.txt:29
msgid "``fields``"
msgstr ""

#: ../../ref/models/indexes.txt:33
msgid ""
"A list or tuple of the name of the fields on which the index is desired."
msgstr ""

#: ../../ref/models/indexes.txt:35
msgid ""
"By default, indexes are created with an ascending order for each column. To "
"define an index with a descending order for a column, add a hyphen before "
"the field's name."
msgstr ""

#: ../../ref/models/indexes.txt:39
msgid ""
"For example ``Index(fields=['headline', '-pub_date'])`` would create SQL "
"with ``(headline, pub_date DESC)``. Index ordering isn't supported on MySQL. "
"In that case, a descending index is created as a normal index."
msgstr ""

#: ../../ref/models/indexes.txt:45
msgid "Older versions don't accept a tuple."
msgstr ""

#: ../../ref/models/indexes.txt:48
msgid "``name``"
msgstr ""

#: ../../ref/models/indexes.txt:52
msgid ""
"The name of the index. If ``name`` isn't provided Django will auto-generate "
"a name. For compatibility with different databases, index names cannot be "
"longer than 30 characters and shouldn't start with a number (0-9) or "
"underscore (_)."
msgstr ""

#: ../../ref/models/indexes.txt:57
msgid "``db_tablespace``"
msgstr ""

#: ../../ref/models/indexes.txt:63
msgid ""
"The name of the :doc:`database tablespace </topics/db/tablespaces>` to use "
"for this index. For single field indexes, if ``db_tablespace`` isn't "
"provided, the index is created in the ``db_tablespace`` of the field."
msgstr ""

#: ../../ref/models/indexes.txt:67
msgid ""
"If :attr:`.Field.db_tablespace` isn't specified (or if the index uses "
"multiple fields), the index is created in tablespace specified in the :attr:"
"`~django.db.models.Options.db_tablespace` option inside the model's ``class "
"Meta``. If neither of those tablespaces are set, the index is created in the "
"same tablespace as the table."
msgstr ""

#: ../../ref/models/indexes.txt:75
msgid ""
"For a list of PostgreSQL-specific indexes, see :mod:`django.contrib.postgres."
"indexes`."
msgstr ""
