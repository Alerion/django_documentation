# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
# redvi <liberty195@gmail.com>, 2013, 2014, 2015, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2020-05-28 11:38+0300\n"
"Last-Translator: Ruslan Popov <ruslan.popov@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Poedit 2.3\n"

# 52e2a0e346c342469293abd85f0d353e
#: ../../topics/files.txt:3
msgid "Managing files"
msgstr "Управление файлами"

# f719470bd1774c0ba4693a9ab25012d9
#: ../../topics/files.txt:5
msgid ""
"This document describes Django's file access APIs for files such as those "
"uploaded by a user. The lower level APIs are general enough that you could "
"use them for other purposes. If you want to handle \"static files\" (JS, "
"CSS, etc.), see :doc:`/howto/static-files/index`."
msgstr ""
"Этот документ описывает API Django для работы с файлами, которые были "
"загружены пользователем. API более низкого уровня довольно стандартны и вы "
"можете использовать их для других целей. Если вам надо обрабатывать "
"\"статические файлы\" (JS, CSS и так далее), обратитесь к :doc:`/howto/"
"static-files/index`."

# d6a03d9136524258bb1194e2fd173be8
#: ../../topics/files.txt:10
msgid ""
"By default, Django stores files locally, using the :setting:`MEDIA_ROOT` "
"and :setting:`MEDIA_URL` settings. The examples below assume that you're "
"using these defaults."
msgstr ""
"Как правило, Django хранит файлы локально, используя настройки :setting:"
"`MEDIA_ROOT` и :setting:`MEDIA_URL`. Примеры, данные ниже, предполагают "
"использование значений по умолчанию."

# 321068fe25a449bca212439c5fa8ca9b
#: ../../topics/files.txt:14
msgid ""
"However, Django provides ways to write custom `file storage systems`_ that "
"allow you to completely customize where and how Django stores files. The "
"second half of this document describes how these storage systems work."
msgstr ""
"Однако, Django предоставляет возможность записи в пользовательские :doc:"
"`системы хранения файлов </howto/custom-file-storage>`, которые позволяют "
"полностью настроить то, как и где Django будет располагать файлы. Вторая "
"часть этого руководства призвана описать как это работает."

# 0acf589a271444afbc26ab29966ea351
#: ../../topics/files.txt:21
msgid "Using files in models"
msgstr "Использования файлов в моделях"

# f91f5c0b0e83476b8d42469c2d3d0f44
#: ../../topics/files.txt:23
msgid ""
"When you use a :class:`~django.db.models.FileField` or :class:`~django.db."
"models.ImageField`, Django provides a set of APIs you can use to deal with "
"that file."
msgstr ""
"Когда вы используете классы :class:`~django.db.models.FileField` или :class:"
"`~django.db.models.ImageField`, Django предоставляет интерфейс "
"программирования приложений (API), чтобы открыть вам доступ к файлам."

# a9c1bf90dfcb405ab807f96c33ea59ec
#: ../../topics/files.txt:27
msgid ""
"Consider the following model, using an :class:`~django.db.models.ImageField` "
"to store a photo::"
msgstr ""
"Рассмотрим следующую модель, используя :class:`~django.db.models.ImageField` "
"для хранения фотографии::"

# c096a1a683e64194be01219a398f40c6
#: ../../topics/files.txt:37
msgid ""
"Any ``Car`` instance will have a ``photo`` attribute that you can use to get "
"at the details of the attached photo::"
msgstr ""
"Любой экземпляр класса ``Car`` будет иметь атрибут ``photo``, к которому "
"можно обращаться, чтобы получить сведения о загруженной фотографии::"

# 058b2eb81839430382ed2edc9748fc6f
#: ../../topics/files.txt:50
msgid ""
"This object -- ``car.photo`` in the example -- is a ``File`` object, which "
"means it has all the methods and attributes described below."
msgstr ""
"Этот объект -- ``car.photo`` является файловым объектом, а значит имеет ряд "
"атрибутов, описанных ниже."

# 1d481723dc924ed39167ee96186dc140
#: ../../topics/files.txt:54
msgid ""
"The file is saved as part of saving the model in the database, so the actual "
"file name used on disk cannot be relied on until after the model has been "
"saved."
msgstr ""
"Файл сохраняется в базе данных как часть модели, поэтому фактическое "
"название файла не может быть использовано до того момента, пока не будет "
"сохранена модель, включающая его."

#: ../../topics/files.txt:58
msgid ""
"For example, you can change the file name by setting the file's :attr:"
"`~django.core.files.File.name` to a path relative to the file storage's "
"location (:setting:`MEDIA_ROOT` if you are using the default :class:`~django."
"core.files.storage.FileSystemStorage`)::"
msgstr ""
"Например, вы можете изменить название файла, указав в атрибуте :attr:"
"`~django.core.files.File.name` относительный путь для хранилища файлов (:"
"setting:`MEDIA_ROOT`, если вы используете по умолчанию :class:`~django.core."
"files.storage.FileSystemStorage`)::"

#: ../../topics/files.txt:78
msgid ""
"Whilst :class:`~django.db.models.ImageField` non-image data attributes, such "
"as ``height``, ``width``, and ``size`` are available on the instance, the "
"underlying image data cannot be used without reopening the image. For "
"example::"
msgstr ""

# c553f751982b44a9b14049ad8950c291
#: ../../topics/files.txt:98
msgid "The ``File`` object"
msgstr "Объект ``File``"

# eec770eda4c9417cb6269ec70c11ba87
#: ../../topics/files.txt:100
msgid ""
"Internally, Django uses a :class:`django.core.files.File` instance any time "
"it needs to represent a file."
msgstr ""
"Django использует класс :class:`django.core.files.File`, который должен "
"представлять собой объект файла."

# e4df4109e67841dba6de46945147548d
#: ../../topics/files.txt:103
msgid ""
"Most of the time you'll use a ``File`` that Django's given you (i.e. a file "
"attached to a model as above, or perhaps an uploaded file)."
msgstr ""
"Большую часть времени вы будете просто использовать ``File``, "
"предоставляемый Django (то есть прикреплённый к соответствующей модели, как "
"показано выше, или, возможно, загруженный файл)."

# 9ee3d9934a2344b5b1f79d2478be98d8
#: ../../topics/files.txt:106
msgid ""
"If you need to construct a ``File`` yourself, the easiest way is to create "
"one using a Python built-in ``file`` object::"
msgstr ""
"Но если вам вдруг понадобится создать объект ``File`` самостоятельно, проще "
"всего использовать для этого указанный выше встроенный файловый объект языка "
"Python::"

# 6e17fdadb730442196d52035ddf94800
#: ../../topics/files.txt:115
msgid ""
"Now you can use any of the documented attributes and methods of the :class:"
"`~django.core.files.File` class."
msgstr ""
"Теперь у вас есть возможность использовать любой из атрибутов и методов "
"стандартного класса :class:`~django.core.files.File`."

# cb91fd015a6a4597b157f6319f7e605d
#: ../../topics/files.txt:118
msgid ""
"Be aware that files created in this way are not automatically closed. The "
"following approach may be used to close files automatically::"
msgstr ""
"Отдавайте себе отчёт в том, что файлы, созданные таким образом, не будут "
"автоматически закрыты. Для решения этой проблемы может быть использован "
"следующий подход::"

# 63ad9b6c2e0d43de9978bd7b802ffd4d
#: ../../topics/files.txt:133
msgid ""
"Closing files is especially important when accessing file fields in a loop "
"over a large number of objects. If files are not manually closed after "
"accessing them, the risk of running out of file descriptors may arise. This "
"may lead to the following error::"
msgstr ""
"Закрытие файлов особенно важно при получении доступа к файлу в цикле с "
"большим количеством объектов. Если файлы не будут закрыты вручную после "
"получения доступа к ним, может возникнуть риск того, что все файловые "
"дескрипторы будут исчерпаны. В свою очередь это может привести к следующей "
"ошибке::"

# c74655deb8ae44d8b5be9f8ad7830ff1
#: ../../topics/files.txt:142
msgid "File storage"
msgstr "Хранение файлов"

# aae257f538304a73a6c029583864b89c
#: ../../topics/files.txt:144
msgid ""
"Behind the scenes, Django delegates decisions about how and where to store "
"files to a file storage system. This is the object that actually understands "
"things like file systems, opening and reading files, etc."
msgstr ""
"За кулисами Django принимает решение о том, как и где будут сохранены ваши "
"файлы. Фактически это означает, что Django понимает такие вещи, как файловая "
"система, открытие и запись файлов и прочее."

# 74644c01f9e34ff19af3183fc690075e
#: ../../topics/files.txt:148
msgid ""
"Django's default file storage is given by the :setting:"
"`DEFAULT_FILE_STORAGE` setting; if you don't explicitly provide a storage "
"system, this is the one that will be used."
msgstr ""
"Выбор места для хранения файлов задаётся в настройках :setting:"
"`DEFAULT_FILE_STORAGE`. Если вы не указали иного назначения, это первое, что "
"будет использовано."

# c88e9fef527f4d0381a00093acfe4a32
#: ../../topics/files.txt:152
msgid ""
"See below for details of the built-in default file storage system, and see :"
"doc:`/howto/custom-file-storage` for information on writing your own file "
"storage system."
msgstr ""
"Для получения более подробной информации о встроенной системе хранения "
"файлов смотрите нижеследующие абзацы или обратитесь к главе о создании "
"пользовательской системы хранения файлов :doc:`/howto/custom-file-storage`, "
"чтобы понять, как с ней работать."

# 909639882a76491c891c91e3c9ea5f78
#: ../../topics/files.txt:157
msgid "Storage objects"
msgstr "Объект Storage"

# 79f733a199894c5898f72bc4ebef3ff9
#: ../../topics/files.txt:159
msgid ""
"Though most of the time you'll want to use a ``File`` object (which "
"delegates to the proper storage for that file), you can use file storage "
"systems directly. You can create an instance of some custom file storage "
"class, or -- often more useful -- you can use the global default storage "
"system::"
msgstr ""
"Хотя большую часть времени вам, скорее всего, будет достаточно объекта "
"``File`` (который осуществляет надлежащее хранение файлов), вы можете "
"обращаться к файловой системе напрямую. У вас имеется возможность создать "
"экземпляр объекта некоторого пользовательского класса для хранения файлов "
"или – что зачастую более полезно – использовать систему хранения, "
"предусмотренную по умолчанию::"

# 4632d9757c65490a84a132ee82d987e8
#: ../../topics/files.txt:180
msgid "See :doc:`/ref/files/storage` for the file storage API."
msgstr ""
"См. :doc:`/ref/files/storage` для получения информации об API доступа к "
"файлам Django."

# 84412a187e6c44999a3c14ad9f7c58da
#: ../../topics/files.txt:185
msgid "The built-in filesystem storage class"
msgstr "Встроенный класс `FileSystemStorage`"

# 79f91e00ae274343b871877ef876c04d
#: ../../topics/files.txt:187
msgid ""
"Django ships with a :class:`django.core.files.storage.FileSystemStorage` "
"class which implements basic local filesystem file storage."
msgstr ""
"Django поставляется со встроенным классом :class:`django.core.files.storage."
"FileSystemStorage`, который реализует основное локальное файловое хранилище."

# 7ff4ad72b11e47729fd2c5d9dad18b34
#: ../../topics/files.txt:190
msgid ""
"For example, the following code will store uploaded files under ``/media/"
"photos`` regardless of what your :setting:`MEDIA_ROOT` setting is::"
msgstr ""
"Например, следующий код будет хранить загруженные файлы в ``/media/photos``, "
"игнорируя настройки :setting:`MEDIA_ROOT`::"

# a5edecd768234a49aa33a22087ae2f14
#: ../../topics/files.txt:202
msgid ""
":doc:`Custom storage systems </howto/custom-file-storage>` work the same "
"way: you can pass them in as the ``storage`` argument to a :class:`~django."
"db.models.FileField`."
msgstr ""
":doc:`Custom storage systems </howto/custom-file-storage>`  работает "
"аналогичным образом: вы можете обратиться к нему как к аргументу ``storage`` "
"класса :class:`~django.db.models.FileField`."

# 76f363b528e949af9add71e9a55c1bac
#~ msgid "Argument"
#~ msgstr "Агрумент"

# e20de756c93a486c8bb7f2407f849784
#~ msgid "Description"
#~ msgstr "Описание"

# bd796e94099e49d1ba92e711a0562441
#~ msgid "``location``"
#~ msgstr "``location``"

# 54f8760ab5e54db4b0852dd2361aa5a8
#~ msgid ""
#~ "Optional. Absolute path to the directory that will hold the files. If "
#~ "omitted, it will be set to the value of your :setting:`MEDIA_ROOT` "
#~ "setting."
#~ msgstr ""
#~ "Опционально. Указывает абсолютный путь к директории, куда будут помещены "
#~ "медиа файлы. Если это не указано, файлы будут располагаться в "
#~ "соответствии с настройками :setting:`MEDIA_ROOT`."

# a3a7c874c8384e5d84968611a759ef87
#~ msgid "``base_url``"
#~ msgstr "``base_url``"

# 0dc719af71444a238e39dbc3fe42cab8
#~ msgid ""
#~ "Optional. URL that serves the files stored at this location. If omitted, "
#~ "it will default to the value of your :setting:`MEDIA_URL` setting."
#~ msgstr ""
#~ "Опционально. URL-адрес, указывающий на директорию, куда будут помещены "
#~ "медиа файлы. Если это не указано, по умолчанию будет использоваться "
#~ "значение из настроек вашего :setting:`MEDIA_URL`."

# 85c6fbbbc1164cb1a51d4ca4b7d3e6d6
#~ msgid "This document describes Django's file access APIs."
#~ msgstr "Эта инструкция описывает API доступа к файлам Django."
