# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2013, 2014, 2015, 2016, 2017.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-16 11:56+0200\n"
"PO-Revision-Date: 2017-11-30 13:19+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# 5b1c62cdd9044b2c9b8fc63a11b4dec2
#: ../../topics/testing/overview.txt:3
msgid "Writing and running tests"
msgstr "Создание и запуск тестов"

# f4e3146f82884aa2b87f6136ddb667e3
#: ../../topics/testing/overview.txt:10
msgid ""
"The :doc:`testing tutorial </intro/tutorial05>`, the :doc:`testing tools "
"reference </topics/testing/tools>`, and the :doc:`advanced testing topics </"
"topics/testing/advanced>`."
msgstr ""
":doc:`Урок по тестированию </intro/tutorial05>`, :doc:`раздел об "
"инструментах для тестирования </topics/testing/tools>` и :doc:`раздел о "
"тестировании для опытных </topics/testing/advanced>`."

# 62dd554249b54d32b728dad6e1feabb8
#: ../../topics/testing/overview.txt:14
msgid ""
"This document is split into two primary sections. First, we explain how to "
"write tests with Django. Then, we explain how to run them."
msgstr ""
"Этот раздел состоит из двух разделов. В первом мы расскажем как писать тесты "
"с Django, во втором - как их запускать"

# 9f5875d060a74782abb3afc12035fd2c
#: ../../topics/testing/overview.txt:18
msgid "Writing tests"
msgstr "Написание тестов"

# 3e74984276404a34b1d8953a7f57c9b5
#: ../../topics/testing/overview.txt:20
msgid ""
"Django's unit tests use a Python standard library module: :mod:`unittest`. "
"This module defines tests using a class-based approach."
msgstr ""
"Юнит тесты для Django используют стандартную библиотеку Python: :mod:"
"`unittest`. Эта библиотека позволяет создавать тесты в ООП стиле."

# 581225c1376349be8f6723c7ec6da423
#: ../../topics/testing/overview.txt:23
msgid ""
"Here is an example which subclasses from :class:`django.test.TestCase`, "
"which is a subclass of :class:`unittest.TestCase` that runs each test inside "
"a transaction to provide isolation::"
msgstr ""
"В примере ниже мы наследуемся от :class:`django.test.TestCase`, который "
"является классом наследником :class:`unittest.TestCase`, и запускает каждый "
"тест в отдельной транзакции для их изоляции::"

# 6604fb4083c24f50a11b910674083d09
#: ../../topics/testing/overview.txt:42
msgid ""
"When you :ref:`run your tests <running-tests>`, the default behavior of the "
"test utility is to find all the test cases (that is, subclasses of :class:"
"`unittest.TestCase`) in any file whose name begins with ``test``, "
"automatically build a test suite out of those test cases, and run that suite."
msgstr ""
"Когда вы :ref:`запускаете тесты <running-tests>`, происходит поиск всех "
"тестов (классов унаследованных от :class:`unittest.TestCase`) в файлах, "
"которые начинаются с ``test``, затем создается набор тестов(test suite) и их "
"запуск."

# f03cc872815d4eeea722c1af69642a33
#: ../../topics/testing/overview.txt:47
msgid "For more details about :mod:`unittest`, see the Python documentation."
msgstr "Подробности о :mod:`unittest` смотрите в документации Python."

#: ../../topics/testing/overview.txt:49
msgid "Where should the tests live?"
msgstr "Где должны находиться тесты?"

#: ../../topics/testing/overview.txt:51
msgid ""
"The default :djadmin:`startapp` template creates a ``tests.py`` file in the "
"new application. This might be fine if you only have a few tests, but as "
"your test suite grows you'll likely want to restructure it into a tests "
"package so you can split your tests into different submodules such as "
"``test_models.py``, ``test_views.py``, ``test_forms.py``, etc. Feel free to "
"pick whatever organizational scheme you like."
msgstr ""
"Шаблон приложения, который использует команда :djadmin:`startapp`, содержит "
"файл ``tests.py``. Это подходит для приложений, которые содержат не много "
"тестов. Но поре роста количества тестов вы захотите разделить их на модули, "
"например ``test_models.py``, ``test_views.py``, ``test_forms.py``, и т.д. Вы "
"можете использовать любую удобную вам структуру."

#: ../../topics/testing/overview.txt:58
msgid "See also :ref:`testing-reusable-applications`."
msgstr "Смотрите также :ref:`testing-reusable-applications`."

# 7c96234611d44e06b686509ba5e37b2c
#: ../../topics/testing/overview.txt:62
msgid ""
"If your tests rely on database access such as creating or querying models, "
"be sure to create your test classes as subclasses of :class:`django.test."
"TestCase` rather than :class:`unittest.TestCase`."
msgstr ""
"Если ваши тесты используют базу данных, убедитесь, что вы наследуетесь от :"
"class:`django.test.TestCase`, а не :class:`unittest.TestCase`."

# b038e33417f848678b76d67d0e87f45d
#: ../../topics/testing/overview.txt:66
msgid ""
"Using :class:`unittest.TestCase` avoids the cost of running each test in a "
"transaction and flushing the database, but if your tests interact with the "
"database their behavior will vary based on the order that the test runner "
"executes them. This can lead to unit tests that pass when run in isolation "
"but fail when run in a suite."
msgstr ""
"При использовании :class:`unittest.TestCase` экономится время на создание "
"транзакции и сброса базы данных, но если тесты работают с базой данных, их "
"поведение очень зависит от порядка выполнения тестов. В таком случае тесты, "
"которые работают изолированно, могут не проходить при запуске вместе в "
"другими тестами."

# 0a86a5f18d1642b3b9e51bf882440819
#: ../../topics/testing/overview.txt:75
msgid "Running tests"
msgstr "Запуск тестов"

# dcc92595a65947c7a223182015bd6088
#: ../../topics/testing/overview.txt:77
msgid ""
"Once you've written tests, run them using the :djadmin:`test` command of "
"your project's ``manage.py`` utility::"
msgstr ""
"Чтобы запустить тесты, используйте команду :djadmin:`test` скрипта ``manage."
"py`` в вашей проекте::"

# ca2640d6170b4c03a9f8105447370d21
#: ../../topics/testing/overview.txt:82
msgid ""
"Test discovery is based on the unittest module's :py:ref:`built-in test "
"discovery <unittest-test-discovery>`.  By default, this will discover tests "
"in any file named \"test*.py\" under the current working directory."
msgstr ""
"Поиск тестов основан на :py:ref:`поиске тестов библиотеки unittest <unittest-"
"test-discovery>`. По умолчанию тесты ищутся во всех файлах \"test*.py\" в "
"текущем каталоге."

# 23b39897ba2849c1b844127d97da33bb
#: ../../topics/testing/overview.txt:86
msgid ""
"You can specify particular tests to run by supplying any number of \"test "
"labels\" to ``./manage.py test``. Each test label can be a full Python "
"dotted path to a package, module, ``TestCase`` subclass, or test method. For "
"instance::"
msgstr ""
"Вы можете запустить определенные тесты, указав \"test labels\" для команды "
"``./manage.py test``. Каждый \"label\" - это путь к пакету Python, модулю, "
"классу наследнику ``TestCase``, или методу теста. Например::"

# bc39199a3edb4747a4f50b607b9450bc
#: ../../topics/testing/overview.txt:102
msgid ""
"You can also provide a path to a directory to discover tests below that "
"directory::"
msgstr ""
"Также можно передать путь к каталогу, в котором будет выполнен поиск тестов::"

# 86585eedcf894bf5aced630a297fe1e7
#: ../../topics/testing/overview.txt:107
msgid ""
"You can specify a custom filename pattern match using the ``-p`` (or ``--"
"pattern``) option, if your test files are named differently from the ``test*."
"py`` pattern::"
msgstr ""
"Можно указать шаблон для поиска файлов с тестами, используя опцию ``-p`` "
"(или ``--pattern``), если имена ваших файлов с тестами не соответствуют "
"шаблону ``test*.py``::"

# 90b85a49c6b3404b9ffc82935ba2868a
#: ../../topics/testing/overview.txt:113
msgid ""
"If you press ``Ctrl-C`` while the tests are running, the test runner will "
"wait for the currently running test to complete and then exit gracefully. "
"During a graceful exit the test runner will output details of any test "
"failures, report on how many tests were run and how many errors and failures "
"were encountered, and destroy any test databases as usual. Thus pressing "
"``Ctrl-C`` can be very useful if you forget to pass the :option:`--failfast "
"<test --failfast>` option, notice that some tests are unexpectedly failing "
"and want to get details on the failures without waiting for the full test "
"run to complete."
msgstr ""
"Если нажать ``Ctrl-C`` при выполнении тестов, будет завершен текущий тест и "
"затем остановлено выполнение тестов. После остановки будет выведен результат "
"выполнения тестов и удалена тестовая база данных. ``Ctrl-C`` может быть "
"очень полезна, если вы забыли указать опцию :option:`--failfast <test --"
"failfast>`, и не хотите ждать окончания выполнения всех тестов, если один из "
"них уже выполнился с ошибкой."

# 797f5c1fb7774f4fbf6d7a6a13bb33ad
#: ../../topics/testing/overview.txt:123
msgid ""
"If you do not want to wait for the currently running test to finish, you can "
"press ``Ctrl-C`` a second time and the test run will halt immediately, but "
"not gracefully. No details of the tests run before the interruption will be "
"reported, and any test databases created by the run will not be destroyed."
msgstr ""
"Если вы не хотите ждать окончания текущего теста, можете нажать ``Ctrl-C`` "
"еще раз и выполнение тестов завершиться немедленно. При этом вы не получите "
"результатов выполнения тестов и тестовая база данных не будет удалена."

# 72eda77501b742739133d4bd11120194
#: ../../topics/testing/overview.txt:128
msgid "Test with warnings enabled"
msgstr "Выполнение тестов с включенными предупреждениями"

# e6dfe4745a614113b9d127f62f2ad338
#: ../../topics/testing/overview.txt:130
msgid ""
"It's a good idea to run your tests with Python warnings enabled: ``python -"
"Wall manage.py test``. The ``-Wall`` flag tells Python to display "
"deprecation warnings. Django, like many other Python libraries, uses these "
"warnings to flag when features are going away. It also might flag areas in "
"your code that aren't strictly wrong but could benefit from a better "
"implementation."
msgstr ""
"Хорошая практика - запускать тесты с включенными предупреждениями Python: "
"``python -Wall manage.py test``. Флаг ``-Wall`` указывает Python показывать "
"предупреждения об использовании устаревшего API. Django, как и многие другие "
"библиотеки Python, использует такие предупреждения для пометки функционала, "
"который в будущем будет удален из Django. Предупреждения могут также "
"использоваться, чтобы обратить внимание на код, который не совсем "
"неправильный, но требует лучшей реализации."

# 3d3d574515cc4b73980fbb1c68a42708
#: ../../topics/testing/overview.txt:141
msgid "The test database"
msgstr "Тестовая база данных"

# 7b52813d752b43ab8b9b7f64deb43eaa
#: ../../topics/testing/overview.txt:143
msgid ""
"Tests that require a database (namely, model tests) will not use your \"real"
"\" (production) database. Separate, blank databases are created for the "
"tests."
msgstr ""
"Тесты, которые работают с базой данных (то есть тесты моделей), не будут "
"использовать \"настоящую\" базу данных. Для этого будет создана отдельная "
"пустая база данных."

# b82c76dd38e142908dd9bf7300234736
#: ../../topics/testing/overview.txt:146
msgid ""
"Regardless of whether the tests pass or fail, the test databases are "
"destroyed when all the tests have been executed."
msgstr ""
"Независимо от результата выполнения тестов тестовая база будет удалена после "
"выполнения тестов."

#: ../../topics/testing/overview.txt:149
msgid ""
"You can prevent the test databases from being destroyed by using the :option:"
"`test --keepdb` option. This will preserve the test database between runs. "
"If the database does not exist, it will first be created. Any migrations "
"will also be applied in order to keep it up to date."
msgstr ""
"Вы можете защитить тестовые базы данных от уничтожения, добавив флаг :option:"
"`test --keepdb` к команде запуска теста. Это защитит тестовые базы данных "
"между запусками. Если база данных не существует, сначала она будет создана. "
"Любые миграции также будут применены в соответствующем порядке."

# 0348a217f372486c86032bb05ec06d71
#: ../../topics/testing/overview.txt:154
msgid ""
"The default test database names are created by prepending ``test_`` to the "
"value of each :setting:`NAME` in :setting:`DATABASES`. When using SQLite, "
"the tests will use an in-memory database by default (i.e., the database will "
"be created in memory, bypassing the filesystem entirely!). The :setting:"
"`TEST <DATABASE-TEST>` dictionary in :setting:`DATABASES` offers a number of "
"settings to configure your test database. For example, if you want to use a "
"different database name, specify :setting:`NAME <TEST_NAME>` in the :setting:"
"`TEST <DATABASE-TEST>` dictionary for any given database in :setting:"
"`DATABASES`."
msgstr ""
"По умолчанию название тестовой базы данных формируется путем добавления "
"префикса ``test_`` к значению настройки :setting:`NAME` баз данных, "
"указанных в настройке :setting:`DATABASES`. При использовании SQLite "
"тестовая база данных создается в памяти (файловая система не используется!). "
"Если вы хотите использовать другое название для тестовой базы данных, "
"укажите его через :setting:`NAME <TEST_NAME>` в словаре насйтроки :setting:"
"`TEST <DATABASE-TEST>` для баз данных, указанных в :setting:`DATABASES`."

# 79a3ac5a9d054616a8ecfd5f27c84346
#: ../../topics/testing/overview.txt:163
msgid ""
"On PostgreSQL, :setting:`USER` will also need read access to the built-in "
"``postgres`` database."
msgstr ""
"Для PostgreSQL пользователь из :setting:`USER` должен иметь права на чтение "
"встроенной базы данных ``postgres``."

# 2eca4cfd2a214377bcdbc976704181c6
#: ../../topics/testing/overview.txt:166
msgid ""
"Aside from using a separate database, the test runner will otherwise use all "
"of the same database settings you have in your settings file: :setting:"
"`ENGINE <DATABASE-ENGINE>`, :setting:`USER`, :setting:`HOST`, etc. The test "
"database is created by the user specified by :setting:`USER`, so you'll need "
"to make sure that the given user account has sufficient privileges to create "
"a new database on the system."
msgstr ""
"При создании тестовой базы данных будут использоваться настройки базы "
"данных: :setting:`ENGINE <DATABASE-ENGINE>`, :setting:`USER`, :setting:"
"`HOST`, и т.д. Тестовая база данных создается пользователем из :setting:"
"`USER`, убедитесь, что у этого пользователя есть права на создания базы "
"данных."

# ca854cf37a72493087695de8b08270a6
#: ../../topics/testing/overview.txt:173
msgid ""
"For fine-grained control over the character encoding of your test database, "
"use the :setting:`CHARSET <TEST_CHARSET>` TEST option. If you're using "
"MySQL, you can also use the :setting:`COLLATION <TEST_COLLATION>` option to "
"control the particular collation used by the test database. See the :doc:"
"`settings documentation </ref/settings>` for details of these and other "
"advanced settings."
msgstr ""
"Для больше контроля кодировок в тестовой базе данных используйте параметр :"
"setting:`CHARSET <TEST_CHARSET>` настройки TEST. При использовании MySQL "
"можно также указать :setting:`COLLATION <TEST_COLLATION>`. Подробнее о "
"настройках можно прочитать в :doc:`соответствующем разделе </ref/settings>`."

#: ../../topics/testing/overview.txt:180
msgid ""
"If using an SQLite in-memory database with SQLite 3.7.13+, `shared cache "
"<https://www.sqlite.org/sharedcache.html>`_ is enabled, so you can write "
"tests with ability to share the database between threads."
msgstr ""
"При использовании работающего в оперативной памяти SQLite совместно с SQLite "
"3.7.13+, будет активирован `разделяемый кэш <https://www.sqlite.org/"
"sharedcache.html>`_, таким образом, вы сможете создавать тесты с "
"возможностью разделения базы данных между потоками."

# 9a6d6717ce624aa5a25c4d91c33d36ee
#: ../../topics/testing/overview.txt:184
msgid "Finding data from your production database when running tests?"
msgstr "Запросы к настоящей базе дынных при выполнении тестов"

# 50d0932429d642d2a7ea58b360f0fe2a
#: ../../topics/testing/overview.txt:186
msgid ""
"If your code attempts to access the database when its modules are compiled, "
"this will occur *before* the test database is set up, with potentially "
"unexpected results. For example, if you have a database query in module-"
"level code and a real database exists, production data could pollute your "
"tests. *It is a bad idea to have such import-time database queries in your "
"code* anyway - rewrite your code so that it doesn't do this."
msgstr ""
"Если ваш код выполняет запросы к базе данных при импорте модуля, эти запросы "
"будут выполнены *перед* созданием тестовой базы данных, что может привести к "
"неожиданным результатам. То есть такие запросы выполнятся для настоящей базы "
"данных. В любом случае *выполнение запросов при импорте модуля - плохая "
"практика*. Избегайте этого."

# c3cef5c3b7f4470488e30bab367e2f89
#: ../../topics/testing/overview.txt:193
msgid ""
"This also applies to customized implementations of :meth:`~django.apps."
"AppConfig.ready()`."
msgstr ""
"Это также относиться и к методу :meth:`~django.apps.AppConfig.ready()`."

# 67e4a351b90847a3b0e4957a74bd17a0
#: ../../topics/testing/overview.txt:198
msgid ""
"The :ref:`advanced multi-db testing topics <topics-testing-advanced-"
"multidb>`."
msgstr ""
":ref:`Раздел об использовании нескольких баз данных при тестировании <topics-"
"testing-advanced-multidb>`."

# 68f136d436e24f1a940fced8d9d6978c
#: ../../topics/testing/overview.txt:203
msgid "Order in which tests are executed"
msgstr "Порядок выполнения тестов"

# 9fcd4b7c31554e3fadc3e4ce1636d483
#: ../../topics/testing/overview.txt:205
msgid ""
"In order to guarantee that all ``TestCase`` code starts with a clean "
"database, the Django test runner reorders tests in the following way:"
msgstr ""
"Чтобы код ``TestCase`` выполнялся на чистой базе данных, Django выполняет "
"тесты в следующем порядке:"

# ed08057435074f30919e91385f999b6b
#: ../../topics/testing/overview.txt:208
msgid "All :class:`~django.test.TestCase` subclasses are run first."
msgstr "Сначала классы-наследники :class:`~django.test.TestCase`."

# d6b5ebcd817948ac9782afe95f1910dd
#: ../../topics/testing/overview.txt:210
msgid ""
"Then, all other Django-based tests (test cases based on :class:`~django.test."
"SimpleTestCase`, including :class:`~django.test.TransactionTestCase`) are "
"run with no particular ordering guaranteed nor enforced among them."
msgstr ""
"Затем остальные тесты, которые используют базовые тесты Django (классы-"
"наследники :class:`~django.test.SimpleTestCase`, включая :class:`~django."
"test.TransactionTestCase`). Эти тесты могут быть выполнены в любом порядке."

# b4621cd1bd714dbfbc077a160f9cb5a1
#: ../../topics/testing/overview.txt:215
msgid ""
"Then any other :class:`unittest.TestCase` tests (including doctests) that "
"may alter the database without restoring it to its original state are run."
msgstr ""
"Затем все остальные тесты :class:`unittest.TestCase` (включая \"doctests\"), "
"которые могут изменять базу данных без восстановления начального состояния."

# 4b723c3208004e4fa37baddf6f136b34
#: ../../topics/testing/overview.txt:220
msgid ""
"The new ordering of tests may reveal unexpected dependencies on test case "
"ordering. This is the case with doctests that relied on state left in the "
"database by a given :class:`~django.test.TransactionTestCase` test, they "
"must be updated to be able to run independently."
msgstr ""
"Такой порядок выполнения тестов может выявить неожиданные зависимости между "
"тестами. Например, \"doctests\" могут использовать состояние, оставленное "
"определенным :class:`~django.test.TransactionTestCase`. Такие тесты следует "
"исправить, чтобы они могли выполняться независимо."

#: ../../topics/testing/overview.txt:225
msgid ""
"You may reverse the execution order inside groups using the :option:`test --"
"reverse` option. This can help with ensuring your tests are independent from "
"each other."
msgstr ""
"Вы можете обратить порядок исполнения внутри группы, передав флаг :option:"
"`test --reverse` в команду запуска теста. Это может помочь в проверке того, "
"что ваши тесты независимы друг от друга."

# cca5ba49494b40dea38ef8e62b01f06f
#: ../../topics/testing/overview.txt:232
msgid "Rollback emulation"
msgstr "Эмуляция отката изменений"

# c9380d5a96df46f48994dd015ee7f9e9
#: ../../topics/testing/overview.txt:234
msgid ""
"Any initial data loaded in migrations will only be available in ``TestCase`` "
"tests and not in ``TransactionTestCase`` tests, and additionally only on "
"backends where transactions are supported (the most important exception "
"being MyISAM). This is also true for tests which rely on "
"``TransactionTestCase`` such as :class:`LiveServerTestCase` and :class:"
"`~django.contrib.staticfiles.testing.StaticLiveServerTestCase`."
msgstr ""
"Любые начальные данные, созданные миграциями, будут доступны только в тестах "
"``TestCase``, но не в тестах ``TransactionTestCase``, и только, если база "
"данных поддерживает транзакции (наиболее важным исключением будет MyISAM). "
"Это также верно для тестов, которые основаны на ``TransactionTestCase``, "
"таких как :class:`LiveServerTestCase` и :class:`~django.contrib.staticfiles."
"testing.StaticLiveServerTestCase`."

# ef95bfefea02444ebbb965df57ffd120
#: ../../topics/testing/overview.txt:241
msgid ""
"Django can reload that data for you on a per-testcase basis by setting the "
"``serialized_rollback`` option to ``True`` in the body of the ``TestCase`` "
"or ``TransactionTestCase``, but note that this will slow down that test "
"suite by approximately 3x."
msgstr ""
"Django может восстановить начальные данные перед каждым тестом, эмулируя "
"откат изменений, если указать атрибут ``serialized_rollback`` с ``True`` в "
"теле ``TestCase`` или ``TransactionTestCase``. Но учтите, это замедлит "
"выполнение тестов приблизительно в 3 раза."

# 7c3c7aa4249141409fe7a1ab595669a2
#: ../../topics/testing/overview.txt:246
msgid ""
"Third-party apps or those developing against MyISAM will need to set this; "
"in general, however, you should be developing your own projects against a "
"transactional database and be using ``TestCase`` for most tests, and thus "
"not need this setting."
msgstr ""
"Распространяемые приложения и те, что используют MyISAM, должны использовать "
"этот атрибут. Но мы рекомендуем использовать базу данных, которая "
"поддерживает транзакции, и ``TestCase`` для создания тестов. В таком случае "
"эта настройка не понадобится."

# ee62cdb536b2456d86f34d741e913dde
#: ../../topics/testing/overview.txt:251
msgid ""
"The initial serialization is usually very quick, but if you wish to exclude "
"some apps from this process (and speed up test runs slightly), you may add "
"those apps to :setting:`TEST_NON_SERIALIZED_APPS`."
msgstr ""
"Начальная сериализация данных обычно работает очень быстро, но если вы "
"хотите исключить некоторые приложения из этого процесса (и немного ускорить "
"выполнение тестов), вы можете указать их в настройке :setting:"
"`TEST_NON_SERIALIZED_APPS`."

#: ../../topics/testing/overview.txt:255
msgid ""
"To prevent serialized data from being loaded twice, setting "
"``serialized_rollback=True`` disables the :data:`~django.db.models.signals."
"post_migrate` signal when flushing the test database."
msgstr ""
"Чтобы избежать повторной загрузки сериализованных данных, используйте "
"параметр ``serialized_rollback=True``, который отключает сигнал :data:"
"`~django.db.models.signals.post_migrate` при очистке тестовой базы данных."

# aed89693cb414352a34d81414d96c0f5
#: ../../topics/testing/overview.txt:261
msgid "Other test conditions"
msgstr "Другие условия выполнения тестов"

# 03e9e972af3f4f98aa439cf44f1f5e5c
#: ../../topics/testing/overview.txt:263
msgid ""
"Regardless of the value of the :setting:`DEBUG` setting in your "
"configuration file, all Django tests run with :setting:`DEBUG`\\=False. This "
"is to ensure that the observed output of your code matches what will be seen "
"in a production setting."
msgstr ""
"Независимо от значения :setting:`DEBUG` в вашем файле настроек, Django "
"выполняет все тесты со значением :setting:`DEBUG`\\=False. Таким образом, "
"при выполнении тестов код будет работать так же, как и на боевом сервере."

# 176c789a0f6f4d3ca1c6851697d4fa84
#: ../../topics/testing/overview.txt:268
msgid ""
"Caches are not cleared after each test, and running \"manage.py test fooapp"
"\" can insert data from the tests into the cache of a live system if you run "
"your tests in production because, unlike databases, a separate \"test cache"
"\" is not used. This behavior `may change`_ in the future."
msgstr ""
"Кэш не очищается после каждого теста, и выполнение \"manage.py test fooapp\" "
"может привести к добавлению тестовых данных в кэш на \"боевом\" сервере, "
"если вы запускаете тесты на этот сервере. В отличии от базы данных, "
"отдельный \"кэш для тестирования\" не используется. Но это может `измениться "
"в будущем <https://code.djangoproject.com/ticket/11505>`_."

# a9ea38b8c27f4b6e95728c5f62c7f9fd
#: ../../topics/testing/overview.txt:276
msgid "Understanding the test output"
msgstr "Разбираем вывод в консоль при выполнении тестов"

# 76a5322dbc594adf8844942ed86bafe6
#: ../../topics/testing/overview.txt:278
msgid ""
"When you run your tests, you'll see a number of messages as the test runner "
"prepares itself. You can control the level of detail of these messages with "
"the ``verbosity`` option on the command line::"
msgstr ""
"При выполнении тестов в консоль выводится различная информация. Вы можете "
"указать уровень подробности вывода, используя опцию ``verbosity``::"

# 1745770b6a14433f89d3262b6d640109
#: ../../topics/testing/overview.txt:286
msgid ""
"This tells you that the test runner is creating a test database, as "
"described in the previous section."
msgstr ""
"Этот вывод уведомляет, что была создана тестовая база данных, как описано "
"выше."

# 2a3e39f2ca4049258e8fd3dab0ab2b7f
#: ../../topics/testing/overview.txt:289
msgid ""
"Once the test database has been created, Django will run your tests. If "
"everything goes well, you'll see something like this::"
msgstr ""
"После создания базы данных Django начнет выполнять тесты. Если тесты "
"выполнены успешно, вы увидите приблизительно такое::"

# 1f72c54b22924a8096f7cfea19893fe7
#: ../../topics/testing/overview.txt:297
msgid ""
"If there are test failures, however, you'll see full details about which "
"tests failed::"
msgstr ""
"Если некоторые тесты не выполнились успешно, будут выведены подробности::"

# 1668885098ff44ad8be72ed84679d48e
#: ../../topics/testing/overview.txt:313
msgid ""
"A full explanation of this error output is beyond the scope of this "
"document, but it's pretty intuitive. You can consult the documentation of "
"Python's :mod:`unittest` library for details."
msgstr ""
"Мы не будем подробно описывать информацию об ошибке, но все и так должно "
"быть понятно. Подробности вы можете найти в документации Python для пакета :"
"mod:`unittest`."

# 05e4a7d89bb843479206a3b0abef1f58
#: ../../topics/testing/overview.txt:317
msgid ""
"Note that the return code for the test-runner script is 1 for any number of "
"failed and erroneous tests. If all the tests pass, the return code is 0. "
"This feature is useful if you're using the test-runner script in a shell "
"script and need to test for success or failure at that level."
msgstr ""
"Обратите внимание, \"return code\" команды будет 1, если не выполнился хотя "
"бы один тест. Если все тесты выполнились успешно, вернет 0. Это полезно, "
"если вы запускаете тесты в shell скрипте и необходим результат выполнения."

# 3bf706d749bf4855a9edb9dce7bdf3c1
#: ../../topics/testing/overview.txt:325
msgid "Speeding up the tests"
msgstr "Оптимизация тестов"

# 0a86a5f18d1642b3b9e51bf882440819
#: ../../topics/testing/overview.txt:328
msgid "Running tests in parallel"
msgstr "Запуск тестов параллельно"

#: ../../topics/testing/overview.txt:330
msgid ""
"As long as your tests are properly isolated, you can run them in parallel to "
"gain a speed up on multi-core hardware. See :option:`test --parallel`."
msgstr ""
"Если ваши тесты хорошо изолированны, вы можете запускать их параллельно, "
"чтобы получить преимущество в скорости при использовании многоядерных "
"процессоров. Смотрите :option:`test --parallel`."

#: ../../topics/testing/overview.txt:334
msgid "Password hashing"
msgstr "Хэширование пароля"

# cafa96f6a0fb4d16a536440a0d71b413
#: ../../topics/testing/overview.txt:336
msgid ""
"The default password hasher is rather slow by design. If you're "
"authenticating many users in your tests, you may want to use a custom "
"settings file and set the :setting:`PASSWORD_HASHERS` setting to a faster "
"hashing algorithm::"
msgstr ""
"При генерации хэша для паролей используется медленный алгоритм. Если вы "
"создаете большое количество пользователей в тестах, можно создать отдельный "
"файл настроек и указать в :setting:`PASSWORD_HASHERS` более быстрый "
"алгоритм::"

# c86fa9c2f30445dc9b55afa77efd125c
#: ../../topics/testing/overview.txt:344
msgid ""
"Don't forget to also include in :setting:`PASSWORD_HASHERS` any hashing "
"algorithm used in fixtures, if any."
msgstr ""
"Не забудьте также добавить в :setting:`PASSWORD_HASHERS` все хэширующие "
"алгоритмы, которые используются в фикстурах."

# 3d3d574515cc4b73980fbb1c68a42708
#: ../../topics/testing/overview.txt:348
msgid "Preserving the test database"
msgstr "Сохранение тестовой базы данных"

#: ../../topics/testing/overview.txt:350
msgid ""
"The :option:`test --keepdb` option preserves the test database between test "
"runs. It skips the create and destroy actions which can greatly decrease the "
"time to run tests."
msgstr ""
"Опция :option:`test --keepdb` сохраняет тестовую базу данных между запусками "
"тестов. Пропускается создание и удаление базы данных, что может значительно "
"ускорить выполнение тестов."

#~ msgid ""
#~ "The ability to use SQLite with a shared cache as described above was "
#~ "added."
#~ msgstr ""
#~ "Была добавлена упомянутая выше возможность использования SQLite с "
#~ "разделяемым кэшем."

# 7b5ae86bf4d547f69adae12a43be5750
#~ msgid "unittest2"
#~ msgstr "unittest2"

# acd90a15d25f40a1b260edc4aae9e619
#~ msgid ""
#~ "Python 2.7 introduced some major changes to the ``unittest`` library, "
#~ "adding some extremely useful features. To ensure that every Django "
#~ "project could benefit from these new features, Django used to ship with a "
#~ "copy of Python 2.7's ``unittest`` backported for Python 2.6 compatibility."
#~ msgstr ""
#~ "Python 2.7 внес несколько существенных изменений в библиотеку "
#~ "``unittest``, добавив очень полезный функционал. Чтобы каждый проект мог "
#~ "использовать этот функционал, Django содержит копию библиотеки "
#~ "``unittest`` для Python 2.7, которая совместима с Python 2.6."

# 789e498a4484439ba0f54093b1da3104
#~ msgid ""
#~ "Since Django no longer supports Python versions older than 2.7, ``django."
#~ "utils.unittest`` is deprecated. Simply use ``unittest``."
#~ msgstr ""
#~ "Т.к. Django больше не поддерживает Python версии меньше 2.7, ``django."
#~ "utils.unittest`` помечен как устаревший. Просто используйте ``unittest``."

# b7c04c3238bc4dfa9577936266947d25
#~ msgid ""
#~ "The different options in the :setting:`TEST <DATABASE-TEST>` database "
#~ "setting used to be separate options in the database settings dictionary, "
#~ "prefixed with ``TEST_``."
#~ msgstr ""
#~ "Настройки с префиксом ``TEST_`` были перенесены в настройку :setting:"
#~ "`TEST <DATABASE-TEST>` для каждой из используемых баз данных."

# bc2d87d405c14608b9d9f2a4e61cd74a
#~ msgid ""
#~ "Apps without migrations are not affected; ``initial_data`` fixtures are "
#~ "reloaded as usual."
#~ msgstr ""
#~ "Приложения без миграция работают как и раньше - ``initial_data`` фикстуры "
#~ "загружаются перед каждым тестом."

# bc0c06239ff34db8bd72a7bdd4face70
#~ msgid ""
#~ "Previously, Django's default test runner only discovered tests in ``tests."
#~ "py`` and ``models.py`` files within a Python package listed in :setting:"
#~ "`INSTALLED_APPS`."
#~ msgstr ""
#~ "В предыдущих версиях Django тесты искались только в файлах ``tests.py`` и "
#~ "``models.py`` в пакетах Python, которые указаны в :setting:"
#~ "`INSTALLED_APPS`."

# 20f2cda76385422fabfd3eeb45e905a9
#~ msgid ""
#~ "Previously, test labels were in the form ``applabel``, ``applabel."
#~ "TestCase``, or ``applabel.TestCase.test_method``, rather than being true "
#~ "Python dotted paths, and tests could only be found within ``tests.py`` or "
#~ "``models.py`` files within a Python package listed in :setting:"
#~ "`INSTALLED_APPS`. The ``--pattern`` option and file paths as test labels "
#~ "are new in 1.6."
#~ msgstr ""
#~ "В предыдущих версиях название теста могло быть в формате ``applabel``, "
#~ "``applabel.TestCase``, или ``applabel.TestCase.test_method``, а не "
#~ "обычный путь для импорта Python, и поиск тестов выполнялся только в "
#~ "файлах ``tests.py`` и ``models.py`` пакета Python, указанного в :setting:"
#~ "`INSTALLED_APPS`. Опция ``--pattern`` и использование пути к файлу, как "
#~ "название теста, были добавлены в 1.6."
