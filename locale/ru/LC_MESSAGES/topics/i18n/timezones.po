# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2013.
# Dmitriy Kostochko <alerion.um@gmail.com>, 2014, 2015, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2016-03-17 13:55+0200\n"
"Last-Translator: Dmitriy Kostochko <alerion.um@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# 4a2211a3526d4d7aaec49ae9293bba70
#: ../../topics/i18n/timezones.txt:3
msgid "Time zones"
msgstr "Часовые пояса"

# 7e46df56d21640148849f7fef584075c
#: ../../topics/i18n/timezones.txt:8
msgid "Overview"
msgstr "Введение"

# 7bc5cf218e0d4667970bc110202ab41a
#: ../../topics/i18n/timezones.txt:10
msgid ""
"When support for time zones is enabled, Django stores datetime information "
"in UTC in the database, uses time-zone-aware datetime objects internally, "
"and translates them to the end user's time zone in templates and forms."
msgstr ""
"При включенной поддержке часовых поясов, Django сохраняет в базе данных "
"информацию о дате и времени в формате UTC, использует специальные объекты "
"абсолютного времени и переводит значения к часовому поясу конечного "
"пользователя в шаблонах и формах."

# 1a2e15fc10ac4e6a99955486d5532193
#: ../../topics/i18n/timezones.txt:14
msgid ""
"This is handy if your users live in more than one time zone and you want to "
"display datetime information according to each user's wall clock."
msgstr ""
"Такая поддержка становится актуальной, если ваши пользователи живут в разных "
"часовых поясах и требуется отображать время в их текущем часовом поясе."

# 0550a89f7f0f4c7a9c064fc2270ab2b6
#: ../../topics/i18n/timezones.txt:17
msgid ""
"Even if your website is available in only one time zone, it's still good "
"practice to store data in UTC in your database. The main reason is Daylight "
"Saving Time (DST). Many countries have a system of DST, where clocks are "
"moved forward in spring and backward in autumn. If you're working in local "
"time, you're likely to encounter errors twice a year, when the transitions "
"happen. (The pytz_ documentation discusses `these issues`_ in greater "
"detail.) This probably doesn't matter for your blog, but it's a problem if "
"you over-bill or under-bill your customers by one hour, twice a year, every "
"year. The solution to this problem is to use UTC in the code and use local "
"time only when interacting with end users."
msgstr ""
"Даже если ваш сайт используется в пределах одного часового пояса, хорошей "
"привычкой будет хранение данных о времени в формате UTC. Основной причиной "
"этой рекомендации является летнее время (Daylight Saving Time, DST). Во "
"многих странах используется летнее время, когда часы переводятся весной на "
"час вперёд, а осенью назад. При работе с локальным временем, у вас "
"проявляется вероятность получения ошибок из-за времени дважды в год, в "
"момент перевода часов. (Документация на пакет pytz_ рассматривает `эти "
"вопросы <these issues>`_ очень подробно.) Это может не иметь значения для "
"вашего блога, но это становится проблемой, когда вы обсчитываетесь в "
"расчётах с клиентами дважды в год ежегодно на один час. Решением этой "
"проблемы является использование UTC в коде и преобразование времени к "
"локальному при взаимодействии с конечным пользователем."

#: ../../topics/i18n/timezones.txt:28
msgid ""
"Time zone support is disabled by default. To enable it, set :setting:`USE_TZ "
"= True <USE_TZ>` in your settings file. Time zone support uses pytz_, which "
"is installed when you install Django."
msgstr ""

# cc27128b2dd4455a8e56e4292a2fa1e7
#: ../../topics/i18n/timezones.txt:34
msgid ""
"The default :file:`settings.py` file created by :djadmin:`django-admin "
"startproject <startproject>` includes :setting:`USE_TZ = True <USE_TZ>` for "
"convenience."
msgstr ""
"Файл конфигурации :file:`settings.py`, созданный с помощью :djadmin:`django-"
"admin startproject <startproject>` для удобства включает в себя :setting:"
"`USE_TZ = True <USE_TZ>`."

# 9180277705624444a876f9ddbc990921
#: ../../topics/i18n/timezones.txt:40
msgid ""
"There is also an independent but related :setting:`USE_L10N` setting that "
"controls whether Django should activate format localization. See :doc:`/"
"topics/i18n/formatting` for more details."
msgstr ""
"Существует также независимый, но связанный параметр конфигурации :setting:"
"`USE_L10N`, который управляет активацией форматов локализации. Обратитесь к "
"разделу :doc:`/topics/i18n/formatting` для получения подробностей."

# c6acaad1028548208c234e1578c66319
#: ../../topics/i18n/timezones.txt:44
msgid ""
"If you're wrestling with a particular problem, start with the :ref:`time "
"zone FAQ <time-zones-faq>`."
msgstr ""
"Если вы бьётесь над определённой проблемой, начните с  :ref:`ЧаВо по часовым "
"поясам <time-zones-faq>`."

# 467f7430a3134b1c9b5974e862386b90
#: ../../topics/i18n/timezones.txt:48
msgid "Concepts"
msgstr "Концепция"

# 6b5f270ba13048beabfe3dc4c1901095
#: ../../topics/i18n/timezones.txt:53
msgid "Naive and aware datetime objects"
msgstr "Объекты относительного и абсолютного времени"

# 5c1b1a6021874613b56c8950382dee19
#: ../../topics/i18n/timezones.txt:55
msgid ""
"Python's :class:`datetime.datetime` objects have a ``tzinfo`` attribute that "
"can be used to store time zone information, represented as an instance of a "
"subclass of :class:`datetime.tzinfo`. When this attribute is set and "
"describes an offset, a datetime object is **aware**. Otherwise, it's "
"**naive**."
msgstr ""
"Объекты класса :class:`datetime.datetime` обладают атрибутом ``tzinfo``, "
"который может быть использован для хранения информации о часовом поясе и "
"представлен потомком класса :class:`datetime.tzinfo`. Если этот атрибут "
"установлен и описывает смещение, то объект описывает **абсолютное** время. "
"Иначе речь идёт об **относительном** времени."

# a3ecabe6ea744d4b8af4bfb543cf0ccd
#: ../../topics/i18n/timezones.txt:60
msgid ""
"You can use :func:`~django.utils.timezone.is_aware` and :func:`~django.utils."
"timezone.is_naive` to determine whether datetimes are aware or naive."
msgstr ""
"Вы можете использовать функции :func:`~django.utils.timezone.is_aware` и :"
"func:`~django.utils.timezone.is_naive` для определения типа объекта."

# bf7cd0aeb5824124ae70bcb61edce75e
#: ../../topics/i18n/timezones.txt:64
#, fuzzy
msgid ""
"When time zone support is disabled, Django uses naive datetime objects in "
"local time. This is sufficient for many use cases. In this mode, to obtain "
"the current time, you would write::"
msgstr ""
"При отключенной поддержке часовых поясов, Django использует относительное "
"время. Такое поведение подходит для многих случаев. В этом режиме, для "
"получения информации о текущем времени, потребуется сделать::"

# 4e743dfa216f4082a8aff6823265025e
#: ../../topics/i18n/timezones.txt:72
msgid ""
"When time zone support is enabled (:setting:`USE_TZ=True <USE_TZ>`), Django "
"uses time-zone-aware datetime objects. If your code creates datetime "
"objects, they should be aware too. In this mode, the example above becomes::"
msgstr ""
"При включенной поддержке часовых поясов (:setting:`USE_TZ=True <USE_TZ>`), "
"Django использует время с указанным часовым поясом. Если ваш код создаёт "
"объекты даты-времени, они тоже должны быть представлены с указанным часовым "
"поясом. В этом режиме, предыдущий пример будет выглядеть так::"

# e99a7b38835146758e3e5903b4dc78f6
#: ../../topics/i18n/timezones.txt:82
msgid ""
"Dealing with aware datetime objects isn't always intuitive. For instance, "
"the ``tzinfo`` argument of the standard datetime constructor doesn't work "
"reliably for time zones with DST. Using UTC is generally safe; if you're "
"using other time zones, you should review the `pytz`_ documentation "
"carefully."
msgstr ""
"Работа с объектами абсолютного времени не всегда интуитивно понятна. "
"Например, аргумент ``tzinfo`` не надёжно работает с часовыми поясами в "
"летнем времени. Использование UTC обычно безопаснее. Если вы работаете с "
"несколькими часовыми поясами, то тщательно изучите документацию на `pytz`_."

# ef7a525d2e1c4ba3be63002aa878e5e7
#: ../../topics/i18n/timezones.txt:90
msgid ""
"Python's :class:`datetime.time` objects also feature a ``tzinfo`` attribute, "
"and PostgreSQL has a matching ``time with time zone`` type. However, as "
"PostgreSQL's docs put it, this type \"exhibits properties which lead to "
"questionable usefulness\"."
msgstr ""
"Объекты класса :class:`datetime.time` также обладают атрибутом ``tzinfo``, а "
"PostgreSQL имеет соответствующий тип ``time with time zone``. Тем не менее, "
"как написано в документации на PostgreSQL, этот тип \"обладает свойствами, "
"которые имеют сомнительную полезность\"."

# 21ef4bc096d749bfbb75697155324ae4
#: ../../topics/i18n/timezones.txt:95
msgid ""
"Django only supports naive time objects and will raise an exception if you "
"attempt to save an aware time object, as a timezone for a time with no "
"associated date does not make sense."
msgstr ""
"Django поддерживает только объекты времени без часового пояса и вызывает "
"исключение, если вы попытаетесь сохранить объект с часовым поясом, так как "
"часовой пояс без даты не имеет смысла."

# 100e6f2bd6664bc8b945642149edfb89
#: ../../topics/i18n/timezones.txt:102
msgid "Interpretation of naive datetime objects"
msgstr "Интерпретация объектов относительного времени"

# 99d40200c7ef49718177913029559a61
#: ../../topics/i18n/timezones.txt:104
msgid ""
"When :setting:`USE_TZ` is ``True``, Django still accepts naive datetime "
"objects, in order to preserve backwards-compatibility. When the database "
"layer receives one, it attempts to make it aware by interpreting it in the :"
"ref:`default time zone <default-current-time-zone>` and raises a warning."
msgstr ""
"Если параметр конфигурации :setting:`USE_TZ` установлен в ``True``, Django "
"продолжает принимать объекты относительного времени, чтобы обеспечить "
"обратную совместимость. Когда слой базы данных получает такой объект, он "
"пытается преобразовать его в объект абсолютного времени, интерпретируя его "
"в :ref:`часовом поясе по умолчанию <default-current-time-zone>` и "
"выбрасывает предупреждение."

# eb450feef9dc4f8f90faaaeec493aca5
#: ../../topics/i18n/timezones.txt:109
#, fuzzy
msgid ""
"Unfortunately, during DST transitions, some datetimes don't exist or are "
"ambiguous. In such situations, pytz_ raises an exception. That's why you "
"should always create aware datetime objects when time zone support is "
"enabled."
msgstr ""
"К сожалению, из-за перехода на летнее время, некоторые объекты не могут быть "
"преобразованы. В таких ситуациях, pytz_ вызывает исключение. Другие "
"реализации :class:`~datetime.tzinfo`, такие как часовой пояс по умолчанию "
"используемый, если pytz_ не установлен, могут вызывать исключение или "
"возвращать неточные результаты. Именно поэтому вы должны всегда создавать "
"объекты абсолютного времени, если включена поддержка часовых поясов."

# 6b798c04cbcf4588a4cf35cce567fd53
#: ../../topics/i18n/timezones.txt:113
msgid ""
"In practice, this is rarely an issue. Django gives you aware datetime "
"objects in the models and forms, and most often, new datetime objects are "
"created from existing ones through :class:`~datetime.timedelta` arithmetic. "
"The only datetime that's often created in application code is the current "
"time, and :func:`timezone.now() <django.utils.timezone.now>` automatically "
"does the right thing."
msgstr ""
"На практике это редко является проблемой. Django предоставляет вам объекты "
"абсолютного времени в моделях и формах и чаще всего, новые объекты даты "
"создаются из уже имеющихся с помощью :class:`~datetime.timedelta` "
"арифметики. Чаще всего в коде используется текущая дата и  функция :func:"
"`timezone.now () <django.utils.timezone.now>` создаёт объект правильного "
"типа."

# 51f5d41b9cf444edb0d42d67257e40ec
#: ../../topics/i18n/timezones.txt:123
msgid "Default time zone and current time zone"
msgstr "Стандартный часовой пояс и текущий часовой пояс"

# 7479643566f04e4981a122dab8de7383
#: ../../topics/i18n/timezones.txt:125
msgid ""
"The **default time zone** is the time zone defined by the :setting:"
"`TIME_ZONE` setting."
msgstr ""
"**Стандартный часовой пояс** — это часовой пояс, определённый параметром "
"конфигурации :setting:`TIME_ZONE`."

# 943fab500b8d48b6adac4b444c42a98d
#: ../../topics/i18n/timezones.txt:128
msgid "The **current time zone** is the time zone that's used for rendering."
msgstr ""
"**Текущая часовой пояс** — часовой пояс для которого отображается страница "
"сайта."

# edd8cc1c5697405db3fcbe9d1ec79c12
#: ../../topics/i18n/timezones.txt:130
msgid ""
"You should set the current time zone to the end user's actual time zone "
"with :func:`~django.utils.timezone.activate`. Otherwise, the default time "
"zone is used."
msgstr ""
"Вы должны настраивать текущий часовой пояс на пояс пользователя с помощью :"
"func:`~django.utils.timezone.activate`. В противном случае будет "
"использоваться стандартный часовой пояс."

# ecb74e176f9548ee9e554b0ae2b56b1a
#: ../../topics/i18n/timezones.txt:136
msgid ""
"As explained in the documentation of :setting:`TIME_ZONE`, Django sets "
"environment variables so that its process runs in the default time zone. "
"This happens regardless of the value of :setting:`USE_TZ` and of the current "
"time zone."
msgstr ""
"Как указано в документации на параметр :setting:`TIME_ZONE`, Django "
"устанавливает переменные окружения так, что она работает в стандартном  "
"часовом поясе. Это происходит вне зависимости от значения переменой :setting:"
"`USE_TZ` и текущего часового пояса."

# f1c6e914b5b04e2496ed62e05360dcfe
#: ../../topics/i18n/timezones.txt:141
#, fuzzy
msgid ""
"When :setting:`USE_TZ` is ``True``, this is useful to preserve backwards-"
"compatibility with applications that still rely on local time. However, :ref:"
"`as explained above <naive-datetime-objects>`, this isn't entirely reliable, "
"and you should always work with aware datetimes in UTC in your own code. For "
"instance, use :meth:`~datetime.datetime.fromtimestamp` and set the ``tz`` "
"parameter to :data:`~django.utils.timezone.utc`."
msgstr ""
"Когда параметр :setting:`USE_TZ` установлен в ``True``, полезно сохранять "
"обратную совместимость с приложениями, которые все ещё работают с локальным "
"временем. Тем не менее, :ref:`как показано выше <naive-datetime-objects>`, "
"это не совсем надёжно и вам следует всегда работать с величинами абсолютного "
"времени (UTC) в вашем коде. Например, используйте :meth:`~datetime.datetime."
"utcfromtimestamp` вместо :meth:`~datetime.datetime.fromtimestamp` и не "
"забудьте установить ``tzinfo`` в :data:`~django.utils.timezone.utc`."

# e9dfb3377eff49fdac96303887a1221d
#: ../../topics/i18n/timezones.txt:149
msgid "Selecting the current time zone"
msgstr "Выбор текущего часового пояса"

# dd0285ea6e284ea6b29a428905dd6e4f
#: ../../topics/i18n/timezones.txt:151
msgid ""
"The current time zone is the equivalent of the current :term:`locale <locale "
"name>` for translations. However, there's no equivalent of the ``Accept-"
"Language`` HTTP header that Django could use to determine the user's time "
"zone automatically. Instead, Django provides :ref:`time zone selection "
"functions <time-zone-selection-functions>`. Use them to build the time zone "
"selection logic that makes sense for you."
msgstr ""
"Текущий часовой пояс соответствует текущей :term:`локали <locale name>` для "
"переводов. Тем не менее, не существует аналога для HTTP заголовка ``Accept-"
"Language``, который Django может использовать для автоматического "
"определения часового пояса пользователя. Вместо этого, Django предоставляет :"
"ref:`функции выбора часового пояса <time-zone-selection-functions>`. "
"Используйте их при построении логики выбора часового пояса."

# b30f1462d81044b993624909c5b6802e
#: ../../topics/i18n/timezones.txt:158
#, fuzzy
msgid ""
"Most websites that care about time zones ask users in which time zone they "
"live and store this information in the user's profile. For anonymous users, "
"they use the time zone of their primary audience or UTC. pytz_ provides "
"helpers_, like a list of time zones per country, that you can use to pre-"
"select the most likely choices."
msgstr ""
"Большинство сайтов, которые заботятся о часовых поясах, просто спрашивают "
"пользователя о его часовом поясе и сохраняют эту информацию в профайле. Для "
"анонимных пользователей, такие сайты используют часовой пояс основной "
"аудитории или UTC. Библиотека pytz_ предоставляет `шпаргалки <helpers>`_, "
"например списки часовых поясов для стран, которые можно использовать для "
"начального наполнения интерфейса."

# bdd788f7ca184b5ab1096993896f3f92
#: ../../topics/i18n/timezones.txt:164
msgid ""
"Here's an example that stores the current timezone in the session. (It skips "
"error handling entirely for the sake of simplicity.)"
msgstr ""
"Ниже приведён пример сохранения текущего часового пояса в сессии. (Пример не "
"использует обработку ошибок для простоты.)"

# fd448587a8d047e581319d70da94a083
#: ../../topics/i18n/timezones.txt:167
#, fuzzy
msgid "Add the following middleware to :setting:`MIDDLEWARE`::"
msgstr "Добавьте следующую строку в :setting:`MIDDLEWARE_CLASSES`::"

# 85b829948ee0461cb80f90e94fe76f85
#: ../../topics/i18n/timezones.txt:185
msgid "Create a view that can set the current timezone::"
msgstr ""
"Создайте представление, которое может установить текущий часовой пояс::"

# 1fc91b1d001b4acf8e10b0030847b38d
#: ../../topics/i18n/timezones.txt:196
msgid "Include a form in ``template.html`` that will ``POST`` to this view:"
msgstr ""
"Добавьте форму в ``template.html``, которая будет выполнять ``POST`` запрос "
"к этому предоставлению:"

# 30a6086abe38489085f859837bd052eb
#: ../../topics/i18n/timezones.txt:216
msgid "Time zone aware input in forms"
msgstr "Ввод значений абсолютного времени в формы"

# 7e8dd9dcf2da4edc88bd761b70214d37
#: ../../topics/i18n/timezones.txt:218
msgid ""
"When you enable time zone support, Django interprets datetimes entered in "
"forms in the :ref:`current time zone <default-current-time-zone>` and "
"returns aware datetime objects in ``cleaned_data``."
msgstr ""
"После активации поддержки часовых поясов, Django интерпретирует значения "
"времени, вводимые в формы относительно :ref:`текущего часового пояса "
"<default-current-time-zone>`, и возвращает объекты абсолютного времени в "
"``cleaned_data``."

# d661a3f027cd4420b5940848b0ee870f
#: ../../topics/i18n/timezones.txt:222
msgid ""
"If the current time zone raises an exception for datetimes that don't exist "
"or are ambiguous because they fall in a DST transition (the timezones "
"provided by pytz_ do this), such datetimes will be reported as invalid "
"values."
msgstr ""
"Если текущий часовой пояс выбрасывает исключение для значений времени, "
"которые не существуют или не могут быть преобразованы из-за перехода на "
"летнее время (часовые пояса, предоставляемые через pytz_, так делают), то "
"такие значения времени будут интерпретированы как неправильные."

# 172ff31bc0c348ec89be3c5b79fba86b
#: ../../topics/i18n/timezones.txt:229
msgid "Time zone aware output in templates"
msgstr "Вывод объектов абсолютного времени в шаблонах"

# c90091171c7f4ad4a3ea7d241ad4a445
#: ../../topics/i18n/timezones.txt:231
msgid ""
"When you enable time zone support, Django converts aware datetime objects to "
"the :ref:`current time zone <default-current-time-zone>` when they're "
"rendered in templates. This behaves very much like :doc:`format localization "
"</topics/i18n/formatting>`."
msgstr ""
"После активации поддержки временных зон, Django преобразует объекты "
"абсолютного времени в :ref:`текущий часовой пояс <default-current-time-"
"zone>` при отображении в шаблоне. Процесс идёт аналогично :doc:`локализации "
"форматирования </topics/i18n/formatting>`."

# 8a3ddded995946088ee94c108c153638
#: ../../topics/i18n/timezones.txt:238
msgid ""
"Django doesn't convert naive datetime objects, because they could be "
"ambiguous, and because your code should never produce naive datetimes when "
"time zone support is enabled. However, you can force conversion with the "
"template filters described below."
msgstr ""
"Django не преобразует объекты относительного времени, так как они могут "
"иметь двусмысленное значение. Ваш код не должен создавать объекты "
"относительного времени при включенной поддержке часовых поясов. Тем не "
"менее, вы можете включить принудительную конвертацию с помощью шаблонных "
"фильтров, описанных далее."

# acb335d991fa4af7ba9884baf084c0f3
#: ../../topics/i18n/timezones.txt:243
msgid ""
"Conversion to local time isn't always appropriate -- you may be generating "
"output for computers rather than for humans. The following filters and tags, "
"provided by the ``tz`` template tag library, allow you to control the time "
"zone conversions."
msgstr ""
"Преобразование к локальному времени не всегда полезно, так как данные могут "
"генерироваться для компьютеров, а не для людей. Следующие фильтры и теги, "
"предоставляемые шаблонной библиотекой тегов ``tz``, позволяют вам управлять "
"преобразованиями объектов времени. "

# 14d0d4ad41784ec09bb966df14409509
#: ../../topics/i18n/timezones.txt:251
msgid "Template tags"
msgstr "Шаблонные теги"

# 77c9466e291a4383a8d959f0f13da338
# f4b94f3103cd4bbe860eaf80f28e702a
#: ../../topics/i18n/timezones.txt:256 ../../topics/i18n/timezones.txt:326
#, fuzzy
msgid "``localtime``"
msgstr "localtime"

# 897fe60be55d40f4bdebd6f282b30b4b
#: ../../topics/i18n/timezones.txt:258
msgid ""
"Enables or disables conversion of aware datetime objects to the current time "
"zone in the contained block."
msgstr ""
"Включает и отключает преобразование объектов абсолютного времени в текущий "
"часовой пояс в блоке."

# 88d145a4fa3b43299a2ff0a24444d8fa
#: ../../topics/i18n/timezones.txt:261
msgid ""
"This tag has exactly the same effects as the :setting:`USE_TZ` setting as "
"far as the template engine is concerned. It allows a more fine grained "
"control of conversion."
msgstr ""
"Этот тег имеет точно такой же эффект, как и параметр :setting:`USE_TZ`, "
"только для шаблонного движка. Он позволяет обеспечить более тонкий контроль "
"над преобразованиями."

# b5d8c6f810fe45828b995016bea6339e
#: ../../topics/i18n/timezones.txt:265
msgid "To activate or deactivate conversion for a template block, use::"
msgstr ""
"Для активации или деактивации преобразований для шаблонного блока, "
"используйте::"

# f3df92e307a840519ea50a9ac8846c37
#: ../../topics/i18n/timezones.txt:279
msgid ""
"The value of :setting:`USE_TZ` isn't respected inside of a ``{% localtime %}"
"`` block."
msgstr ""
"Значение параметра :setting:`USE_TZ` не влияет на содержимое блока ``{% "
"localtime %}``."

# 55763c1c00c1472bb66bbbe1ea3dfaeb
# 97db217a1245401d8a545e3dfa7ebf9b
#: ../../topics/i18n/timezones.txt:285 ../../topics/i18n/timezones.txt:352
#, fuzzy
msgid "``timezone``"
msgstr "timezone"

# 81be80c6796d462a8638af4a7ba86157
#: ../../topics/i18n/timezones.txt:287
msgid ""
"Sets or unsets the current time zone in the contained block. When the "
"current time zone is unset, the default time zone applies."
msgstr ""
"Устанавливает или снимает текущий часовой пояс в блоке. Если текущий часовой "
"пояс снят, то применяется стандартный часовой пояс."

# 65dcab58f52e42c6954900360fe0c292
#: ../../topics/i18n/timezones.txt:305
#, fuzzy
msgid "``get_current_timezone``"
msgstr "get_current_timezone"

#: ../../topics/i18n/timezones.txt:307
msgid ""
"You can get the name of the current time zone using the "
"``get_current_timezone`` tag::"
msgstr ""
"Вы можете получить название текущего часового пояса с помощью тега "
"``get_current_timezone``::"

#: ../../topics/i18n/timezones.txt:312
msgid ""
"Alternatively, you can activate the :func:`~django.template."
"context_processors.tz` context processor and use the ``TIME_ZONE`` context "
"variable."
msgstr ""

# f4feca13d3b04643aa1fe1612e718773
#: ../../topics/i18n/timezones.txt:317
msgid "Template filters"
msgstr "Шаблонные фильтры"

# 676912c9036f4a5daefaf572eaf35af6
#: ../../topics/i18n/timezones.txt:319
msgid ""
"These filters accept both aware and naive datetimes. For conversion "
"purposes, they assume that naive datetimes are in the default time zone. "
"They always return aware datetimes."
msgstr ""
"Эти фильтры работают с обоими типами объектов времени. Для обеспечения "
"конвертации, они предполагают, что значения относительного времени "
"представлены в текущем часовом поясе. Эти фильтры всегда возвращают значения "
"абсолютного времени."

# 83d3e3564426499695d886cf7f3b2cf8
#: ../../topics/i18n/timezones.txt:328
msgid "Forces conversion of a single value to the current time zone."
msgstr ""
"Обеспечивает конвертацию единственного значения в текущий часовой пояс."

# 19ef9ffc83234b89932cd979aec332ca
# 876d7139c72a425e840ae513c41a4509
# 4ba0be56f003430484447a34b15c4f1a
#: ../../topics/i18n/timezones.txt:330 ../../topics/i18n/timezones.txt:343
#: ../../topics/i18n/timezones.txt:359
msgid "For example::"
msgstr "Например::"

#: ../../topics/i18n/timezones.txt:339
msgid "``utc``"
msgstr ""

# 539b2ad1914f40319cb2b63ccd1e0d31
#: ../../topics/i18n/timezones.txt:341
msgid "Forces conversion of a single value to UTC."
msgstr "Преобразовывает единственное значение к UTC."

# 70c4de77d7e74261b010a601ed74fe41
#: ../../topics/i18n/timezones.txt:354
msgid "Forces conversion of a single value to an arbitrary timezone."
msgstr "Преобразовывает единственное значение к указанному часовому поясу."

# 3fb5639ec6614f689017419704144c9c
#: ../../topics/i18n/timezones.txt:356
#, fuzzy
msgid ""
"The argument must be an instance of a :class:`~datetime.tzinfo` subclass or "
"a time zone name."
msgstr ""
"Аргумент должен быть экземпляром потомка класса :class:`~datetime.tzinfo` "
"или именем часового пояса. В последнем случае необходимо наличие pytz_."

# 1ff79a41accd4b59a52cc470af7510a0
#: ../../topics/i18n/timezones.txt:370
msgid "Migration guide"
msgstr "Руководство по миграции"

# fbd692f94b754038807259a7701f66de
#: ../../topics/i18n/timezones.txt:372
msgid ""
"Here's how to migrate a project that was started before Django supported "
"time zones."
msgstr ""
"Здесь описано как провести миграцию старого проекта для поддержки часовых "
"поясов."

# 54335d90fa1f443a94377acfb9a5f251
#: ../../topics/i18n/timezones.txt:376
msgid "Database"
msgstr "База данных"

# a3f1e527d0b04b6e9a1dbc294ee06a98
#: ../../topics/i18n/timezones.txt:379
msgid "PostgreSQL"
msgstr "PostgreSQL"

# 68dc0e0ca9bb4291832ccc670066db1c
#: ../../topics/i18n/timezones.txt:381
msgid ""
"The PostgreSQL backend stores datetimes as ``timestamp with time zone``. In "
"practice, this means it converts datetimes from the connection's time zone "
"to UTC on storage, and from UTC to the connection's time zone on retrieval."
msgstr ""
"Бэкенд PostgreSQL сохраняет значения времени как ``timestamp with time "
"zone``. Это означает, что он преобразовывает значение в UTC при сохранении и "
"обратно при чтении."

# d3e717a1f7804c4195ba9cc8a26a9bec
#: ../../topics/i18n/timezones.txt:385
msgid ""
"As a consequence, if you're using PostgreSQL, you can switch between "
"``USE_TZ = False`` and ``USE_TZ = True`` freely. The database connection's "
"time zone will be set to :setting:`TIME_ZONE` or ``UTC`` respectively, so "
"that Django obtains correct datetimes in all cases. You don't need to "
"perform any data conversions."
msgstr ""
"Как следствие, при использовании PostgreSQL, вы можете свободно "
"переключаться между ``USE_TZ = False`` и ``USE_TZ = True``. Часовой пояс "
"базы данных будет установлен соответственно в :setting:`TIME_ZONE` или "
"``UTC``, т.е. Django получает корректные значения времени в любом случае. "
"Вам не требуется выполнять дополнительные преобразования."

# 393b0993d78846378df16d7ac9ac496f
#: ../../topics/i18n/timezones.txt:392
msgid "Other databases"
msgstr "Другие базы данных"

# daf2486f59e34119bb561996a8f39727
#: ../../topics/i18n/timezones.txt:394
msgid ""
"Other backends store datetimes without time zone information. If you switch "
"from ``USE_TZ = False`` to ``USE_TZ = True``, you must convert your data "
"from local time to UTC -- which isn't deterministic if your local time has "
"DST."
msgstr ""
"Остальные бэкенды сохраняют значения времени без информации о часовом поясе. "
"Если вы переключите с ``USE_TZ = False`` на ``USE_TZ = True``, вам придётся "
"преобразовать значения из локального времени в UTC, что не слишком радует, "
"если у вас используется летнее время."

# be85825d755e4fbf9f5b77f85d221a0e
#: ../../topics/i18n/timezones.txt:399
msgid "Code"
msgstr "Код"

# c22790d5deda4784960b6317546782dc
#: ../../topics/i18n/timezones.txt:401
#, fuzzy
msgid ""
"The first step is to add :setting:`USE_TZ = True <USE_TZ>` to your settings "
"file. At this point, things should mostly work. If you create naive datetime "
"objects in your code, Django makes them aware when necessary."
msgstr ""
"Первым шагом надо добавить :setting:`USE_TZ = True <USE_TZ>` в "
"конфигурационный файл и установить pytz_ (по возможности). После этого почти "
"всё должно заработать. Если вы создаёте объекты относительного времени в "
"вашем коде, Django будет преобразовывать их в объекты абсолютного времени "
"при необходимости."

# 9f308493bc4c48139fdbfdcb7848ac9c
#: ../../topics/i18n/timezones.txt:405
msgid ""
"However, these conversions may fail around DST transitions, which means you "
"aren't getting the full benefits of time zone support yet. Also, you're "
"likely to run into a few problems because it's impossible to compare a naive "
"datetime with an aware datetime. Since Django now gives you aware datetimes, "
"you'll get exceptions wherever you compare a datetime that comes from a "
"model or a form with a naive datetime that you've created in your code."
msgstr ""
"Тем не менее, эти преобразования могут ошибаться при использовании летнего "
"времени (DST), а значит, вы не получаете все преимущества поддержки часовых "
"поясов. Кроме того, вы, вероятно, столкнётесь с некоторыми проблемами при "
"сравнении абсолютных и относительных дат. Так как Django теперь "
"предоставляет вам значения абсолютного времени, вы получите исключения "
"везде, где вы сравниваете значения из моделей или форм со значениями "
"относительного времени, которые вы создаёте в своем коде."

# 280e308e23ba4452bdd238b777512b31
#: ../../topics/i18n/timezones.txt:412
msgid ""
"So the second step is to refactor your code wherever you instantiate "
"datetime objects to make them aware. This can be done incrementally. :mod:"
"`django.utils.timezone` defines some handy helpers for compatibility code: :"
"func:`~django.utils.timezone.now`, :func:`~django.utils.timezone.is_aware`, :"
"func:`~django.utils.timezone.is_naive`, :func:`~django.utils.timezone."
"make_aware`, and :func:`~django.utils.timezone.make_naive`."
msgstr ""
"Вторым шагом будет рефакторинг вашего кода в местах, где вы создаёте "
"значения времени, теперь они должны быть абсолютными. Это может быть сделано "
"постепенно. В модуле :mod:`django.utils.timezone` определены несколько "
"вспомогательных функций: :func:`~django.utils.timezone.now`, :func:`~django."
"utils.timezone.is_aware`, :func:`~django.utils.timezone.is_naive`, :func:"
"`~django.utils.timezone.make_aware` и :func:`~django.utils.timezone."
"make_naive`."

# bf41b698ad9e43d1849b94658e21af41
#: ../../topics/i18n/timezones.txt:421
msgid ""
"Finally, in order to help you locate code that needs upgrading, Django "
"raises a warning when you attempt to save a naive datetime to the database::"
msgstr ""
"Наконец, для того, чтобы помочь вам найти код, который нуждается в "
"модернизации, Django выдаёт предупреждение при попытке сохранить значение "
"относительного времени в базу данных::"

# 3314aee3861e407b8feae90ce4af8661
#: ../../topics/i18n/timezones.txt:427
msgid ""
"During development, you can turn such warnings into exceptions and get a "
"traceback by adding the following to your settings file::"
msgstr ""
"На время разработки, вы можете превратить такие предупреждения в исключения "
"и получить трассировки, добавив следующие строки в ваш файл настроек::"

# 0043bc767b844973b6f07c0777b9cf75
#: ../../topics/i18n/timezones.txt:437
msgid "Fixtures"
msgstr "Фикстуры"

# 2f484ccb647645b981589745f4b83f4a
#: ../../topics/i18n/timezones.txt:439
msgid ""
"When serializing an aware datetime, the UTC offset is included, like this::"
msgstr ""
"При сериализации значений абсолютного времени добавляется смещение "
"относительно UTC, подобно этому::"

# eea891e04b1a4ebeb135198f1cd997ed
#: ../../topics/i18n/timezones.txt:443
#, fuzzy
msgid "While for a naive datetime, it isn't::"
msgstr "Для значений относительного времени такого не происходит::"

# dfff3b2dbd8b4543ab58d4a931b6ba8f
#: ../../topics/i18n/timezones.txt:447
msgid ""
"For models with :class:`~django.db.models.DateTimeField`\\ s, this "
"difference makes it impossible to write a fixture that works both with and "
"without time zone support."
msgstr ""
"Для моделей с полями :class:`~django.db.models.DateTimeField` такая разница "
"в поведении делает невозможным создание фикстуры, которая может применяться "
"в обоих режимах поддержки часовых поясов."

# 7b6dae7480204dc98b21ecf56d3b7f0f
#: ../../topics/i18n/timezones.txt:451
msgid ""
"Fixtures generated with ``USE_TZ = False``, or before Django 1.4, use the "
"\"naive\" format. If your project contains such fixtures, after you enable "
"time zone support, you'll see :exc:`RuntimeWarning`\\ s when you load them. "
"To get rid of the warnings, you must convert your fixtures to the \"aware\" "
"format."
msgstr ""
"Фикстуры, созданные с ``USE_TZ = False`` или до Django 1.4, используют "
"относительный формат. Если у вашего проекта есть такие фикстуры, то после "
"включения поддержки часовых поясов, вы увидите исключения :exc:"
"`RuntimeWarning` при попытке загрузить такие фикстуры. Чтобы избавиться от "
"таких сообщений, вам надо преобразовать ваши фикстуры в абсолютный формат."

# ec402ad60e254c5785427401e7d954d3
#: ../../topics/i18n/timezones.txt:456
#, fuzzy
msgid ""
"You can regenerate fixtures with :djadmin:`loaddata` then :djadmin:"
"`dumpdata`. Or, if they're small enough, you can edit them to add the UTC "
"offset that matches your :setting:`TIME_ZONE` to each serialized datetime."
msgstr ""
"Вы можете сгенерировать фикстуры заново с помощью :djadmin:`loaddata`, а "
"затем :djadmin:`dumpdata`. Или, если они имеют небольшой размер, вы можете "
"просто отредактировать их, добавив смещение UTC, которое соответствует "
"вашей :setting:`TIME_ZONE`, к каждому сериализованному объекту времени."

# afedc713d7fa421da26af9fb1de79b25
#: ../../topics/i18n/timezones.txt:463
msgid "FAQ"
msgstr "ЧаВО"

# f0287ebfb6d04c0dbb7692f7f23f5d50
#: ../../topics/i18n/timezones.txt:466
msgid "Setup"
msgstr "Настройка"

# 16670027c54c455b8f4a2681c7d82df3
#: ../../topics/i18n/timezones.txt:468
msgid ""
"**I don't need multiple time zones. Should I enable time zone support?**"
msgstr ""
"**Мне не нужна поддержка часовых поясов. Должен ли я активировать их "
"поддержку?**"

# 73f29b1dec6c441ba8c86e967ba1a215
#: ../../topics/i18n/timezones.txt:470
msgid ""
"Yes. When time zone support is enabled, Django uses a more accurate model of "
"local time. This shields you from subtle and unreproducible bugs around "
"Daylight Saving Time (DST) transitions."
msgstr ""
"Да. Если поддержка часовых поясов активирована, то Django использует более "
"точную модель локального времени. Это ограждает вас от коварных и "
"невоспроизводимых ошибок, связанных летним временем (DST)."

# 868479854acd4da093ae9e445667cd32
#: ../../topics/i18n/timezones.txt:474
#, fuzzy
msgid ""
"When you enable time zone support, you'll encounter some errors because "
"you're using naive datetimes where Django expects aware datetimes. Such "
"errors show up when running tests. You'll quickly learn how to avoid invalid "
"operations."
msgstr ""
"При активации поддержки часовых поясов, вы столкнетесь с некоторыми "
"ошибками, потому что используете относительные значения даты/времени там, "
"где Django ожидает абсолютные значения. Такие ошибки обнаруживаются при "
"запуске тестов и их несложно исправить. Вы быстро разберётесь, как можно "
"избежать неправильных операций."

# 338edd9dfa6d4451b3a3cb679d320e7a
#: ../../topics/i18n/timezones.txt:479
msgid ""
"On the other hand, bugs caused by the lack of time zone support are much "
"harder to prevent, diagnose and fix. Anything that involves scheduled tasks "
"or datetime arithmetic is a candidate for subtle bugs that will bite you "
"only once or twice a year."
msgstr ""
"С другой стороны, ошибки, вызванные отсутствием наличия поддержки часовых "
"поясов, намного сложнее предотвращать, диагностировать и исправлять. Любые "
"задачи, включающие в себя планирование или действия с датами -- явные "
"кандидаты на подобные ошибки, которые будут портить вам жизнь дважды в год."

# 7774ab5727fb4c47961458e31c4509d0
#: ../../topics/i18n/timezones.txt:484
msgid ""
"For these reasons, time zone support is enabled by default in new projects, "
"and you should keep it unless you have a very good reason not to."
msgstr ""
"Пр этим причинам поддержка часовых поясов активирована по умолчанию в новых "
"проектах и вам не следует отключать её, если у вас нет серьёзных причин для "
"этого."

# f66b09dc6563447ca239bb19d1ad30f3
#: ../../topics/i18n/timezones.txt:487
msgid "**I've enabled time zone support. Am I safe?**"
msgstr "**Я включил поддержку часовых поясов. Счастье наступило?**"

# 63f59ed3ae624fd5ab92e4f28f22d3df
#: ../../topics/i18n/timezones.txt:489
msgid ""
"Maybe. You're better protected from DST-related bugs, but you can still "
"shoot yourself in the foot by carelessly turning naive datetimes into aware "
"datetimes, and vice-versa."
msgstr ""
"Может быть. Вы лучше защищены от ошибок, связанных с летним временем, но всё "
"ещё можете \"выстрелить себе в ногу\", небрежно превращая относительное "
"время в абсолютно и наоборот."

# 4bf3bcb4d8fd42058ce337928e8d1577
#: ../../topics/i18n/timezones.txt:493
msgid ""
"If your application connects to other systems -- for instance, if it queries "
"a Web service -- make sure datetimes are properly specified. To transmit "
"datetimes safely, their representation should include the UTC offset, or "
"their values should be in UTC (or both!)."
msgstr ""
"Если ваше приложение соединяется с другими системами, например, если оно "
"запрашивает данные у веб-сервиса, следует проверить, что значения времени "
"определены должным образом. Для безопасной передачи значений времени, их "
"представление должно содержать смещение относительно UTC или их значения "
"должны быть в UTC (или оба варианта!)."

# 4f32cf664b9a435ca1bfc05b70279839
#: ../../topics/i18n/timezones.txt:498
msgid "Finally, our calendar system contains interesting traps for computers::"
msgstr ""
"Наконец, наша календарная система содержит интересные ловушки для "
"компьютеров::"

# 0206ef7fe0714b5ea29c3854a5622b2b
#: ../../topics/i18n/timezones.txt:510
msgid ""
"(To implement this function, you must decide whether 2012-02-29 minus one "
"year is 2011-02-28 or 2011-03-01, which depends on your business "
"requirements.)"
msgstr ""
"(Чтобы реализовать эту функцию, вы должны решить, какой из ответов "
"28.02.2011 или 01.03.2011 является результатом операции 29.02.2012 минус "
"один год, что зависит от ваших бизнес-требований.)"

#: ../../topics/i18n/timezones.txt:514
msgid ""
"**How do I interact with a database that stores datetimes in local time?**"
msgstr ""
"**Как работать с базами данных, которые хранят время без часового пояса?**"

#: ../../topics/i18n/timezones.txt:516
msgid ""
"Set the :setting:`TIME_ZONE <DATABASE-TIME_ZONE>` option to the appropriate "
"time zone for this database in the :setting:`DATABASES` setting."
msgstr ""
"Укажите в опции :setting:`TIME_ZONE <DATABASE-TIME_ZONE>` настройки :setting:"
"`DATABASES` правильный часовой пояс для базы данных."

#: ../../topics/i18n/timezones.txt:519
msgid ""
"This is useful for connecting to a database that doesn't support time zones "
"and that isn't managed by Django when :setting:`USE_TZ` is ``True``."
msgstr ""
"Эти данные используются при подключении к базе данных, которая не "
"поддерживает часовые зоны, при :setting:`USE_TZ` равном ``True``."

# a2c44d4a3ada4e7e9c82b91aab0ecde3
#: ../../topics/i18n/timezones.txt:523
msgid "Troubleshooting"
msgstr "Решение проблем"

# 6c7fcb16ffce4ab39ba842ea095ff4f7
#: ../../topics/i18n/timezones.txt:525
msgid ""
"**My application crashes with** ``TypeError: can't compare offset-naive`` "
"``and offset-aware datetimes`` **-- what's wrong?**"
msgstr ""
"**Моё приложение падает с** ``TypeError: can't compare offset-naive`` ``and "
"offset-aware datetimes`` **-- в чём проблема?**"

# 82e590330b234d53a2059fc78b3a4c34
#: ../../topics/i18n/timezones.txt:528
msgid "Let's reproduce this error by comparing a naive and an aware datetime::"
msgstr ""
"Давайте воспроизведём данную ошибку с помощью сравнения значений "
"относительного и абсолютного времени::"

# 28fa2f17a8b040d6aecdf6fb08f77cb2
#: ../../topics/i18n/timezones.txt:539
msgid ""
"If you encounter this error, most likely your code is comparing these two "
"things:"
msgstr ""
"Если встречаетесь с этой ошибкой, наиболее вероятно, что ваш код сравнивает "
"эти две вещи:"

# 6d086d6c4a1d4f07aa678ce3e21d4779
#: ../../topics/i18n/timezones.txt:542
msgid ""
"a datetime provided by Django -- for instance, a value read from a form or a "
"model field. Since you enabled time zone support, it's aware."
msgstr ""
"значение времени, предоставленное Django, например, значение из формы или "
"модели. Раз вы активировали поддержку часовых поясов, значит оно абсолютное."

# bcd209543da0485494cbdf39e759c0f8
#: ../../topics/i18n/timezones.txt:544
msgid ""
"a datetime generated by your code, which is naive (or you wouldn't be "
"reading this)."
msgstr ""
"относительное значение времени, созданное вашим кодом (иначе бы вы это не "
"читали)."

# 051895704a8d4994ada05cbf62ea5b44
#: ../../topics/i18n/timezones.txt:547
msgid ""
"Generally, the correct solution is to change your code to use an aware "
"datetime instead."
msgstr ""
"В общем, правильным решением будет изменить ваш код так, чтобы он "
"использовал значения абсолютного времени."

# b432ce3746384ef0b2c21197897ab420
#: ../../topics/i18n/timezones.txt:550
msgid ""
"If you're writing a pluggable application that's expected to work "
"independently of the value of :setting:`USE_TZ`, you may find :func:`django."
"utils.timezone.now` useful. This function returns the current date and time "
"as a naive datetime when ``USE_TZ = False`` and as an aware datetime when "
"``USE_TZ = True``. You can add or subtract :class:`datetime.timedelta` as "
"needed."
msgstr ""
"Если вы пишете независимое приложение, которое должно работать независимо от "
"значения :setting:`USE_TZ`, вы можете найти функцию :func:`django.utils."
"timezone.now` полезной. Эта функция возвращает текущую дату и время в виде "
"объекта относительного времени при ``USE_TZ = False`` и в виде объекта "
"абсолютного времени при ``USE_TZ = True``. Вы можете применять к её "
"значению :class:`datetime.timedelta` когда потребуется."

# 3dfc18e0f319479696847a2ade61e0e2
#: ../../topics/i18n/timezones.txt:557
msgid ""
"**I see lots of** ``RuntimeWarning: DateTimeField received a naive "
"datetime`` ``(YYYY-MM-DD HH:MM:SS)`` ``while time zone support is active`` "
"**-- is that bad?**"
msgstr ""
"**Я вижу множество** ``RuntimeWarning: DateTimeField received a naive "
"datetime`` ``(YYYY-MM-DD HH:MM:SS)`` **при включенной поддержке часовых "
"поясов -- это плохо?**"

# 17e30555985e4f9aadac541d2dbd24bb
#: ../../topics/i18n/timezones.txt:561
msgid ""
"When time zone support is enabled, the database layer expects to receive "
"only aware datetimes from your code. This warning occurs when it receives a "
"naive datetime. This indicates that you haven't finished porting your code "
"for time zone support. Please refer to the :ref:`migration guide <time-zones-"
"migration-guide>` for tips on this process."
msgstr ""
"При включенной поддержке часовых поясов, модуль для работы с базой данных "
"ожидает получать только значения абсолютного времени от вашего кода. Это "
"предупреждение показывает, что модуль получил значение относительного "
"времени. То есть, вы не завершили портирование своего кода для поддержки "
"часовых поясов. См. :ref:`руководство по миграции <time-zones-migration-"
"guide>` для подсказок относительно этого процесса."

# 94b4ced100894e6a90cfd9ddf332f5a4
#: ../../topics/i18n/timezones.txt:567
msgid ""
"In the meantime, for backwards compatibility, the datetime is considered to "
"be in the default time zone, which is generally what you expect."
msgstr ""
"Тем временем, для обратной совместимости, предполагается, что по умолчанию "
"значение времени создано в локальном часовом поясе. Это логично."

# c651f684ffcb4b7d8fc489d0bb7b940a
#: ../../topics/i18n/timezones.txt:570
msgid "``now.date()`` **is yesterday! (or tomorrow)**"
msgstr "``now.date()`` **это вчера! (или завтра)**"

# 72cc66428fd54490b59d7a5efac3591d
#: ../../topics/i18n/timezones.txt:572
msgid ""
"If you've always used naive datetimes, you probably believe that you can "
"convert a datetime to a date by calling its :meth:`~datetime.datetime.date` "
"method. You also consider that a :class:`~datetime.date` is a lot like a :"
"class:`~datetime.datetime`, except that it's less accurate."
msgstr ""
"Если вы всегда использовали относительное время, возможно вы уверены, что "
"можете преобразовать значение даты/времени в дату с помощью его метода :meth:"
"`~datetime.datetime.date`. Вы также можете считать, что :class:`~datetime."
"date` очень похож на :class:`~datetime.datetime`, за исключением его "
"точности."

# aad56efe4f3f4f0cabf1c27c4770f368
#: ../../topics/i18n/timezones.txt:577
msgid "None of this is true in a time zone aware environment::"
msgstr "Ничего из этого не является правдой в среде абсолютного времени::"

# 82635f49c4044591aa6a14b302cf04fc
#: ../../topics/i18n/timezones.txt:595
msgid ""
"As this example shows, the same datetime has a different date, depending on "
"the time zone in which it is represented. But the real problem is more "
"fundamental."
msgstr ""
"Как показывает данный пример, одинаковые значения даты/времени имеют "
"различные даты в зависимости от часового пояса, в котором они представлены. "
"Но настоящая проблема глубже."

# 12aa34430df04a73bce4f1537fd0c1fe
#: ../../topics/i18n/timezones.txt:599
msgid ""
"A datetime represents a **point in time**. It's absolute: it doesn't depend "
"on anything. On the contrary, a date is a **calendaring concept**. It's a "
"period of time whose bounds depend on the time zone in which the date is "
"considered. As you can see, these two concepts are fundamentally different, "
"and converting a datetime to a date isn't a deterministic operation."
msgstr ""
"Значение даты/времени представляет **момент времени**. Оно абсолютное и не "
"зависит ни от чего. С другой стороны, дата является **концепцией "
"календарного исчисления**. Это период времени, границы которого зависят от "
"часового пояса, в котором эта дата рассматривается. Как вы можете видеть, "
"эти две концепции имеют разную основу и преобразование даты/времени в дату "
"не является детерминистичной операцией."

# 0974996067be48269bfdf70181142be6
#: ../../topics/i18n/timezones.txt:605
msgid "What does this mean in practice?"
msgstr "К чему это приводит на практике?"

# f3ed8a9626aa4be6b0b55ffdb0c48781
#: ../../topics/i18n/timezones.txt:607
msgid ""
"Generally, you should avoid converting a :class:`~datetime.datetime` to :"
"class:`~datetime.date`. For instance, you can use the :tfilter:`date` "
"template filter to only show the date part of a datetime. This filter will "
"convert the datetime into the current time zone before formatting it, "
"ensuring the results appear correctly."
msgstr ""
"В общем, вы должны избегать преобразований :class:`~datetime.datetime` в :"
"class:`~datetime.date`. Например, вы можете использовать шаблонный фильтр :"
"tfilter:`date` для отображения только даты. Этот фильтр учтёт текущий "
"часовой пояс при преобразовании значения даты/времени и обеспечит правильное "
"отображение результата."

# a251469037804d6f90fd3901cf574301
#: ../../topics/i18n/timezones.txt:613
msgid ""
"If you really need to do the conversion yourself, you must ensure the "
"datetime is converted to the appropriate time zone first. Usually, this will "
"be the current timezone::"
msgstr ""
"Если вам действительно требуется выполнить такое преобразование "
"самостоятельно, вы должны сначала преобразовать значение, учтя нужный "
"часовой пояс. Обычно, им будет текущий часовой пояс::"

# cf6176409fe14b4a80ceca5472399de8
#: ../../topics/i18n/timezones.txt:629
#, fuzzy
msgid ""
"**I get an error** \"``Are time zone definitions for your database installed?"
"``\""
msgstr ""
"**Я получил ошибку** \"``Установлены ли pytz и поддержка часовых поясов в "
"базе данных?``\" **pytz установлен, я предполагаю, что проблема в базе "
"данных?**"

# b3069a471c2240079478ff1edf568361
#: ../../topics/i18n/timezones.txt:632
msgid ""
"If you are using MySQL, see the :ref:`mysql-time-zone-definitions` section "
"of the MySQL notes for instructions on loading time zone definitions."
msgstr ""
"Если вы используете MySQL, смотрите раздел :ref:`mysql-time-zone-"
"definitions` о MySQL, там описан процесс установки поддержки часовых поясов "
"для MySQL."

# 672207efc0a9481d91dd79fc64f320f7
#: ../../topics/i18n/timezones.txt:636
msgid "Usage"
msgstr "Использование"

# b18ce2ca9ff2403e8e333ac435a95cf3
#: ../../topics/i18n/timezones.txt:638
msgid ""
"**I have a string** ``\"2012-02-21 10:28:45\"`` **and I know it's in the** ``"
"\"Europe/Helsinki\"`` **time zone. How do I turn that into an aware datetime?"
"**"
msgstr ""
"**У меня есть строка** ``\"2012-02-21 10:28:45\"`` **и я знаю, что она в "
"часовом поясе** ``\"Europe/Helsinki\"`` **. Как мне преобразовать её в "
"значение абсолютного времени?**"

# 4f0040303f1a4dd4bbf53ef78d96b807
#: ../../topics/i18n/timezones.txt:642
msgid "This is exactly what pytz_ is for."
msgstr "Именно для этого и нужна библиотека pytz_."

# 061cb504cf274cf9870bc2b71ce85837
#: ../../topics/i18n/timezones.txt:650
msgid ""
"Note that ``localize`` is a pytz extension to the :class:`~datetime.tzinfo` "
"API. Also, you may want to catch ``pytz.InvalidTimeError``. The "
"documentation of pytz contains `more examples`_. You should review it before "
"attempting to manipulate aware datetimes."
msgstr ""
"Следует отметить, что ``localize`` является расширением pytz_ для :class:"
"`~datetime.tzinfo` API. Также, вы можете пожелать перехватывать исключение :"
"exc:`~pytz.InvalidTimeError`. Документация pytz_ содержит `больше примеров "
"<more examples>`_. Вы должны ознакомиться с ней перед работой со значениями "
"абсолютного времени."

# db32d1c78b1440b6bdb63559b26959cd
#: ../../topics/i18n/timezones.txt:655
msgid "**How can I obtain the local time in the current time zone?**"
msgstr "**Как я могу получить текущее время в текущем часовом поясе?**"

# 6ac27590b8274f4ab6604391b455adb2
#: ../../topics/i18n/timezones.txt:657
msgid "Well, the first question is, do you really need to?"
msgstr "Хорошо, первым вопросом будет: вам действительно это надо?"

# 79ae3f2586a146c6ae2d7740ce92acd9
#: ../../topics/i18n/timezones.txt:659
msgid ""
"You should only use local time when you're interacting with humans, and the "
"template layer provides :ref:`filters and tags <time-zones-in-templates>` to "
"convert datetimes to the time zone of your choice."
msgstr ""
"Вы должны использовать только локальное время при взаимодействии с людьми, "
"для этого модуль шаблонов предоставляет :ref:`фильтры и теги <time-zones-in-"
"templates>` для преобразования значений времени в нужный часовой пояс."

# aea5477d4fa4437695f10cd9cd11f253
#: ../../topics/i18n/timezones.txt:663
msgid ""
"Furthermore, Python knows how to compare aware datetimes, taking into "
"account UTC offsets when necessary. It's much easier (and possibly faster) "
"to write all your model and view code in UTC. So, in most circumstances, the "
"datetime in UTC returned by :func:`django.utils.timezone.now` will be "
"sufficient."
msgstr ""
"Более того, Python знает, как сравнивать значения абсолютного времени, "
"принимая во внимание смещение UTC когда это требуется. Так гораздо проще (и "
"значительно быстрее) создавать код для всех ваших моделей и представлений. "
"Таким образом, в большинстве случаев времени в UTC, возвращённое функцией :"
"func:`django.utils.timezone.now`, будет достаточно."

# e2ff403203fa401a907de094d79774d7
#: ../../topics/i18n/timezones.txt:669
msgid ""
"For the sake of completeness, though, if you really want the local time in "
"the current time zone, here's how you can obtain it::"
msgstr ""
"Ради полноты изложения, если бы вы действительно хотели получить текущее "
"время в местном часовом поясе, это можно было бы сделать так::"

# 11b91daaca0c4463b67fba5005166a1c
#: ../../topics/i18n/timezones.txt:676
#, fuzzy
msgid "In this example, the current time zone is ``\"Europe/Paris\"``."
msgstr ""
"В этом примере библиотека pytz_ установлена и параметр :setting:`TIME_ZONE` "
"настроен на ``\"Europe/Paris\"``."

# 40d8c660e8024c778be443acbef2ab5f
#: ../../topics/i18n/timezones.txt:678
msgid "**How can I see all available time zones?**"
msgstr "**Как я могу получить список всех доступных часовых поясов?**"

# 30a295e68944480aae504daac2f77794
#: ../../topics/i18n/timezones.txt:680
msgid ""
"pytz_ provides helpers_, including a list of current time zones and a list "
"of all available time zones -- some of which are only of historical interest."
msgstr ""
"Библиотека pytz_ предоставляет `шпаргалки <helpers>`_, которые содержат "
"список текущих часовых поясов и список всех доступных часовых поясов. "
"Некоторые из них представляют лишь исторический интерес."

# 5e7a9ff23a2f4c92b79ba0664e73873f
#~ msgid ""
#~ "In this regard, time zones are comparable to ``unicode`` in Python. At "
#~ "first it's hard. You get encoding and decoding errors. Then you learn the "
#~ "rules. And some problems disappear -- you never get mangled output again "
#~ "when your application receives non-ASCII input."
#~ msgstr ""
#~ "В этом отношении часовые пояса сопоставимы с ``unicode`` у Python. "
#~ "Сначала это непросто понять. Вы сталкиваетесь с ошибками кодирования и "
#~ "декодирования. Затем изучаете правила. И некоторые проблемы исчезают. Вы "
#~ "больше не получаете странные строки, когда ваше приложение получает не "
#~ "ASCII строки."

# 53ec815ea5ca4d00aa374f24b0ced888
#~ msgid ""
#~ "Time zone support is disabled by default. To enable it, set :setting:"
#~ "`USE_TZ = True <USE_TZ>` in your settings file. Installing pytz_ is "
#~ "highly recommended, but may not be mandatory depending on your particular "
#~ "database backend, operating system and time zone. If you encounter an "
#~ "exception querying dates or times, please try installing it before filing "
#~ "a bug. It's as simple as:"
#~ msgstr ""
#~ "По умолчанию, поддержка часовых поясов отключена. Для её активации "
#~ "установите :setting:`USE_TZ = True <USE_TZ>` в файле конфигурации "
#~ "проекта. Установка пакета pytz_ крайне рекомендована, но не является "
#~ "обязательной, все зависит от бэкенда базы данных, операционной системы и "
#~ "используемого часового пояса. Если вы получили ошибку при работе с датами "
#~ "и временем, попробуйте установить этот пакет перед тем, как создавать "
#~ "баг. Это просто как:"

# b8e95573e328498b9c57ff50fb75c469
#~ msgid "**Should I install pytz?**"
#~ msgstr "**Должен ли я установить pytz?**"

# 87aa98b565f6497db1f843f19ce93716
#~ msgid ""
#~ "Yes. Django has a policy of not requiring external dependencies, and for "
#~ "this reason pytz_ is optional. However, it's much safer to install it."
#~ msgstr ""
#~ "Да. Django придерживается политики не требовать внешних зависимостей и "
#~ "поэтому установка pytz_ не обязательна. Однако, правильнее будет "
#~ "установить эту библиотеку."

# 94015c3b53d24b13ae3a976d35df0dbb
#~ msgid ""
#~ "As soon as you activate time zone support, Django needs a definition of "
#~ "the default time zone. When pytz is available, Django loads this "
#~ "definition from the `tz database`_. This is the most accurate solution. "
#~ "Otherwise, it relies on the difference between local time and UTC, as "
#~ "reported by the operating system, to compute conversions. This is less "
#~ "reliable, especially around DST transitions."
#~ msgstr ""
#~ "Как только активируете поддержку часовых поясов, Django потребуется "
#~ "определение текущего часового пояса. При наличии pytz_, Django загружает "
#~ "это определение из `базы данных tz <tz database>`_. Это самое точное "
#~ "решение. В противном случае, Django полагается на различие между местным "
#~ "временем и UTC, которое запрашивается у операционной системы, чтобы "
#~ "выполнять преобразования. Это менее надежно, особенно при наличии летнего "
#~ "времени."

# a989e944e8aa4f88843e5b512ef6a941
#~ msgid ""
#~ "Furthermore, if you want to support users in more than one time zone, "
#~ "pytz is the reference for time zone definitions."
#~ msgstr ""
#~ "Кроме того, если требуется поддерживать пользователей в нескольких "
#~ "часовых поясах, pytz обеспечивает определения для часовых поясов."

# 596c19b3d417490495cd58a08472467f
#~ msgid ""
#~ "If you enable the ``django.template.context_processors.tz`` context "
#~ "processor, each :class:`~django.template.RequestContext` will contain a "
#~ "``TIME_ZONE`` variable with the value of ``get_current_timezone()``."
#~ msgstr ""
#~ "При включенном контекстном процессоре  :func:`django.core."
#~ "context_processors.tz`, по умолчанию он включен, каждый контекст запроса :"
#~ "class:`~django.template.RequestContext` содержит переменную "
#~ "``TIME_ZONE``, которая содержит значение ``get_current_timezone()``."

# a51fda8e133d4877997490787e0b08d7
#~ msgid "utc"
#~ msgstr "utc"

# 346d1fecc5fe4420a472583effcd7344
#~ msgid ""
#~ "If you don't use a :class:`~django.template.RequestContext`, you can "
#~ "obtain this value with the ``get_current_timezone`` tag::"
#~ msgstr ""
#~ "Если вы не используете класс :class:`~django.template.RequestContext`, то "
#~ "вы можете получить это значение с помощью тега ``get_current_timezone``::"

# 0d21df80992343e5999264c264b60fb8
#~ msgid ""
#~ ":mod:`django.utils.timezone` provides a :func:`~django.utils.timezone."
#~ "now()` function that returns a naive or aware datetime object according "
#~ "to the value of :setting:`USE_TZ`."
#~ msgstr ""
#~ "Модуль :mod:`django.utils.timezone` предоставляет функцию :func:`~django."
#~ "utils.timezone.now()`, которая возвращает текущее время, относительное "
#~ "или абсолютное, в зависимости от значения параметра конфигурации :setting:"
#~ "`USE_TZ`."
