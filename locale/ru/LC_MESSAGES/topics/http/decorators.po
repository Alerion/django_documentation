# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-12-08 11:07+0200\n"
"PO-Revision-Date: 2016-03-17 14:23+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# 7d38ee71128c47a79916d63f29bdc2be
#: ../../topics/http/decorators.txt:3
msgid "View decorators"
msgstr "Декораторы представлений"

# acacb3d8307c4a5cb660ec856b349c5e
#: ../../topics/http/decorators.txt:7
msgid ""
"Django provides several decorators that can be applied to views to support "
"various HTTP features."
msgstr ""
"Django предоставляет несколько декораторов, которые могут быть применены к "
"функции представления, для поддержки различных функций HTTP."

# 0da16ccf5f3b4f30873c4dbc2ae8380a
#: ../../topics/http/decorators.txt:11
msgid "Allowed HTTP methods"
msgstr "Ограничение на тип HTTP запроса"

# f3e50aae4c5543c19f79043fd45afa42
#: ../../topics/http/decorators.txt:13
msgid ""
"The decorators in :mod:`django.views.decorators.http` can be used to "
"restrict access to views based on the request method. These decorators will "
"return a :class:`django.http.HttpResponseNotAllowed` if the conditions are "
"not met."
msgstr ""
"Декораторы из модуля :mod:`django.views.decorators.http` могут быть "
"использованы для ограничения доступа к представлению в зависимости от типа "
"запроса. Эти декораторы возвращают :class:`django.http."
"HttpResponseNotAllowed` если требования к типу запроса не удовлетворены."

# 3f707408f50e41588697b28ab545a8e9
#: ../../topics/http/decorators.txt:19
msgid ""
"Decorator to require that a view only accepts particular request methods. "
"Usage::"
msgstr ""
"Декоратор позволяет представлению обрабатывать только указанные типы "
"запросов. Например::"

# e8e4736487a547a9afe36d056b6c8b14
#: ../../topics/http/decorators.txt:30
msgid "Note that request methods should be in uppercase."
msgstr "Заметим, что тип запроса должен быть указан в верхнем регистре."

# c7fb949b25be4cf69a76537410807a40
#: ../../topics/http/decorators.txt:34
msgid "Decorator to require that a view only accepts the GET method."
msgstr "Декоратор позволяет представлению обрабатывать только GET-запросы."

# 859ed596092c490e8390ad47d304e2a3
#: ../../topics/http/decorators.txt:38
msgid "Decorator to require that a view only accepts the POST method."
msgstr "Декоратор позволяет представлению обрабатывать только POST-запросы."

# edf19c216c904924aa6d9987aded2b43
#: ../../topics/http/decorators.txt:42
msgid ""
"Decorator to require that a view only accepts the GET and HEAD methods. "
"These methods are commonly considered \"safe\" because they should not have "
"the significance of taking an action other than retrieving the requested "
"resource."
msgstr ""
"Декоратор позволяет представлению обрабатывать только GET и HEAD запросы. "
"Эти метода считаются \"безопасными\", потому что не должны предпринимать "
"каких либо действий кроме получения данных."

# b26db2b351de4e88bab22c183ccf7309
#: ../../topics/http/decorators.txt:48
#, fuzzy
msgid ""
"Web servers should automatically strip the content of responses to HEAD "
"requests while leaving the headers unchanged, so you may handle HEAD "
"requests exactly like GET requests in your views. Since some software, such "
"as link checkers, rely on HEAD requests, you might prefer using "
"``require_safe`` instead of ``require_GET``."
msgstr ""
"Django обрезает содержимое для HEAD запроса не изменяя заголовки ответа, по "
"этому вы можете обрабатывать HEAD запросе тем же представлением, которое "
"обрабатывает GET запросы. Так как некоторое программное обеспечение, "
"например проверщик ссылок, используют HEAD запросы, возможно вам лучше "
"использовать ``require_safe`` вместо ``require_GET``."

# 405e1ecd148e439d965bc18a24972335
#: ../../topics/http/decorators.txt:55
msgid "Conditional view processing"
msgstr "Условная обработка запроса"

# 4ba00eb1cb9b4729859e984055db3404
#: ../../topics/http/decorators.txt:57
msgid ""
"The following decorators in :mod:`django.views.decorators.http` can be used "
"to control caching behavior on particular views."
msgstr ""
"Декораторы из модуля :mod:`django.views.decorators.http` могут быть "
"использованы для управления кэширования определенных представлений."

# 5ecaa3395a534d38973488a7c4ef9d30
#: ../../topics/http/decorators.txt:66
msgid ""
"These decorators can be used to generate ``ETag`` and ``Last-Modified`` "
"headers; see :doc:`conditional view processing </topics/conditional-view-"
"processing>`."
msgstr ""
"Эти декораторы могут использоваться для генерации заголовков ``ETag`` и "
"``Last-Modified``; смотрите раздел про :doc:`условную обработку запроса </"
"topics/conditional-view-processing>`."

# 0a8a206f5af041dd875baee39c422b6c
#: ../../topics/http/decorators.txt:73
msgid "GZip compression"
msgstr "Сжатие с использованием GZip"

# 0f42b920bad1484bbf08cc8ff8bd370a
#: ../../topics/http/decorators.txt:75
msgid ""
"The decorators in :mod:`django.views.decorators.gzip` control content "
"compression on a per-view basis."
msgstr ""
"Декораторы из :mod:`django.views.decorators.gzip` управляют сжатием ответа "
"представления."

# df2d314d09b14b4085aad0c86b2b3b86
#: ../../topics/http/decorators.txt:80
msgid ""
"This decorator compresses content if the browser allows gzip compression. It "
"sets the ``Vary`` header accordingly, so that caches will base their storage "
"on the ``Accept-Encoding`` header."
msgstr ""
"Этот декоратор сжимает содержимое ответа, если браузер допускает gzip "
"сжатие. Он устанавливает соответствующий заголовок ``Vary`` указывая "
"учитывать заголовок ``Accept-Encoding`` при кэшировании."

# 85ca347ba3094bacbcb2e79f14b1d63a
#: ../../topics/http/decorators.txt:87
msgid "Vary headers"
msgstr "Заголовки Vary"

# 302d4354ae2e4fa4b4af9ee137d7f499
#: ../../topics/http/decorators.txt:89
msgid ""
"The decorators in :mod:`django.views.decorators.vary` can be used to control "
"caching based on specific request headers."
msgstr ""
"Декораторы из модуля :mod:`django.views.decorators.vary` могут "
"использоваться для кэширования по определенным заголовкам запроса."

# 51bd6d80722a40d7bf87b6689c36104e
#: ../../topics/http/decorators.txt:96
msgid ""
"The ``Vary`` header defines which request headers a cache mechanism should "
"take into account when building its cache key."
msgstr ""
"Заголовок ``Vary`` указывает какие заголовки должен использоваться "
"кэширующий механизм при создании ключа кэша."

# b1595a5d45fb4b2da5c97b55b78e8048
#: ../../topics/http/decorators.txt:99
msgid "See :ref:`using vary headers <using-vary-headers>`."
msgstr "Смотрите :ref:`использование Vary заголовка <using-vary-headers>`."

#: ../../topics/http/decorators.txt:104
msgid "Caching"
msgstr "Кэширование"

# 0f42b920bad1484bbf08cc8ff8bd370a
#: ../../topics/http/decorators.txt:106
msgid ""
"The decorators in :mod:`django.views.decorators.cache` control server and "
"client-side caching."
msgstr ""
"Декораторы из :mod:`django.views.decorators.cache` управляют кэшированием на "
"стороне сервера и клиента "

#: ../../topics/http/decorators.txt:111
msgid ""
"This decorator patches the response's ``Cache-Control`` header by adding all "
"of the keyword arguments to it. See :func:`~django.utils.cache."
"patch_cache_control` for the details of the transformation."
msgstr ""

#: ../../topics/http/decorators.txt:118
msgid ""
"This decorator adds a ``Cache-Control: max-age=0, no-cache, no-store, must-"
"revalidate`` header to a response to indicate that a page should never be "
"cached."
msgstr ""
"Декоратор добавляет заголовок ``Cache-Control: max-age=0, no-cache, no-"
"store, must-revalidate`` к ответу, указывая, что странице не должна никогда "
"кэшироваться."

#: ../../topics/http/decorators.txt:124
msgid ""
"Before Django 1.9, ``Cache-Control: max-age=0`` was sent. This didn't "
"reliably prevent caching in all browsers."
msgstr ""
"До Django 1.9 отправлялся ``Cache-Control: max-age=0``. Это не работало во "
"всех браузерах."
