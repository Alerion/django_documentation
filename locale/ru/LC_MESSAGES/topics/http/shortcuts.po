# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012.
# Dmitriy Kostochko <alerion.um@gmail.com>, 2013, 2014, 2015.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-12-03 16:54+0200\n"
"PO-Revision-Date: 2015-12-10 00:18+0200\n"
"Last-Translator: Dmitriy Kostochko <alerion.um@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# 0fdef28ca9d1453d87a1fa1ed3f9394f
#: ../../topics/http/shortcuts.txt:3
msgid "Django shortcut functions"
msgstr "Вспомогательные функции"

# 9874afbc0c7f4f50a49f11e2feea759f
#: ../../topics/http/shortcuts.txt:11
msgid ""
"The package ``django.shortcuts`` collects helper functions and classes that "
"\"span\" multiple levels of MVC. In other words, these functions/classes "
"introduce controlled coupling for convenience's sake."
msgstr ""
"Пакет ``django.shortcuts`` содержит вспомогательные функции и классы "
"\"влияющие\" на несколько уровней MVC. Другими словами, эти функции упрощают "
"разработку и код."

# 5cf690bba0fa47c79456c895354a8482
#: ../../topics/http/shortcuts.txt:16
#, fuzzy
msgid "``render()``"
msgstr "``render``"

# 120eb64e27274da2ae9efa00ec67034a
#: ../../topics/http/shortcuts.txt:20
msgid ""
"Combines a given template with a given context dictionary and returns an :"
"class:`~django.http.HttpResponse` object with that rendered text."
msgstr ""
"Выполняет указанный шаблон с переданным словарем контекста и возвращает :"
"class:`~django.http.HttpResponse` с полученным содержимым."

# e1ae1e96d18948d2a388512aa5f9ff63
#: ../../topics/http/shortcuts.txt:23
msgid ""
"Django does not provide a shortcut function which returns a :class:`~django."
"template.response.TemplateResponse` because the constructor of :class:"
"`~django.template.response.TemplateResponse` offers the same level of "
"convenience as :func:`render()`."
msgstr ""
"Django не предоставляет функции для создания :class:`~django.template."
"response.TemplateResponse` т.к. конструктор :class:`~django.template."
"response.TemplateResponse` принимает аргументы аналогичные аргументам :func:"
"`render()`."

# 22b6156469e0453386bf2ef9a380a5f5
# 39871cc84a72440681fa12e51c571708
# 1ddd0b099da740c0ad0af9536cbb79ed
# 5931fe0df81c4315a6c1de3fbe87a7c0
#: ../../topics/http/shortcuts.txt:29 ../../topics/http/shortcuts.txt:172
#: ../../topics/http/shortcuts.txt:245
msgid "Required arguments"
msgstr "Обязательные аргументы"

# 485ce6068826403a99b765a59fa5f53b
#: ../../topics/http/shortcuts.txt:32
#, fuzzy
msgid "``request``"
msgstr "``request``"

# d55753341cc74bc7b3569600bbd38453
#: ../../topics/http/shortcuts.txt:32
msgid "The request object used to generate this response."
msgstr "Объект обрабатываемого запроса"

# ba452dc5979a4cf29b0ba623f7b70f8d
# ec3b51fb95c8473fa6f7a40246d55ee0
#: ../../topics/http/shortcuts.txt:38
#, fuzzy
msgid "``template_name``"
msgstr "``template_name``"

# 1c17486df3284a7fa39300f33a10628b
#: ../../topics/http/shortcuts.txt:35
msgid ""
"The full name of a template to use or sequence of template names. If a "
"sequence is given, the first template that exists will be used. See the :ref:"
"`template loading documentation <template-loading>` for more information on "
"how templates are found."
msgstr ""
"Полное название шаблона, который должен использоваться, или список названий "
"шаблонов. Если передать список, будет использован первый существующий "
"шаблон. Обратитесь к :ref:`документации по загрузке шаблонов <temlate-"
"loading>` для получения информации о методике поиска шаблонов."

# f084759bdc5246778ef1a62184e9a071
# d6988793e0c044008cb4a8e51217541c
#: ../../topics/http/shortcuts.txt:41
msgid "Optional arguments"
msgstr "Необязательные аргументы"

# f5a58ae4b44443fb8c8a8f1b94862c0c
# aa475964a59e48fe9901d194cc29d851
#: ../../topics/http/shortcuts.txt:46
#, fuzzy
msgid "``context``"
msgstr "``context``"

# a428bd2c5d6f4cf495bd94ec9044937c
# 92fa78f05a954c9490db6fb247882607
#: ../../topics/http/shortcuts.txt:44
msgid ""
"A dictionary of values to add to the template context. By default, this is "
"an empty dictionary. If a value in the dictionary is callable, the view will "
"call it just before rendering the template."
msgstr ""
"Словарь переменных для контекста шаблона. По умолчанию, этот словарь пустой. "
"Если значение ключа словаря это функция, она будет вызвана перед выполнением "
"шаблона."

# f5a58ae4b44443fb8c8a8f1b94862c0c
# aa475964a59e48fe9901d194cc29d851
#: ../../topics/http/shortcuts.txt:50
#, fuzzy
msgid "``content_type``"
msgstr "``content_type``"

# 1f66e0d6035f4dbab99b765d239e6b2a
# bfd3b5304e3f4db7a35cc56abb2e9cb3
#: ../../topics/http/shortcuts.txt:49
msgid ""
"The MIME type to use for the resulting document. Defaults to the value of "
"the :setting:`DEFAULT_CONTENT_TYPE` setting."
msgstr ""
"MIME-тип результата. По умолчанию используется значение настройки :setting:"
"`DEFAULT_CONTENT_TYPE`."

# 934ba8df451f480eb1e163cb21ea0a8f
#: ../../topics/http/shortcuts.txt:53
#, fuzzy
msgid "``status``"
msgstr "``status``"

# 3396194a02184462b39c6e8b6482d107
#: ../../topics/http/shortcuts.txt:53
msgid "The status code for the response. Defaults to ``200``."
msgstr "Код HTTP статуса ответа. По умолчанию ``200``."

#: ../../topics/http/shortcuts.txt:57
#, fuzzy
msgid "``using``"
msgstr "``using``"

#: ../../topics/http/shortcuts.txt:56
msgid ""
"The :setting:`NAME <TEMPLATES-NAME>` of a template engine to use for loading "
"the template."
msgstr ""
"Параметр конфигурации :setting:`NAME <TEMPLATES-NAME>` используется "
"шаблонным движком для загрузки шаблона."

# ed8cae9a51d54c52989343a5cc77c1b0
# f217232c81b449398254a298bc7dfffe
# 0f0a8938208e4c02a8a169c2db2716af
# 47ce19d638c4486aa94ee0dc3c423011
#: ../../topics/http/shortcuts.txt:60 ../../topics/http/shortcuts.txt:185
#: ../../topics/http/shortcuts.txt:257
msgid "Example"
msgstr "Пример"

# ca9e9cedf30440e9b49df93931e4089a
# cb358dad622f4e4e807e57ff636eb526
#: ../../topics/http/shortcuts.txt:62
msgid ""
"The following example renders the template ``myapp/index.html`` with the "
"MIME type :mimetype:`application/xhtml+xml`::"
msgstr ""
"Следующий пример выполняет шаблон ``myapp/index.html`` и возвращает ответ с "
"MIME-типом :mimetype:`application/xhtml+xml`::"

# c2a6775e9e4b440483ef2960e1973b9c
# fc8911e1b0d14e2388e99f6bd84bfcb9
# f0559d9696474336824b69bad74fde9e
# fb05d668f9e04050a8284eb21e355aaa
#: ../../topics/http/shortcuts.txt:73 ../../topics/http/shortcuts.txt:195
#: ../../topics/http/shortcuts.txt:266
msgid "This example is equivalent to::"
msgstr "Этот пример аналогичен::"

# 0e5a3163006e42e192eafe2dddccbd30
#: ../../topics/http/shortcuts.txt:85
#, fuzzy
msgid "``render_to_response()``"
msgstr "``render_to_response``"

#: ../../topics/http/shortcuts.txt:91
msgid ""
"This function preceded the introduction of :func:`render` and works "
"similarly except that it doesn't make the ``request`` available in the "
"response."
msgstr ""

# 485ce6068826403a99b765a59fa5f53b
#: ../../topics/http/shortcuts.txt:96
#, fuzzy
msgid "``redirect()``"
msgstr "``redirect``"

# a95000fe88ce43d8955b5a5b1cea8fa1
#: ../../topics/http/shortcuts.txt:100
msgid ""
"Returns an :class:`~django.http.HttpResponseRedirect` to the appropriate URL "
"for the arguments passed."
msgstr ""
"Возвращает перенаправление(:class:`~django.http.HttpResponseRedirect`) на "
"URL указанный через аргументы."

# ff0f98d040e64e4ba3e948ef5cc0ab60
#: ../../topics/http/shortcuts.txt:103
msgid "The arguments could be:"
msgstr "В аргументах можно передать:"

# 20d88ee9f365425989a6663d980c9787
#: ../../topics/http/shortcuts.txt:105
msgid ""
"A model: the model's :meth:`~django.db.models.Model.get_absolute_url()` "
"function will be called."
msgstr ""
"Экземпляр модели: как URL будет использоваться результат вызова метода :meth:"
"`~django.db.models.Model.get_absolute_url()`."

# 79fb1ec974c44e85abfbe955416d6ab8
#: ../../topics/http/shortcuts.txt:108
#, fuzzy
msgid ""
"A view name, possibly with arguments: :func:`~django.urls.reverse` will be "
"used to reverse-resolve the name."
msgstr ""
"Название представления, возможно с аргументами: для вычисления URL-а будет "
"использоваться функция :func:`urlresolvers.reverse <django.core.urlresolvers."
"reverse>`."

# 17d9c23182f64593b087ae5435c9ebd8
#: ../../topics/http/shortcuts.txt:111
msgid ""
"An absolute or relative URL, which will be used as-is for the redirect "
"location."
msgstr ""
"Абсолютный или относительный URL, который будет использован для "
"перенаправления на указанный адрес."

# 63c7598948964f7d8a24bfef1d66bc75
#: ../../topics/http/shortcuts.txt:114
msgid ""
"By default issues a temporary redirect; pass ``permanent=True`` to issue a "
"permanent redirect."
msgstr ""
"По умолчанию использует временное перенаправление, используйте аргумент "
"``permanent=True`` для постоянного перенаправления."

# 86fbc06e0efb47bc9f26e1b5d9edde64
#: ../../topics/http/shortcuts.txt:118
msgid "Examples"
msgstr "Примеры"

# a9dc30694a3147098ff29e75cc6d8128
#: ../../topics/http/shortcuts.txt:120
msgid "You can use the :func:`redirect` function in a number of ways."
msgstr "Функцию :func:`redirect` можно использовать несколькими способами."

# 312f7b225c9e46a4861f8e4edcf2c2b0
#: ../../topics/http/shortcuts.txt:122
msgid ""
"By passing some object; that object's :meth:`~django.db.models.Model."
"get_absolute_url` method will be called to figure out the redirect URL::"
msgstr ""
"Передавая объект; в качестве URL-а для перенаправления будет использоваться "
"результат вызова метода :meth:`~django.db.models.Model.get_absolute_url`::"

# 309336377ebe4fa593967d5efb2602b7
#: ../../topics/http/shortcuts.txt:133
#, fuzzy
msgid ""
"By passing the name of a view and optionally some positional or keyword "
"arguments; the URL will be reverse resolved using the :func:`~django.urls."
"reverse` method::"
msgstr ""
"Передавая название представления и необходимые позиционные или именованные "
"аргументы; URL будет вычислен с помощью функции :func:`~django.core."
"urlresolvers.reverse`::"

# 09620414ad8147f688062fe49d26fc5f
#: ../../topics/http/shortcuts.txt:141
msgid "By passing a hardcoded URL to redirect to::"
msgstr "Передавая непосредственно URL::"

# c8082252ee8b4758abf0568b0596e976
#: ../../topics/http/shortcuts.txt:147
msgid "This also works with full URLs::"
msgstr "Работает также с полным URL-ом::"

# c5f3c7fbed364027a65eed6f0eb8c012
#: ../../topics/http/shortcuts.txt:153
msgid ""
"By default, :func:`redirect` returns a temporary redirect. All of the above "
"forms accept a ``permanent`` argument; if set to ``True`` a permanent "
"redirect will be returned::"
msgstr ""
"По умолчанию, :func:`redirect` возвращает временное перенаправление. Все "
"варианты выше принимают аргумент ``permanent``; если передать ``True`` будет "
"использоваться постоянное перенаправление::"

# 8c3de29c1d814fb982f80da25515c46c
#: ../../topics/http/shortcuts.txt:163
#, fuzzy
msgid "``get_object_or_404()``"
msgstr "``get_object_or_404``"

# f7a8b7f701a9424ab3eeb90716e2ac85
#: ../../topics/http/shortcuts.txt:167
msgid ""
"Calls :meth:`~django.db.models.query.QuerySet.get()` on a given model "
"manager, but it raises :class:`~django.http.Http404` instead of the model's :"
"class:`~django.db.models.Model.DoesNotExist` exception."
msgstr ""
"Вызывает :meth:`~django.db.models.query.QuerySet.get()` для переданного "
"менеджера модели и возвращает полученный объект. Но вызывает исключение :"
"class:`~django.http.Http404` вместо :class:`~django.db.models.Model."
"DoesNotExist`."

# cca594169b794596b4078abd7d3c5a12
# fc7a92e9563d4832845161470a5a27f7
#: ../../topics/http/shortcuts.txt:178 ../../topics/http/shortcuts.txt:250
#, fuzzy
msgid "``klass``"
msgstr "``klass``"

# d1024609131a4a309abd1d8fb5289471
#: ../../topics/http/shortcuts.txt:175
msgid ""
"A :class:`~django.db.models.Model` class, a :class:`~django.db.models."
"Manager`, or a :class:`~django.db.models.query.QuerySet` instance from which "
"to get the object."
msgstr ""
"Класс :class:`~django.db.models.Model`, экземпляр :class:`~django.db.models."
"Manager` или :class:`~django.db.models.query.QuerySet`, который будет "
"использован для получения объекта."

# 052e94abaeb74af39bafa4eb015a690f
# 8f690ac4554847cbb99b74ec0e0e013c
#: ../../topics/http/shortcuts.txt:182 ../../topics/http/shortcuts.txt:254
#, fuzzy
msgid "``**kwargs``"
msgstr "``**kwargs``"

# 57e3897f40af42fdb4596811a864edc9
# d4e335be6adf4f43aa4c161eb40b0293
#: ../../topics/http/shortcuts.txt:181 ../../topics/http/shortcuts.txt:253
msgid ""
"Lookup parameters, which should be in the format accepted by ``get()`` and "
"``filter()``."
msgstr ""
"Параметры поиска в формате принимаемом методами ``get()`` и ``filter()``."

# fd0dbe7a32f546d68c36f1d0d3b57e79
#: ../../topics/http/shortcuts.txt:187
msgid ""
"The following example gets the object with the primary key of 1 from "
"``MyModel``::"
msgstr ""
"Этот пример получает объект модели ``MyModel`` с первичным ключом равным 1::"

# df314be02026419b8e30c1b1337643f6
#: ../../topics/http/shortcuts.txt:205
msgid ""
"The most common use case is to pass a :class:`~django.db.models.Model`, as "
"shown above. However, you can also pass a :class:`~django.db.models.query."
"QuerySet` instance::"
msgstr ""
"Обычно используется :class:`~django.db.models.Model`, как в примере выше. Но "
"можно передать и объект :class:`~django.db.models.query.QuerySet`::"

# 5b4d8d7f879d46faaeb1f3177c4b7cdf
#: ../../topics/http/shortcuts.txt:212
msgid "The above example is a bit contrived since it's equivalent to doing::"
msgstr "Приведенный пример немного надуманный, так как это равносильно::"

# 2fa610a56f7b4000900239409b29dfa9
#: ../../topics/http/shortcuts.txt:216
msgid ""
"but it can be useful if you are passed the ``queryset`` variable from "
"somewhere else."
msgstr "но может быть полезен, если ``queryset`` передается из другого места."

# c22b41b6321f41b0a2bda73ff0548d50
#: ../../topics/http/shortcuts.txt:219
msgid ""
"Finally, you can also use a :class:`~django.db.models.Manager`. This is "
"useful for example if you have a :ref:`custom manager<custom-managers>`::"
msgstr ""
"Также можно использовать :class:`~django.db.models.Manager`. Это полезно, "
"если, например, вы используете :ref:`собственный менеджер<custom-managers>`::"

# 7767d9ef6bf84fe4b3a5ff31c4335ca6
#: ../../topics/http/shortcuts.txt:225
msgid ""
"You can also use :class:`related managers<django.db.models.fields.related."
"RelatedManager>`::"
msgstr ""
"Можно использовать :class:`менеджер отношений между моделями<django.db."
"models.fields.related.RelatedManager>`::"

# 0a7a725f1ad543329e440f6a9df00642
#: ../../topics/http/shortcuts.txt:231
msgid ""
"Note: As with ``get()``, a :class:`~django.core.exceptions."
"MultipleObjectsReturned` exception will be raised if more than one object is "
"found."
msgstr ""
"Заметим: так как используется метод ``get()``, может быть вызвано "
"исключение :class:`~django.core.exceptions.MultipleObjectsReturned`, если "
"запрос вернет несколько объектов."

# dd53fb5b46254492b96b388c0c58eede
#: ../../topics/http/shortcuts.txt:236
#, fuzzy
msgid "``get_list_or_404()``"
msgstr "``get_list_or_404``"

# 1cb456843926459fa67e281bfa55cf0b
#: ../../topics/http/shortcuts.txt:240
msgid ""
"Returns the result of :meth:`~django.db.models.query.QuerySet.filter()` on a "
"given model manager cast to a list, raising :class:`~django.http.Http404` if "
"the resulting list is empty."
msgstr ""
"Возвращает результат метода :meth:`~django.db.models.query.QuerySet."
"filter()` для переданного менеджера модели, вызывает :class:`~django.http."
"Http404` если получен пустой список."

# df314be02026419b8e30c1b1337643f6
#: ../../topics/http/shortcuts.txt:248
msgid ""
"A :class:`~django.db.models.Model`, :class:`~django.db.models.Manager` or :"
"class:`~django.db.models.query.QuerySet` instance from which to get the list."
msgstr ""
"Экземпляр :class:`~django.db.models.Model`, :class:`~django.db.models."
"Manager` или :class:`~django.db.models.query.QuerySet`, который будет "
"использован для получения списка объектов."

# 83244d4cb2c5447f8a576b84cbca3d86
#: ../../topics/http/shortcuts.txt:259
msgid "The following example gets all published objects from ``MyModel``::"
msgstr "Этот пример получает все опубликованные объекты модели``MyModel``::"

# d572f24415db4fe3be367ddcdac77a21
#~ msgid ""
#~ ":func:`render()` is the same as a call to :func:`render_to_response()` "
#~ "with a ``context_instance`` argument that forces the use of a :class:"
#~ "`~django.template.RequestContext`."
#~ msgstr ""
#~ "Функция :func:`render()` аналогична вызову функции :func:"
#~ "`render_to_response()` с аргументом ``context_instance``, который "
#~ "указывает использовать :class:`~django.template.RequestContext`."

# 0f66c123afa145038bd0558c9af2b82b
#~ msgid "The full name of a template to use or sequence of template names."
#~ msgstr ""
#~ "Полное название шаблона, который должен использоваться, или список "
#~ "названий шаблонов. Если передать список, будет использован первый "
#~ "существующий шаблон. Информацию о том, как ищутся шаблоны, смотрите "
#~ "раздел о :ref:`загрузчике шаблонов <ref-templates-api-the-python-api>`."

#~ msgid ""
#~ "The ``context`` argument used to be called ``dictionary``. That name is "
#~ "deprecated in Django 1.8 and will be removed in Django 1.10."
#~ msgstr ""
#~ "Аргумент ``context`` назывался ``dictionary``. Это наименование устарело, "
#~ "начиная с Django 1.8, и будет удалено в Django 1.10."

# 31bff13cb98f46359b31d19d8e72e534
# dd2d151bcd8941afbd5a997c429a818c
#~ msgid "``context_instance``"
#~ msgstr "``context_instance``"

# 1ce558b4298045e8a98918cea76fd849
#~ msgid ""
#~ "The context instance to render the template with. By default, the "
#~ "template will be rendered with a ``RequestContext`` instance (filled with "
#~ "values from ``request`` and ``context``)."
#~ msgstr ""
#~ "Экземпляр контекста, который будет использоваться при выполнении шаблона. "
#~ "По умолчанию, шаблон будет обработан с помощью экземпляра "
#~ "``RequestContext`` (со значениями с ``request`` и ``context``)."

#~ msgid ""
#~ "The ``context_instance`` argument is deprecated. Simply use ``context``."
#~ msgstr ""
#~ "Аргумент ``context_instance`` устарел. Просто используйте ``context``."

# 2c9e48ca59034ee68a1937c3e0b1b602
#~ msgid "``current_app``"
#~ msgstr "``current_app``"

# 280dbaa61ac7405390c8adc89b077e80
#~ msgid ""
#~ "A hint indicating which application contains the current view. See the :"
#~ "ref:`namespaced URL resolution strategy <topics-http-reversing-url-"
#~ "namespaces>` for more information."
#~ msgstr ""
#~ "Указывает приложение, которое содержит данное представление. Подробности "
#~ "смотрите раздел про :ref:`пространства имен в URL <topics-http-reversing-"
#~ "url-namespaces>`."

#~ msgid ""
#~ "The ``current_app`` argument is deprecated. Instead you should set "
#~ "``request.current_app``."
#~ msgstr ""
#~ "Аргумент ``current_app`` устарел. Используйте ``request.current_app`` "
#~ "вместо него."

# f6b75b5142504b2b97ebdd4a8a11ea88
# d5f1d446c6494d3d9b53a13043c4d7ea
#~ msgid "The ``using`` parameter was added."
#~ msgstr "Был добавлен параметр ``using``."

# f6b75b5142504b2b97ebdd4a8a11ea88
# d5f1d446c6494d3d9b53a13043c4d7ea
#~ msgid "The ``dirs`` parameter was deprecated."
#~ msgstr "Параметр ``dirs`` устарел."

# 793e3c95e0a647ffbd94c4356509e50a
#~ msgid ""
#~ "Renders a given template with a given context dictionary and returns an :"
#~ "class:`~django.http.HttpResponse` object with that rendered text."
#~ msgstr ""
#~ "Выполняет указанный шаблон с переданным словарем контекста и возвращает :"
#~ "class:`~django.http.HttpResponse` с полученным содержимым."

# 207dbff27d404f4d9b84cc99d26f63a5
#~ msgid ""
#~ "The context instance to render the template with. By default, the "
#~ "template will be rendered with a :class:`~django.template.Context` "
#~ "instance (filled with values from ``context``). If you need to use :ref:"
#~ "`context processors <subclassing-context-requestcontext>`, render the "
#~ "template with a :class:`~django.template.RequestContext` instance "
#~ "instead. Your code might look something like this::"
#~ msgstr ""
#~ "Экземпляр контекста, который будет использоваться при выполнении шаблона. "
#~ "По умолчанию, используется экземпляр :class:`~django.template.Context` "
#~ "(со значениями с ``context``). Если вам необходимо использовать :ref:"
#~ "`процессоры контекста <subclassing-context-requestcontext>`, передайте "
#~ "экземпляр :class:`~django.template.RequestContext`. Ваш код может "
#~ "выглядеть таким образом::"

# f6b75b5142504b2b97ebdd4a8a11ea88
# d5f1d446c6494d3d9b53a13043c4d7ea
#~ msgid "The ``status`` and ``using`` parameters were added."
#~ msgstr "Были добавлены параметры ``status`` и ``using``."

# 7baf18f3a9d84975897b60faa0bbb3aa
#~ msgid "shortcuts"
#~ msgstr "shortcuts"

# f6b75b5142504b2b97ebdd4a8a11ea88
# d5f1d446c6494d3d9b53a13043c4d7ea
#~ msgid "The ``dirs`` parameter was added."
#~ msgstr "Был добавлен аргумент ``dirs``."

# 90ca75fd3e0549bbbc61b543e9fba9d6
#~ msgid "The ability to use relative URLs was added."
#~ msgstr "Добавлена возможность использовать относительные URL-ы."

# 1ce068483fab4bad944b4381f9358fe6
# f12852c794294e92a449949f9061fc2e
#~ msgid "``dictionary``"
#~ msgstr "``dictionary``"

# 1ce068483fab4bad944b4381f9358fe6
# f12852c794294e92a449949f9061fc2e
#~ msgid "``dirs``"
#~ msgstr "``dirs``"

# 9c2052259ce54ac7889de1d16351f97c
# a753858e6f194162a491d30d9783751e
#~ msgid ""
#~ "A tuple or list of values to override the :setting:`TEMPLATE_DIRS` "
#~ "setting."
#~ msgstr ""
#~ "Кортеж или список значений, который переопределяет :setting:"
#~ "`TEMPLATE_DIRS`."

# 942abbe932c04d8faf69bbd29cc1eefc
# ec185776e8944104a4b7f27b1b88e21a
#~ msgid ""
#~ "If you want to override the :setting:`TEMPLATE_DIRS` setting, use the "
#~ "``dirs`` parameter::"
#~ msgstr ""
#~ "Если вы хотите переопределить настройку :setting:`TEMPLATE_DIRS`, "
#~ "используйте аргумент ``dirs``::"
