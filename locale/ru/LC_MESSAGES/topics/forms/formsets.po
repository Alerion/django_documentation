# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2013.
# Dmitriy Kostochko <alerion.um@gmail.com>, 2013, 2014, 2015, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-05 11:28+0300\n"
"PO-Revision-Date: 2016-03-17 12:40+0200\n"
"Last-Translator: Dmitriy Kostochko <alerion.um@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# f275f408672d421ba3e61705f94d681a
#: ../../topics/forms/formsets.txt:3
msgid "Formsets"
msgstr "Наборы форм"

# 9c30738e1d2146f3a4ef266777eb8c78
#: ../../topics/forms/formsets.txt:10
msgid ""
"A formset is a layer of abstraction to work with multiple forms on the same "
"page. It can be best compared to a data grid. Let's say you have the "
"following form::"
msgstr ""
"Набор форм — это абстрактный слой для работы с множеством форм на одной "
"странице. Его можно сравнить с таблицей данных. Скажем у вас есть следующая "
"форма::"

# 7c1ce04967914805ba51c583d53ddc02
#: ../../topics/forms/formsets.txt:19
msgid ""
"You might want to allow the user to create several articles at once. To "
"create a formset out of an ``ArticleForm`` you would do::"
msgstr ""
"Вы можете позволить пользователю создавать несколько статей за один раз. Для "
"того, чтобы создать набор форм из ``ArticleForm`` вам потребуется::"

# cea05714775d402a93e06ba1326e54bc
#: ../../topics/forms/formsets.txt:25
msgid ""
"You now have created a formset named ``ArticleFormSet``. The formset gives "
"you the ability to iterate over the forms in the formset and display them as "
"you would with a regular form::"
msgstr ""
"Теперь у вас есть класс набора форм ``ArticleFormSet``. Набор форм "
"предоставляет возможность последовательно проходить по списку форм и "
"отображать их как обычные формы::"

# f2bc0f9e19444fd5baa68c47f29ac6ed
#: ../../topics/forms/formsets.txt:35
msgid ""
"As you can see it only displayed one empty form. The number of empty forms "
"that is displayed is controlled by the ``extra`` parameter. By default, :"
"func:`~django.forms.formsets.formset_factory` defines one extra form; the "
"following example will display two blank forms::"
msgstr ""
"Как вы можете видеть, набор добавляет одну пустую форму к своему выводу. "
"Количество выводимых пустых форм управляется с помощью параметра ``extra``. "
"По умолчанию фабрика :func:`~django.forms.formsets.formset_factory` "
"добавляет одну пустую форму. Следующий пример отобразит две пустые формы::"

# 8355365e6765441da663948b64aac8f5
#: ../../topics/forms/formsets.txt:42
msgid ""
"Iterating over the ``formset`` will render the forms in the order they were "
"created. You can change this order by providing an alternate implementation "
"for the ``__iter__()`` method."
msgstr ""
"Итерация по набору форм отобразит формы в порядке их определения. Вы можете "
"изменить этот порядок, предоставив собственную версию метода ``__iter__()``."

# f037d8eb55c84d2bbae6101c44de3981
#: ../../topics/forms/formsets.txt:46
msgid ""
"Formsets can also be indexed into, which returns the corresponding form. If "
"you override ``__iter__``, you will need to also override ``__getitem__`` to "
"have matching behavior."
msgstr ""
"К формами внутри набора можно обращаться по индексу. При определении "
"собственного ``__iter__``, вами потребуется также реализовать "
"``__getitem__`` для сохранения этой возможности."

# 06b044ce1fde408ea6acd49e5e3d1bb4
#: ../../topics/forms/formsets.txt:53
msgid "Using initial data with a formset"
msgstr "Использование начальных данных с наборами форм"

# 3e081548bfab44e4ac715706ec74ecc1
#: ../../topics/forms/formsets.txt:55
msgid ""
"Initial data is what drives the main usability of a formset. As shown above "
"you can define the number of extra forms. What this means is that you are "
"telling the formset how many additional forms to show in addition to the "
"number of forms it generates from the initial data. Let's take a look at an "
"example::"
msgstr ""
"Возможность назначения начальных данных является одним из ключевых аспектов "
"удобства использования наборов форм. Как было показано выше, вы можете "
"управлять количеством пустых форм, отображаемых набором. Это означает, что "
"вы указываете набору сколько дополнительных пустых форм следует отобразить "
"вместе с формами, которые заполнены начальными данными. Давайте обратимся к "
"следующему примеру::"

# 5120aef4ae06432a93c5a917386068b1
#: ../../topics/forms/formsets.txt:79
msgid ""
"There are now a total of three forms showing above. One for the initial data "
"that was passed in and two extra forms. Also note that we are passing in a "
"list of dictionaries as the initial data."
msgstr ""
"Выше показаны три формы. Одна с начальными данными и две пустые. Следует "
"отметить, что в качестве начальных данных мы передали список словарей."

#: ../../topics/forms/formsets.txt:83
msgid ""
"If you use an ``initial`` for displaying a formset, you should pass the same "
"``initial`` when processing that formset's submission so that the formset "
"can detect which forms were changed by the user. For example, you might have "
"something like: ``ArticleFormSet(request.POST, initial=[...])``."
msgstr ""

# b93713b3c7a14364950d8f649b85b4bc
#: ../../topics/forms/formsets.txt:90
msgid ""
":ref:`Creating formsets from models with model formsets <model-formsets>`."
msgstr ":ref:`Создание наборов модельных форм <model-formsets>`."

# bbcdf464f827494bb8a18db1c501a033
#: ../../topics/forms/formsets.txt:95
msgid "Limiting the maximum number of forms"
msgstr "Ограничение максимального количества форм"

# 47342d657ad146f6903f1878c30dc486
#: ../../topics/forms/formsets.txt:97
msgid ""
"The ``max_num`` parameter to :func:`~django.forms.formsets.formset_factory` "
"gives you the ability to limit the number of forms the formset will display::"
msgstr ""
"Параметр ``max_num`` фабрики :func:`~django.forms.formsets.formset_factory` "
"предоставляет вам возможность ограничить максимальное количество пустых "
"форм, отображаемых набором::"

# 72dd2955e7e849f0930ad3d3bbc80c7e
#: ../../topics/forms/formsets.txt:109
msgid ""
"If the value of ``max_num`` is greater than the number of existing items in "
"the initial data, up to ``extra`` additional blank forms will be added to "
"the formset, so long as the total number of forms does not exceed "
"``max_num``. For example, if ``extra=2`` and ``max_num=2`` and the formset "
"is initialized with one ``initial`` item, a form for the initial item and "
"one blank form will be displayed."
msgstr ""
"Если значение параметра ``max_num`` больше количества существующих объектов, "
"то к набору будет добавлено до ``extra`` пустых форм. Так будет происходить "
"пока не будет достигнуто значение ``max_num``. Например, если ``extra=2`` и "
"``max_num=2``, а набор форм был создан с одним ``initial`` элементом, то в "
"данном наборе форм будет отображена одна переданная форма и одна пустая."

# 0930c72d97bb495997c798ae0047d724
#: ../../topics/forms/formsets.txt:116
msgid ""
"If the number of items in the initial data exceeds ``max_num``, all initial "
"data forms will be displayed regardless of the value of ``max_num`` and no "
"extra forms will be displayed. For example, if ``extra=3`` and ``max_num=1`` "
"and the formset is initialized with two initial items, two forms with the "
"initial data will be displayed."
msgstr ""
"Если количество инициализированных форм превышает ``max_num``, все они будут "
"показаны, не взирая на значение ``max_num`` и никаких дополнительных форм "
"показано не будет. Например, при``extra=3`` и ``max_num=1`` и набором форм, "
"проинициализированным двумя формами, именно эти две формы и будут отображены."

# a943201266bc4ebd926c7588fce857b3
#: ../../topics/forms/formsets.txt:122
msgid ""
"A ``max_num`` value of ``None`` (the default) puts a high limit on the "
"number of forms displayed (1000). In practice this is equivalent to no limit."
msgstr ""
"Присвоение свойству ``max_num`` значения ``None`` (по умолчанию) "
"устанавливает достаточное ограничение на количество отображаемых форм "
"(1000). На практике это эквивалентно отсутствию ограничения."

# 1b003c265d944120a1492eab230a03f7
#: ../../topics/forms/formsets.txt:125
msgid ""
"By default, ``max_num`` only affects how many forms are displayed and does "
"not affect validation.  If ``validate_max=True`` is passed to the :func:"
"`~django.forms.formsets.formset_factory`, then ``max_num`` will affect "
"validation.  See :ref:`validate_max`."
msgstr ""
"По умолчанию, ``max_num`` просто определяет количество форм без валидации.  "
"Если передать ``validate_max=True`` в :func:`~django.forms.formsets."
"formset_factory`, ``max_num`` будет учитываться при валидации.  Смотрите :"
"ref:`validate_max`."

# 414593e0dc1c48678ffa9a2c9a47dfb5
#: ../../topics/forms/formsets.txt:131
msgid "Formset validation"
msgstr "Проверка набора форм"

# 47c78d028a8c4d1499e8f7ed86b56687
#: ../../topics/forms/formsets.txt:133
msgid ""
"Validation with a formset is almost identical to a regular ``Form``. There "
"is an ``is_valid`` method on the formset to provide a convenient way to "
"validate all forms in the formset::"
msgstr ""
"Проверка набора форм практически совпадает с аналогичной задачей для обычных "
"форм. Набор форм обладает методом :meth:`is_valid`, который предоставляет "
"удобный способ выполнить проверку всех форм набора::"

# 59da3e0ae4cc4596b2432600d2037c7e
#: ../../topics/forms/formsets.txt:149
msgid ""
"We passed in no data to the formset which is resulting in a valid form. The "
"formset is smart enough to ignore extra forms that were not changed. If we "
"provide an invalid article::"
msgstr ""
"Мы не передали в набор форм никаких данных, но он успешно прошёл проверку. "
"Набор обладает достаточной логикой, чтобы игнорировать дополнительные "
"незаполненные формы. Но если мы предоставим неправильную статью::"

# 7c221afe62ba4a5fac321f8b7442717a
#: ../../topics/forms/formsets.txt:168
msgid ""
"As we can see, ``formset.errors`` is a list whose entries correspond to the "
"forms in the formset. Validation was performed for each of the two forms, "
"and the expected error message appears for the second item."
msgstr ""
"Как можно увидеть, ``formset.errors`` является списком значений, которые "
"связаны с формами набора. Проверка была выполнена для обеих форм и в "
"результате было отображено сообщение об ошибке во второй форме."

#: ../../topics/forms/formsets.txt:172
msgid ""
"Just like when using a normal ``Form``, each field in a formset's forms may "
"include HTML attributes such as ``maxlength`` for browser validation. "
"However, form fields of formsets won't include the ``required`` attribute as "
"that validation may be incorrect when adding and deleting forms."
msgstr ""

# c8d1224c0a374a76a1dd2ff60fda2fa9
#: ../../topics/forms/formsets.txt:179
msgid ""
"To check how many errors there are in the formset, we can use the "
"``total_error_count`` method::"
msgstr ""
"Чтобы определить общее количество ошибок, используйте метод "
"``total_error_count``::"

# 5a0c63257ae04ed6a14030c771250dcf
#: ../../topics/forms/formsets.txt:190
msgid ""
"We can also check if form data differs from the initial data (i.e. the form "
"was sent without any data)::"
msgstr ""
"У нас есть возможность проверить изменились ли данные относительно начальных "
"значений (т.е форма была отправлена пустой)::"

# 69b42e3e5bb84cfbb98678a8705a53d6
#: ../../topics/forms/formsets.txt:207
#, fuzzy
msgid "Understanding the ``ManagementForm``"
msgstr "Назначение ``ManagementForm``"

# 5bd1c4e6b717475095301eed9987030e
#: ../../topics/forms/formsets.txt:209
msgid ""
"You may have noticed the additional data (``form-TOTAL_FORMS``, ``form-"
"INITIAL_FORMS`` and ``form-MAX_NUM_FORMS``) that was required in the "
"formset's data above. This data is required for the ``ManagementForm``. This "
"form is used by the formset to manage the collection of forms contained in "
"the formset. If you don't provide this management data, an exception will be "
"raised::"
msgstr ""
"Вы могли обратить внимание на дополнительные поля (``form-TOTAL_FORMS``, "
"``form-INITIAL_FORMS`` и ``form-MAX_NUM_FORMS``), которые появлялись при "
"выводе набора форм. Эти данные необходимы для работы формы "
"``ManagementForm``. Эта форма используется набором для управления своей "
"коллекцией форм. Если эти данные не будут предоставлены набору, то будет "
"вызвано исключение::"

# 8422c8a074e1468481945f557b39502c
#: ../../topics/forms/formsets.txt:226
msgid ""
"It is used to keep track of how many form instances are being displayed. If "
"you are adding new forms via JavaScript, you should increment the count "
"fields in this form as well. On the other hand, if you are using JavaScript "
"to allow deletion of existing objects, then you need to ensure the ones "
"being removed are properly marked for deletion by including ``form-#-"
"DELETE`` in the ``POST`` data. It is expected that all forms are present in "
"the ``POST`` data regardless."
msgstr ""
"Она используется для отслеживания количества экземпляров отображаемых форм. "
"Если вы добавляете новую форму с помощью JavaScript, вам следует увеличить "
"счётчики в соответствующих полях этой формы. С другой стороны, если вы "
"позволяете удалять существующие объекты через JavaScript, то вы должны "
"обеспечить правильную маркировку этих объектов с помощью ``form-#-DELETE`` в "
"данных ``POST``. Ожидается, что все формы присутствуют в данных ``POST``, "
"даже если они \"удалены\"."

# 414ff6c9ad7141f79c35701d1971c1e7
#: ../../topics/forms/formsets.txt:233
msgid ""
"The management form is available as an attribute of the formset itself. When "
"rendering a formset in a template, you can include all the management data "
"by rendering ``{{ my_formset.management_form }}`` (substituting the name of "
"your formset as appropriate)."
msgstr ""
"Доступ к форме управления возможен через атрибут набора форм. При "
"отображении формы в шаблоне, вы можете включать в страницу все управляющие "
"данные с помощью ``{{ my_formset.management_form }}`` (подставьте имя своего "
"набора)."

# 7c0da8c420524996bc6e039fa5d7e87f
#: ../../topics/forms/formsets.txt:239
msgid "``total_form_count`` and ``initial_form_count``"
msgstr "Методы ``total_form_count`` и ``initial_form_count``"

# db4a5d72e9d4487c9e41919c8a0ca80d
#: ../../topics/forms/formsets.txt:241
msgid ""
"``BaseFormSet`` has a couple of methods that are closely related to the "
"``ManagementForm``, ``total_form_count`` and ``initial_form_count``."
msgstr ""
"Класс ``BaseFormSet`` имеет ряд методов, которые предназначены для работы с "
"``ManagementForm``: ``total_form_count`` и ``initial_form_count``."

# 9eb83ec7dfb64438ad09551b7ba06fe7
#: ../../topics/forms/formsets.txt:244
msgid ""
"``total_form_count`` returns the total number of forms in this formset. "
"``initial_form_count`` returns the number of forms in the formset that were "
"pre-filled, and is also used to determine how many forms are required. You "
"will probably never need to override either of these methods, so please be "
"sure you understand what they do before doing so."
msgstr ""
"Метод ``total_form_count`` возвращает количество форм в наборе. Метод "
"``initial_form_count`` возвращает количество предварительно заполненных форм "
"в наборе, а также используется для определения количества форм, обязательных "
"для заполнения. Скорее всего у вас никогда не возникнет необходимости "
"переопределения этих методов, просто запомните их назначение."

# 58cc846e8c6b49119cc1a7201ca81fc6
#: ../../topics/forms/formsets.txt:253
msgid "``empty_form``"
msgstr "``empty_form``"

# b74825b40f3944779beb280cb6227a59
#: ../../topics/forms/formsets.txt:255
msgid ""
"``BaseFormSet`` provides an additional attribute ``empty_form`` which "
"returns a form instance with a prefix of ``__prefix__`` for easier use in "
"dynamic forms with JavaScript."
msgstr ""
"Класс ``BaseFormSet`` имеет атрибут ``empty_form``, который возвращает "
"экземпляр формы с префиксом  ``__prefix__``, что может упростить "
"динамическое создание форм с помощью JavaScript."

# a9c007b9f3ed43908e12059d99ead9bc
#: ../../topics/forms/formsets.txt:260
msgid "Custom formset validation"
msgstr "Собственная проверка набора форм"

# 18e03721ec1644c6a0a315b10d75fbd7
#: ../../topics/forms/formsets.txt:262
msgid ""
"A formset has a ``clean`` method similar to the one on a ``Form`` class. "
"This is where you define your own validation that works at the formset "
"level::"
msgstr ""
"Набор форм имеет метод ``clean``, аналогичный методу класса ``Form``. "
"Переопределите этот метод для реализации собственных проверок данных на "
"уровне набора форм::"

# 16afa622e842412dbe5e5b1804784d3b
#: ../../topics/forms/formsets.txt:300
msgid ""
"The formset ``clean`` method is called after all the ``Form.clean`` methods "
"have been called. The errors will be found using the ``non_form_errors()`` "
"method on the formset."
msgstr ""
"Метод ``clean`` набора форм вызывается после вызова аналогичного метода всех "
"форм. Ошибки будут найдены с помощью  метода ``non_form_errors()`` набора "
"форм."

# bbcdf464f827494bb8a18db1c501a033
#: ../../topics/forms/formsets.txt:305
msgid "Validating the number of forms in a formset"
msgstr "Проверка количества форм"

# 7d43eceba0fd40439e88a98ecdb29b08
#: ../../topics/forms/formsets.txt:307
msgid ""
"Django provides a couple ways to validate the minimum or maximum number of "
"submitted forms. Applications which need more customizable validation of the "
"number of forms should use custom formset validation."
msgstr ""
"Django предоставляет несколько способов валидации минимального и максимально "
"количества отправленных форм. Если вам нужна более сложная валидация, "
"используйте собственную валидацию для набора форм."

# 79d1ba6aed2449aab5b4fc8ee8cae71d
#: ../../topics/forms/formsets.txt:314
msgid "``validate_max``"
msgstr "``validate_max``"

# 9eef208feaaf4320b8cd80a74d9c124f
#: ../../topics/forms/formsets.txt:316
msgid ""
"If ``validate_max=True`` is passed to :func:`~django.forms.formsets."
"formset_factory`, validation will also check that the number of forms in the "
"data set, minus those marked for deletion, is less than or equal to "
"``max_num``."
msgstr ""
"Если передать ``validate_max=True`` в :func:`~django.forms.formsets."
"formset_factory`, при валидации будет проверенно, что общее количество форм, "
"без учета помеченных для удаления, не больше чем ``max_num``."

# f2e24b9da125480b94d0d40919735e8e
#: ../../topics/forms/formsets.txt:342
msgid ""
"``validate_max=True`` validates against ``max_num`` strictly even if "
"``max_num`` was exceeded because the amount of initial data supplied was "
"excessive."
msgstr ""
"При ``validate_max=True`` будет ошибка даже если количество "
"инициализированных форм превышает ``max_num``"

# 5bb4d9f9cf9547a0af64a3f39996b725
#: ../../topics/forms/formsets.txt:348
msgid ""
"Regardless of ``validate_max``, if the number of forms in a data set exceeds "
"``max_num`` by more than 1000, then the form will fail to validate as if "
"``validate_max`` were set, and additionally only the first 1000 forms above "
"``max_num`` will be validated.  The remainder will be truncated entirely.  "
"This is to protect against memory exhaustion attacks using forged POST "
"requests."
msgstr ""
"Независимо от ``validate_max``, если количество форм превышает ``max_num`` "
"на более чем 1000, будет ошибка валидация как при включенном "
"``validate_max``, и только первые 1000 форм после ``max_num`` буду "
"провалидированы.  Остальные будут проигнорированы. Это сделано для защит от "
"атаки на память(memory exhaustion attack) через модифицированный POST запрос."

# 100671c598d44c31acf4030c17c9b266
#: ../../topics/forms/formsets.txt:356
msgid "``validate_min``"
msgstr "``validate_min``"

# 9eef208feaaf4320b8cd80a74d9c124f
#: ../../topics/forms/formsets.txt:358
msgid ""
"If ``validate_min=True`` is passed to :func:`~django.forms.formsets."
"formset_factory`, validation will also check that the number of forms in the "
"data set, minus those marked for deletion, is greater than or equal to "
"``min_num``."
msgstr ""
"Если передать ``validate_min=True`` в :func:`~django.forms.formsets."
"formset_factory`, при валидации будет проверенно, что общее количество форм, "
"без учета помеченных для удаления, больше или равно ``min_num``."

# 4061749cafbc4fbc963f34eb40f506b5
#: ../../topics/forms/formsets.txt:385
msgid "Dealing with ordering and deletion of forms"
msgstr "Сортировка и удаление форм"

# f4b31d0d0b5d4ac2b40e5fea160ddd26
#: ../../topics/forms/formsets.txt:387
msgid ""
"The :func:`~django.forms.formsets.formset_factory` provides two optional "
"parameters ``can_order`` and ``can_delete`` to help with ordering of forms "
"in formsets and deletion of forms from a formset."
msgstr ""
":func:`~django.forms.formsets.formset_factory` принимает два необязательных "
"аргумента: ``can_order`` и ``can_delete``, которые добавляют возможность "
"сортировки и удаления форм."

# 540696d3f20e4db1800337fb7ec898b5
#: ../../topics/forms/formsets.txt:392
msgid "``can_order``"
msgstr "``can_order``"

# d6d1c41bd4cf4fa4b8c48014cf2ebdde
# e3e73baffa0b4c9db31282df6baf753a
#: ../../topics/forms/formsets.txt:396 ../../topics/forms/formsets.txt:456
msgid "Default: ``False``"
msgstr "Значение по умолчанию: ``False``"

# 125776b2394a41c58130a3e1257d7c6f
#: ../../topics/forms/formsets.txt:398
msgid "Lets you create a formset with the ability to order::"
msgstr "Позволяет создавать наборы форм с возможностью сортировки::"

# 77e3022b9e494cb9ba3b6ae942298d1f
#: ../../topics/forms/formsets.txt:419
msgid ""
"This adds an additional field to each form. This new field is named "
"``ORDER`` and is an ``forms.IntegerField``. For the forms that came from the "
"initial data it automatically assigned them a numeric value. Let's look at "
"what will happen when the user changes these values::"
msgstr ""
"Здесь добавляется дополнительное поле к каждой форме. Поле называется "
"``ORDER`` и представлено в виде ``forms.IntegerField``. Для форм, которые "
"были созданы с помощью начальных данных, это поле будет автоматически "
"заполнено их порядковым номером. Давайте рассмотрим, что произойдёт, если "
"пользователь изменит эти значения::"

# 51a8884e91134947b626cbe9c65f80a4
#: ../../topics/forms/formsets.txt:452
msgid "``can_delete``"
msgstr "``can_delete``"

# 3402197be3d54503a04a426765c5475c
#: ../../topics/forms/formsets.txt:458
msgid ""
"Lets you create a formset with the ability to select forms for deletion::"
msgstr "Позволяет создавать наборы форм с возможностью удаления их элементов::"

# ccea9a57c7f64ba699c89bc0c075bbdb
#: ../../topics/forms/formsets.txt:479
msgid ""
"Similar to ``can_order`` this adds a new field to each form named ``DELETE`` "
"and is a ``forms.BooleanField``. When data comes through marking any of the "
"delete fields you can access them with ``deleted_forms``::"
msgstr ""
"Подобно ``can_order``, использование этого аргумента добавляет новое поле "
"``DELETE`` в виде ``forms.BooleanField``. При обработке данных набора форм, "
"вы можете получить доступ ко всем помеченным полям через свойство "
"``deleted_forms``::"

# f30648119aa34c628f3c226692b1f4ed
#: ../../topics/forms/formsets.txt:505
msgid ""
"If you are using a :class:`ModelFormSet<django.forms.models."
"BaseModelFormSet>`, model instances for deleted forms will be deleted when "
"you call ``formset.save()``."
msgstr ""
"Если вы используете :class:`ModelFormSet<django.forms.models."
"BaseModelFormSet>`, объекты удаленных форм будут удалены при выполнении "
"``formset.save()``."

# cb607b371ead47d0afcc0000ef2db4c4
#: ../../topics/forms/formsets.txt:509
msgid ""
"If you call ``formset.save(commit=False)``, objects will not be deleted "
"automatically.  You'll need to call ``delete()`` on each of the :attr:"
"`formset.deleted_objects <django.forms.models.BaseModelFormSet."
"deleted_objects>` to actually delete them::"
msgstr ""
"Если выполнить ``formset.save(commit=False)``, объекты не будут удалены "
"автоматически. Вам необходимо вызвать ``delete()`` для каждого объекта из :"
"attr:`formset.deleted_objects <django.forms.models.BaseModelFormSet."
"deleted_objects>`::"

# 8ed38c5866c94026a47a8c67df4be502
#: ../../topics/forms/formsets.txt:519
msgid ""
"On the other hand, if you are using a plain ``FormSet``, it's up to you to "
"handle ``formset.deleted_forms``, perhaps in your formset's ``save()`` "
"method, as there's no general notion of what it means to delete a form."
msgstr ""
"Если же вы используете просто ``FormSet``, можете делать что хотите с "
"``formset.deleted_forms``, возможно в переопределенном методе ``save()``. "
"Django просто не знает что должно произойти при удалении таких форм."

# 9b08a759b89a415b8ffd3c232141fcf2
#: ../../topics/forms/formsets.txt:524
msgid "Adding additional fields to a formset"
msgstr "Добавление дополнительных полей к набору форм"

# c166d82c9d7e4e6e972dcfe0b1ac4b35
#: ../../topics/forms/formsets.txt:526
msgid ""
"If you need to add additional fields to the formset this can be easily "
"accomplished. The formset base class provides an ``add_fields`` method. You "
"can simply override this method to add your own fields or even redefine the "
"default fields/attributes of the order and deletion fields::"
msgstr ""
"При необходимости добавить дополнительные поля к набору форм, следует "
"воспользоваться методом ``add_fields``, который определён в базовом классе "
"набора форм. Вы можете просто переопределить этот метод для того, чтобы "
"добавлять свои собственные поля или даже изменять стандартные поля и/или "
"атрибуты сортировки и удаления полей::"

#: ../../topics/forms/formsets.txt:550
msgid "Passing custom parameters to formset forms"
msgstr "Как передать свои параметры в формы набора форм"

#: ../../topics/forms/formsets.txt:552
msgid ""
"Sometimes your form class takes custom parameters, like ``MyArticleForm``. "
"You can pass this parameter when instantiating the formset::"
msgstr ""
"Ваша форма может принимать дополнительные параметры, например "
"``MyArticleForm``. Вы можете передать из при создании набора форм::"

#: ../../topics/forms/formsets.txt:567
msgid ""
"The ``form_kwargs`` may also depend on the specific form instance. The "
"formset base class provides a ``get_form_kwargs`` method. The method takes a "
"single argument - the index of the form in the formset. The index is "
"``None`` for the :ref:`empty_form`::"
msgstr ""
"``form_kwargs`` может зависеть от конкретного экземпляра формы. Набор форм "
"предоставляет метод ``get_form_kwargs``. Этот метод принимает единственный "
"аргумент - норме формы в наборе форм. Номер равен ``None`` для :ref:"
"`empty_form`::"

# 8f2b56f44441498280404816a2b378d9
#: ../../topics/forms/formsets.txt:582
msgid "Using a formset in views and templates"
msgstr "Использование наборов форм в представлениях и шаблонах"

# 854a575dd9984cf08ff9a0799680e67e
#: ../../topics/forms/formsets.txt:584
msgid ""
"Using a formset inside a view is as easy as using a regular ``Form`` class. "
"The only thing you will want to be aware of is making sure to use the "
"management form inside the template. Let's look at a sample view::"
msgstr ""
"Простота использования наборов форм в представлении аналогична использованию "
"обычной формы. Следует помнить только о том, что необходимо использовать "
"управляемую форму внутри шаблона. Рассмотрим пример представления::"

# 3f2e5b5d4d404092aa9e5d65f5cd6c73
#: ../../topics/forms/formsets.txt:603
msgid "The ``manage_articles.html`` template might look like this:"
msgstr "Шаблон ``manage_articles.html`` может выглядеть так:"

# 5dfe5fd391054671a81510a913c5dbd3
#: ../../topics/forms/formsets.txt:616
msgid ""
"However there's a slight shortcut for the above by letting the formset "
"itself deal with the management form:"
msgstr ""
"Тем не менее, вышеприведённый код можно сократить и позволить набору "
"самостоятельно обеспечивать вывод управляющей формы:"

# eb3c4151d01c4f0685f1d9062f56fd07
#: ../../topics/forms/formsets.txt:627
msgid "The above ends up calling the ``as_table`` method on the formset class."
msgstr "Пример завершается вызовом метода ``as_table`` набора форм."

# 3b9a340e539b465daa285858e3757f46
#: ../../topics/forms/formsets.txt:632
msgid "Manually rendered ``can_delete`` and ``can_order``"
msgstr "Вручную созданные поля ``can_delete`` и ``can_order``"

# f8cba60dc84841c8851938dad78d4dc9
#: ../../topics/forms/formsets.txt:634
msgid ""
"If you manually render fields in the template, you can render ``can_delete`` "
"parameter with ``{{ form.DELETE }}``:"
msgstr ""
"Если вы вручную создаёте эти поля в шаблоне, то вы можете отобразить "
"параметр ``can_delete`` с помощью ``{{ form.DELETE }}``:"

# d125845a5c88451786e4d1cd52fb5bb6
#: ../../topics/forms/formsets.txt:653
msgid ""
"Similarly, if the formset has the ability to order (``can_order=True``), it "
"is possible to render it with ``{{ form.ORDER }}``."
msgstr ""
"Аналогично, если набор форм может выполнять сортировку (``can_order=True``), "
"то соответствующее поле можно вывести с помощью ``{{ form.ORDER }}``."

# a702381194c848868420e547851c6bb1
#: ../../topics/forms/formsets.txt:657
msgid "Using more than one formset in a view"
msgstr "Использование нескольких наборов форм в представлении"

# 8605a1b185684e3cafff7124bd86b51f
#: ../../topics/forms/formsets.txt:659
msgid ""
"You are able to use more than one formset in a view if you like. Formsets "
"borrow much of its behavior from forms. With that said you are able to use "
"``prefix`` to prefix formset form field names with a given value to allow "
"more than one formset to be sent to a view without name clashing. Lets take "
"a look at how this might be accomplished::"
msgstr ""
"Можно использовать несколько наборов форм в представлении. Наборы форм очень "
"похожи своим поведением на обычные формы. То есть, можно использовать "
"``prefix`` для их различения при использовании нескольких наборов форм. "
"Давайте рассмотрим пример такой реализации::"

# 5aba4daba4454e81b1cb6df9f3133e3a
#: ../../topics/forms/formsets.txt:686
msgid ""
"You would then render the formsets as normal. It is important to point out "
"that you need to pass ``prefix`` on both the POST and non-POST cases so that "
"it is rendered and processed correctly."
msgstr ""
"После этого вы можете отображать наборы форм как обычно. Важно помнить, что "
"надо передать префикс набора форм в каждый экземпляр набора, это гарантирует "
"их правильную работу."

#~ msgid "The ``form_kwargs`` argument was added."
#~ msgstr "Был добавлен аргумент ``form_kwargs``."

# 3de1f6d596744ba782bb58ff027c6710
#~ msgid ""
#~ "The ``min_num`` and ``validate_min`` parameters were added to :func:"
#~ "`~django.forms.formsets.formset_factory`."
#~ msgstr ""
#~ "Параметры ``min_num`` и ``validate_min`` были добавлены для :func:"
#~ "`~django.forms.formsets.formset_factory`."

# 64108561f7214e5bb22ee3ef5a354c59
#~ msgid ""
#~ "If you want to maintain backwards compatibility with Django 1.6 and "
#~ "earlier, you can do something like this::"
#~ msgstr ""
#~ "Если вам нужно совместимость с Django 1.6 и ниже, можете использовать "
#~ "следующий подход::"

# 9eef208feaaf4320b8cd80a74d9c124f
#~ msgid ""
#~ "The ``validate_max`` parameter was added to :func:`~django.forms.formsets."
#~ "formset_factory`.  Also, the behavior of ``FormSet`` was brought in line "
#~ "with that of ``ModelFormSet`` so that it displays initial data regardless "
#~ "of ``max_num``."
#~ msgstr ""
#~ "Был добавлен параметр ``validate_max`` для :func:`~django.forms.formsets."
#~ "formset_factory`. ``FormSet`` теперь отображает начальные данные так же, "
#~ "как и ``ModelFormSet`` -- показываются все данные, не зависимо от "
#~ "``max_num``."

# fb6942db65fb45aeb2bb9b733be9b55c
#~ msgid ""
#~ "The ``validate_max`` parameter was added to :func:`~django.forms.formsets."
#~ "formset_factory`."
#~ msgstr ""
#~ "Параметр ``validate_max`` был добавлен для :func:`~django.forms.formsets."
#~ "formset_factory`."

# f80d06f6d1ba4f0ab6fe616b169e7dca
#~ msgid ""
#~ "Common use cases with a formset is dealing with ordering and deletion of "
#~ "the form instances. This has been dealt with for you. The "
#~ "``formset_factory`` provides two optional parameters ``can_order`` and "
#~ "``can_delete`` that will do the extra work of adding the extra fields and "
#~ "providing simpler ways of getting to that data."
#~ msgstr ""
#~ "Стандартными действиями над наборами форм являются сортировка и удаление "
#~ "экземпляров форм. Раньше вы это делали сами. Функция фабрики "
#~ "``formset_factory`` принимает два необязательных аргумента ``can_order`` "
#~ "и ``can_delete``, которые добавляют дополнительные поля, предоставляя "
#~ "простые способы доступа к данным."
