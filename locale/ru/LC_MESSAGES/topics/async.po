# Russian translations for Django package
# Английские переводы для пакета Django.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2020-02-13 22:13+0300\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#: ../../topics/async.txt:3
msgid "Asynchronous support"
msgstr ""

#: ../../topics/async.txt:7
msgid ""
"Django has developing support for asynchronous (\"async\") Python, but does "
"not yet support asynchronous views or middleware; they will be coming in a "
"future release."
msgstr ""

#: ../../topics/async.txt:11
msgid ""
"There is limited support for other parts of the async ecosystem; namely, "
"Django can natively talk :doc:`ASGI </howto/deployment/asgi/index>`, and "
"some async safety support."
msgstr ""

#: ../../topics/async.txt:18
msgid "Async-safety"
msgstr ""

#: ../../topics/async.txt:20
msgid ""
"Certain key parts of Django are not able to operate safely in an "
"asynchronous environment, as they have global state that is not coroutine-"
"aware. These parts of Django are classified as \"async-unsafe\", and are "
"protected from execution in an asynchronous environment. The ORM is the main "
"example, but there are other parts that are also protected in this way."
msgstr ""

#: ../../topics/async.txt:26
msgid ""
"If you try to run any of these parts from a thread where there is a *running "
"event loop*, you will get a :exc:`~django.core.exceptions."
"SynchronousOnlyOperation` error. Note that you don't have to be inside an "
"async function directly to have this error occur. If you have called a "
"synchronous function directly from an asynchronous function without going "
"through something like ``sync_to_async`` or a threadpool, then it can also "
"occur, as your code is still running in an asynchronous context."
msgstr ""

#: ../../topics/async.txt:34
msgid ""
"If you encounter this error, you should fix your code to not call the "
"offending code from an async context; instead, write your code that talks to "
"async-unsafe in its own, synchronous function, and call that using ``asgiref."
"sync.async_to_sync``, or any other preferred way of running synchronous code "
"in its own thread."
msgstr ""

#: ../../topics/async.txt:40
msgid ""
"If you are *absolutely* in dire need to run this code from an asynchronous "
"context - for example, it is being forced on you by an external environment, "
"and you are sure there is no chance of it being run concurrently (e.g. you "
"are in a Jupyter_ notebook), then you can disable the warning with the "
"``DJANGO_ALLOW_ASYNC_UNSAFE`` environment variable."
msgstr ""

#: ../../topics/async.txt:48
msgid ""
"If you enable this option and there is concurrent access to the async-unsafe "
"parts of Django, you may suffer data loss or corruption. Be very careful and "
"do not use this in production environments."
msgstr ""

#: ../../topics/async.txt:52
msgid ""
"If you need to do this from within Python, do that with ``os.environ``::"
msgstr ""
