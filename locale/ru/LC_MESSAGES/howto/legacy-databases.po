# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated <>, 2012, 2013, 2014.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-13 22:13+0300\n"
"PO-Revision-Date: 2014-07-15 12:01+0300\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.6\n"

# a2840ae1c3d44510bb7637f54d23afd8
#: ../../howto/legacy-databases.txt:3
msgid "Integrating Django with a legacy database"
msgstr "Интеграция Django с унаследованной базой данных"

# 61fc039a2be5421894e75e32aa8dda0d
#: ../../howto/legacy-databases.txt:5
msgid ""
"While Django is best suited for developing new applications, it's quite "
"possible to integrate it into legacy databases. Django includes a couple of "
"utilities to automate as much of this process as possible."
msgstr ""
"Несмотря на то, что Django нацелена на разработку новых приложений, довольно "
"несложно подключить к ней базу данных, унаследованную от другого проекта. "
"Django предоставляет ряд утилит для автоматизации данного процесса, "
"насколько это возможно."

# 46ea29d1ed6546bd8990ab141db8e853
#: ../../howto/legacy-databases.txt:9
msgid ""
"This document assumes you know the Django basics, as covered in the :doc:"
"`tutorial </intro/tutorial01>`."
msgstr ""
"Этот документ предполагает, что вы знакомы с основами Django, которые "
"описаны в :doc:`учебнике </intro/tutorial01>`."

# 1eee89d700244ea1bb61546638af696d
#: ../../howto/legacy-databases.txt:12
msgid ""
"Once you've got Django set up, you'll follow this general process to "
"integrate with an existing database."
msgstr ""
"После настройки Django следуйте стандартному процессу для интеграции с "
"существующей базой данных."

# 66957e46223f4e4097f99491a8978ebd
#: ../../howto/legacy-databases.txt:16
msgid "Give Django your database parameters"
msgstr "Предоставьте Django параметры вашей базы данных"

# 9606ce7a575c4219999b3dc575cf9593
#: ../../howto/legacy-databases.txt:18
msgid ""
"You'll need to tell Django what your database connection parameters are, and "
"what the name of the database is. Do that by editing the :setting:"
"`DATABASES` setting and assigning values to the following keys for the "
"``'default'`` connection:"
msgstr ""
"Вам потребуется указать параметры соединения с вашей базой данных и её имя. "
"Делается это редактированием параметра :setting:`DATABASES`, указав значения "
"для следующих ключей соединения ``'default'``:"

# eb4a8e8e8a97491395d8377c951664f0
#: ../../howto/legacy-databases.txt:23
msgid ":setting:`NAME`"
msgstr ":setting:`NAME`"

# ee0bf40f09654349bef2468c17983fb5
#: ../../howto/legacy-databases.txt:24
msgid ":setting:`ENGINE <DATABASE-ENGINE>`"
msgstr ":setting:`ENGINE <DATABASE-ENGINE>`"

# 6c3371db522c474da39d89b397af2b78
#: ../../howto/legacy-databases.txt:25
msgid ":setting:`USER`"
msgstr ":setting:`USER`"

# 5e0b59fa41fd4976808603c09924dd4b
#: ../../howto/legacy-databases.txt:26
msgid ":setting:`PASSWORD`"
msgstr ":setting:`PASSWORD`"

# 9b421c0dac2e4cda957ce87dba6d8da9
#: ../../howto/legacy-databases.txt:27
msgid ":setting:`HOST`"
msgstr ":setting:`HOST`"

# dc9a283137f042e381ebee30fdeb24c2
#: ../../howto/legacy-databases.txt:28
msgid ":setting:`PORT`"
msgstr ":setting:`PORT`"

# a9e81a8112cc420f85ad391969ef1f18
#: ../../howto/legacy-databases.txt:31
msgid "Auto-generate the models"
msgstr "Автоматическая генерация моделей"

# 389f452446694cfbb41b640903ff45dd
#: ../../howto/legacy-databases.txt:35
msgid ""
"Django comes with a utility called :djadmin:`inspectdb` that can create "
"models by introspecting an existing database. You can view the output by "
"running this command::"
msgstr ""
"Django представляет утилиту :djadmin:`inspectdb`, которая может создавать "
"модели по существующей базе данных. Вы можете посмотреть результат, запустив "
"следующую команду::"

# 3cd27e5a513445f294bd60474020d74c
#: ../../howto/legacy-databases.txt:41
msgid "Save this as a file by using standard Unix output redirection::"
msgstr ""
"Сохраните его в файл, используя стандартный механизм перенаправления Unix::"

# bd795b57c75d49cab39453ee0a2e2d1f
#: ../../howto/legacy-databases.txt:45
msgid ""
"This feature is meant as a shortcut, not as definitive model generation. See "
"the :djadmin:`documentation of inspectdb <inspectdb>` for more information."
msgstr ""
"Такой подход является вспомогательными. Обратитесь к  :djadmin:`документации "
"на inspectdb <inspectdb>` для подробностей."

# 5f5251208aa344d7b367138737555c11
#: ../../howto/legacy-databases.txt:48
msgid ""
"Once you've cleaned up your models, name the file ``models.py`` and put it "
"in the Python package that holds your app. Then add the app to your :setting:"
"`INSTALLED_APPS` setting."
msgstr ""
"После приведения моделей в нормальный вид, сохраните их в \n"
"файле ``models.py``, разместив его в пакете, который хранит ваше приложение. "
"Затем добавьте ваше приложение в \n"
":setting:`INSTALLED_APPS`."

# 356931fff0d94b62bd25fa14cb288dc0
#: ../../howto/legacy-databases.txt:52
msgid ""
"By default, :djadmin:`inspectdb` creates unmanaged models. That is, "
"``managed = False`` in the model's ``Meta`` class tells Django not to manage "
"each table's creation, modification, and deletion::"
msgstr ""
"По умолчанию :djadmin:`inspectdb` создает модели с ``managed = False`` в "
"классе ``Meta``. Это указывает Django не управлять созданием, изменением и "
"удалением таблицей модели::"

# 2bcde8b599c541469c25de4d1ff87717
#: ../../howto/legacy-databases.txt:63
#, fuzzy
msgid ""
"If you do want to allow Django to manage the table's lifecycle, you'll need "
"to change the :attr:`~django.db.models.Options.managed` option above to "
"``True`` (or remove it because ``True`` is its default value)."
msgstr ""
"Чтобы позволить Django управлять таблицей модели, установите :attr:`~django."
"db.models.Options.managed` в ``True`` (или просто удалить её, так как она по "
"умолчанию равна ``True``)."

# 2f1a9d1d3bab4353825730c8779ae476
#: ../../howto/legacy-databases.txt:68
msgid "Install the core Django tables"
msgstr "Установка основных таблиц Django"

# fdf25e8b0a6f4d9a9132b2929b519f83
#: ../../howto/legacy-databases.txt:70
msgid ""
"Next, run the :djadmin:`migrate` command to install any extra needed "
"database records such as admin permissions and content types::"
msgstr ""
"Теперь, запустите команду :djadmin:`migrate` для добавления в базу данных "
"необходимых записей, таких как права пользователей и типы контента::"

# e05bb569c53f45f0922bdda509c3c29d
#: ../../howto/legacy-databases.txt:76
msgid "Test and tweak"
msgstr "Тестирование и настройка"

# 26108bdc1c7048918e4eaf73f7f0e16c
#: ../../howto/legacy-databases.txt:78
msgid ""
"Those are the basic steps -- from here you'll want to tweak the models "
"Django generated until they work the way you'd like. Try accessing your data "
"via the Django database API, and try editing objects via Django's admin "
"site, and edit the models file accordingly."
msgstr ""
"Это были основные шаги. Теперь вам может потребоваться изменить созданные "
"модели, чтобы они работали так, как вам необходимо. Попробуйте обратиться к "
"данным через API баз данных Django, отредактировать их с помощью интерфейса "
"администратора или изменить сам файл с моделями."

# 8a2617fce3bc409480b3982dce6fb141
#~ msgid ""
#~ "The behavior by which introspected models are created as unmanaged ones "
#~ "is new in Django 1.6."
#~ msgstr ""
#~ "В Django 1.6 появится возможность создавать неуправляемые модели по "
#~ "анализируемым таблицам."

# 0b8c404401ed42d4a65f85b79bfe82a0
#~ msgid ""
#~ "If your plan is that your Django application(s) modify data (i.e. edit, "
#~ "remove records and create new ones) in the existing database tables "
#~ "corresponding to any of the introspected models then one of the manual "
#~ "review and edit steps you need to perform on the resulting ``models.py`` "
#~ "file is to change the Python declaration of each one of these models to "
#~ "specify it is a :attr:`managed <django.db.models.Options.managed>` one. "
#~ "For example, consider this generated model definition:"
#~ msgstr ""
#~ "Если вы планируете изменение данных вашим приложением (т.е. "
#~ "редактирование, удаление и создание записей) в существующих таблицах базы "
#~ "данных, та вам следует вручную проверить и отредактировать описания "
#~ "моделей в файле ``models.py``, указав :attr:`managed <django.db.models."
#~ "Options.managed>`. Например, рассмотрим сгенерированные модели:"

# 84d7d4b352d5452ba31b3a7e63c89f7f
#~ msgid ""
#~ "This serves as an explicit opt-in to give your nascent Django project "
#~ "write access to your precious data on a model by model basis."
#~ msgstr ""
#~ "Это является индикатором того, что Django имеет доступ на запись к вашим "
#~ "данным на базе моделей."
