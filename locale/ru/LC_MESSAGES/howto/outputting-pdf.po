# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-27 00:21\n"
"PO-Revision-Date: 2013-07-08 15:13\n"
"Last-Translator: Tyshchenko Viktor <tyvik8@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# f4a46ea377814d02bb309f6a3cc8bd0e
#: ../../howto/outputting-pdf.txt:3
msgid "Outputting PDFs with Django"
msgstr "Генерация PDF на Django"

# e65b8e69d67743529b4cb2c0ec3ac2bc
#: ../../howto/outputting-pdf.txt:5
msgid ""
"This document explains how to output PDF files dynamically using Django "
"views. This is made possible by the excellent, open-source ReportLab_ Python "
"PDF library."
msgstr ""
"Здесь рассказывается как генерировать PDF с помощью представлений "
"Django. Это возможно благодаря чудесной открытой библиотеке ReportLab."

# 1f59639a4e754ac6b946b63033d4ece5
#: ../../howto/outputting-pdf.txt:9
msgid ""
"The advantage of generating PDF files dynamically is that you can create "
"customized PDFs for different purposes -- say, for different users or "
"different pieces of content."
msgstr ""
"Преимущество динамической генерации PDF заключается в том, например, что "
"вы можете создавать разный документ для разных пользователей."

# e456074cf7ce46308e0b047cfd5756db
#: ../../howto/outputting-pdf.txt:13
msgid ""
"For example, Django was used at kusports.com_ to generate customized, "
"printer-friendly NCAA tournament brackets, as PDF files, for people "
"participating in a March Madness contest."
msgstr ""
"Например, Django использовали на kusports.com для генерации турнирной "
"таблицы NCAA, которую можно распечатать как обычный PDF-файл."

# 63c78f8202214bc49ce8b608317cbb4a
#: ../../howto/outputting-pdf.txt:21
msgid "Install ReportLab"
msgstr "Установка ReportLab"

# 02fc693f88d44d9fb51befe20c23e783
#: ../../howto/outputting-pdf.txt:23
msgid ""
"Download and install the ReportLab library from http://www.reportlab.com/"
"software/opensource/rl-toolkit/download/. The `user guide`_ (not "
"coincidentally, a PDF file) explains how to install it. Alternatively, you "
"can also install it with ``pip``:"
msgstr ""
"Скачайте и установите библиотеку ReportLab с http://www.reportlab.com/"
"software/opensource/rl-toolkit/download/. Руководство пользователя - "
"`user guide` (заметьте - PDF!) поясняет шаги установки. Но проще "
"воспользоваться ``pip``:"

# c757b5afc17d4793b0ad2c8e8db15eb0
#: ../../howto/outputting-pdf.txt:32
msgid ""
"Test your installation by importing it in the Python interactive "
"interpreter::"
msgstr "Проверьте правильность установки с помощью импорта в "
"интерактивном интерпретаторе::"

# a526d18844c2463ab84d5bd37d2e6ce3
#: ../../howto/outputting-pdf.txt:36
msgid "If that command doesn't raise any errors, the installation worked."
msgstr "Если не вылезло никакой ошибки, значит установка прошла успешно."

# ca9200f0904048adbb2a457270b3230e
#: ../../howto/outputting-pdf.txt:41
msgid "Write your view"
msgstr "Пишем собственное представление."

# 601547f585914481bcc1079f5fce26ba
#: ../../howto/outputting-pdf.txt:43
msgid ""
"The key to generating PDFs dynamically with Django is that the ReportLab API "
"acts on file-like objects, and Django's :class:`~django.http.HttpResponse` "
"objects are file-like objects."
msgstr ""
"Ключевым фактором в динамической генерации PDF с помощью Django "
"является то, что ReportLab API работает с файловыми объектами, также, "
"как и :class:`~django.http.HttpResponse`."

# 40f4c3b6b57c4292aab5676996388df3
#: ../../howto/outputting-pdf.txt:47
msgid "Here's a \"Hello World\" example::"
msgstr "Пример \"Hello World\"::"

# acace618e5ab41ea89bb71d44e361f68
#: ../../howto/outputting-pdf.txt:69
msgid ""
"The code and comments should be self-explanatory, but a few things deserve a "
"mention:"
msgstr ""
"Код и комментарии должны быть очевидными, но несколько моментов "
"заслуживают внимания:"

# 4da1baf172c74341835cb51b14845bad
#: ../../howto/outputting-pdf.txt:72
msgid ""
"The response gets a special MIME type, :mimetype:`application/pdf`. This "
"tells browsers that the document is a PDF file, rather than an HTML file. If "
"you leave this off, browsers will probably interpret the output as HTML, "
"which would result in ugly, scary gobbledygook in the browser window."
msgstr ""
"Ответу устанавливается специальный тип :mimetype:`application/pdf`. "
"Этим мы говорим браузеру, что результат запроса - документ PDF, а не "
"HTML файл. Если этого не сделать, то браузер может попытаться "
"интерпретировать его как HTML, что приведёт к ужасным, страшным "
"абракадабрам в окне браузера."

# 64d167a4b8e44aefb962c8f0c8c75bc7
#: ../../howto/outputting-pdf.txt:78
msgid ""
"The response gets an additional ``Content-Disposition`` header, which "
"contains the name of the PDF file. This filename is arbitrary: Call it "
"whatever you want. It'll be used by browsers in the \"Save as...\" dialogue, "
"etc."
msgstr ""
"Ответ получает дополнительный заголовок ``Content-Disposition``, "
"в котором указывается имя PDF-файла. Имя файла здесь произвольное - "
"называйте его как хотите. Оно будет использовано браузером в диалоге "
"\"Сохранить как...\"."

# bdded7c2211541b3af6f69da79d5466c
#: ../../howto/outputting-pdf.txt:83
msgid ""
"The ``Content-Disposition`` header starts with ``'attachment; '`` in this "
"example. This forces Web browsers to pop-up a dialog box prompting/"
"confirming how to handle the document even if a default is set on the "
"machine. If you leave off ``'attachment;'``, browsers will handle the PDF "
"using whatever program/plugin they've been configured to use for PDFs. "
"Here's what that code would look like::"
msgstr ""
"Заголовок ``Content-Disposition`` в этом примере не зря начинается с "
"``'attachment; '`` . Это заставляет браузер показать всплывающее окно "
"с выбором как же обрабатывать документ, даже если задано поведение "
"по умолчанию. Если вы не укажите ``'attachment;'``, браузер будет "
"обрабатывать его плагинами, которые работают с PDF. Для этого "
"нужно указать как-то так::"

# cb004cbac877437e8686dbf1b63eedc6
#: ../../howto/outputting-pdf.txt:92
msgid ""
"Hooking into the ReportLab API is easy: Just pass ``response`` as the first "
"argument to ``canvas.Canvas``. The ``Canvas`` class expects a file-like "
"object, and :class:`~django.http.HttpResponse` objects fit the bill."
msgstr ""
"Подключить ReportLab довольно просто: просто передайте ``response`` "
"в качестве первого аргумента в ``canvas.Canvas``. Класс ``Canvas`` "
"ожидает любой файловый объект, а :class:`~django.http.HttpResponse` "
"как раз прекрасно подходит на данную роль."

# 623e3b1461ea44b4bc21c427de6858ea
#: ../../howto/outputting-pdf.txt:97
msgid ""
"Note that all subsequent PDF-generation methods are called on the PDF object "
"(in this case, ``p``) -- not on ``response``."
msgstr ""
"Следует отметить, что все последующие действия нужно производить "
"с получившимся объектом (в данном случае с ``p``), а не с ``response``."

# bc7a6236af714191b14a5c1b7ba6b7b1
#: ../../howto/outputting-pdf.txt:100
msgid ""
"Finally, it's important to call ``showPage()`` and ``save()`` on the PDF "
"file."
msgstr ""
"Наконец, важно вызвать ``showPage()`` и ``save()``."

# cd5ec28a69d246978c0d56ca2471dda2
#: ../../howto/outputting-pdf.txt:105
msgid ""
"ReportLab is not thread-safe. Some of our users have reported odd issues "
"with building PDF-generating Django views that are accessed by many people "
"at the same time."
msgstr ""
"ReportLab не потокобезопасна. Пользователи могут мешать друг другу в "
"процессе построения PDF."

# 1f0f38e5fbb34b2da3867b7f91346731
#: ../../howto/outputting-pdf.txt:110
msgid "Complex PDFs"
msgstr "Генерация сложных PDF"

# 60da39820fe0463f90ccf0b8961c9450
#: ../../howto/outputting-pdf.txt:112
msgid ""
"If you're creating a complex PDF document with ReportLab, consider using "
"the :mod:`io` library as a temporary holding place for your PDF file. This "
"library provides a file-like object interface that is particularly "
"efficient. Here's the above \"Hello World\" example rewritten to use :mod:"
"`io`::"
msgstr ""
"Если вы создаёте сложные PDF документы с помощью ReportLab, "
"рассмотрите библиотеку :mod:`io` как временное хранилище для результата. "
"Эта библиотека предоставляет файловый объект, который наиболее "
"эффективен. Пример \"Hello World\", переписаный на :mod:`io`::"

# 66f462b68eda44ceac897aacae6b5417
#: ../../howto/outputting-pdf.txt:146
msgid "Further resources"
msgstr "Дополнительные ресурсы"

# 69ba09ccce614492a630de2f1b80a5e9
#: ../../howto/outputting-pdf.txt:148
msgid ""
"PDFlib_ is another PDF-generation library that has Python bindings. To use "
"it with Django, just use the same concepts explained in this article."
msgstr ""
"PDFlib_ - ещё одна библиотека для генерации PDF с привязками для Python. "
"Чтобы её использовать вместе с Django, используйте те же понятия, которые "
"описаны в этой статье."

# 8a3e723375964de6a15cd0ce90d74c54
#: ../../howto/outputting-pdf.txt:150
msgid ""
"`Pisa XHTML2PDF`_ is yet another PDF-generation library. Pisa ships with an "
"example of how to integrate Pisa with Django."
msgstr ""
"`Pisa XHTML2PDF`_ - ещё одна библиотека для генерации PDF. Пример как "
"испльзовать её вместе с Django можно найти в её документации."

# f29096cff63141ffa61be1a6b2e177a0
#: ../../howto/outputting-pdf.txt:152
msgid ""
"HTMLdoc_ is a command-line script that can convert HTML to PDF. It doesn't "
"have a Python interface, but you can escape out to the shell using "
"``system`` or ``popen`` and retrieve the output in Python."
msgstr ""
"HTMLdoc_ - скрипт для конвертации HTML в PDF. У него нет интерфейса для "
"Python, но вы можете избежать использования командной строки, используя "
"``system`` или ``popen`` для перенаправления вывода своих скриптов."

# f9fb8df7b0b14271b8bb2fdb66848ad0
#: ../../howto/outputting-pdf.txt:161
msgid "Other formats"
msgstr "Другие форматы"

# 9445b846e25749d9830d028c0498f406
#: ../../howto/outputting-pdf.txt:163
msgid ""
"Notice that there isn't a lot in these examples that's PDF-specific -- just "
"the bits using ``reportlab``. You can use a similar technique to generate "
"any arbitrary format that you can find a Python library for. Also see :doc:`/"
"howto/outputting-csv` for another example and some techniques you can use "
"when generated text-based formats."
msgstr ""
"Обратите внимание, что не так много специфики PDF в генерации документов - "
"для ``ReportLab`` это всего лишь биты. Вы можете использовать подобную технику "
"для генерации файла любого формата для которого есть соответсвующая "
"библиотека. В :doc:`/howto/outputting-csv` есть ещё примеры создания текстового "
"формата."
