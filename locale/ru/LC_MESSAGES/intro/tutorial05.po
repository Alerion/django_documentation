# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-21 17:15\n"
"PO-Revision-Date: 2013-05-29 15:46+0300\n"
"Last-Translator: Dmitriy Kostochko <alerion.um@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 1e7c953ce96043b1a25f51d4369d5eb0
#: ../../intro/tutorial05.txt:3
msgid "Writing your first Django app, part 5"
msgstr "Создаем свое первое приложение с Django, часть 5"

# 90e143e1e6ab48898b408bf863a23cd2
#: ../../intro/tutorial05.txt:5
msgid ""
"This tutorial begins where :doc:`Tutorial 4 </intro/tutorial04>` left off. "
"We've built a Web-poll application, and we'll now create some automated "
"tests for it."
msgstr "Продолжение, начало здесь - :doc:`Tutorial 4 </intro/tutorial04>`. Мы продолжаем создавать веб-приложение для опросов, а в данной части "
"напишем несколько автоматизированных тестов."

# 31afc3f5de36435a8579055149e39f8b
#: ../../intro/tutorial05.txt:10
msgid "Introducing automated testing"
msgstr "Внедрение автоматизированного тестирования"

# bebfff6a76d5486b9b64975c16ff41ba
#: ../../intro/tutorial05.txt:13
msgid "What are automated tests?"
msgstr "Что такое автоматизированные тесты?"

# 46f3ee59dfed4b819335dfe9ad02b0ce
#: ../../intro/tutorial05.txt:15
msgid "Tests are simple routines that check the operation of your code."
msgstr "По сути тест - фрагмент кода, который проверяет работу вашего кода."

# 8b2d508e51b4425ebc472ab27f58f3e6
#: ../../intro/tutorial05.txt:17
msgid ""
"Testing operates at different levels. Some tests might apply to a tiny "
"detail - *does a particular model method return values as expected?*, while "
"others examine the overall operation of the software - *does a sequence of "
"user inputs on the site produce the desired result?* That's no different "
"from the kind of testing you did earlier in :doc:`Tutorial 1 </intro/"
"tutorial01>`, using the shell to examine the behavior of a method, or "
"running the application and entering data to check how it behaves."
msgstr "Тесты разделяются по уровням. Некоторые проверяют мелкие детали - *этот метод возвращает то, что я ожидаю?*, другие более глобальны - "
"*эта последовательность ввода пользователя приведёт к ожидаемому результату?*. Нет никакой разницы как тестировать: через командную строку (как показано в "
":doc:`Tutorial 1 </intro/tutorial01>`) или через приложение, которое само вводит данные."

# e512139f251c4057b966cf407b064764
#: ../../intro/tutorial05.txt:25
msgid ""
"What's different in *automated* tests is that the testing work is done for "
"you by the system. You create a set of tests once, and then as you make "
"changes to your app, you can check that your code still works as you "
"originally intended, without having to perform time consuming manual testing."
msgstr "То, чем отличаются автоматизированные тесты, так это тем, что вся работа уже проведена за вас системой. Вы создаёте набор тестов однажды, а затем, при изменениях в приложении, вы можете проверить, работает ли ваш код как задумано без муторной ручной проверки."

# 560b790ef2e840d9b489e4bd75d2ca4a
#: ../../intro/tutorial05.txt:31
msgid "Why you need to create tests"
msgstr "Зачем вам нужны тесты"

# 344863f48eba4fe3ad7a98f911f60b8f
#: ../../intro/tutorial05.txt:33
msgid "So why create tests, and why now?"
msgstr "Зачем нужны тесты? Почему их надо создавать сейчас?"

# 1e15eae9d45d4d188b0cee9ef9af0d70
#: ../../intro/tutorial05.txt:35
msgid ""
"You may feel that you have quite enough on your plate just learning Python/"
"Django, and having yet another thing to learn and do may seem overwhelming "
"and perhaps unnecessary. After all, our polls application is working quite "
"happily now; going through the trouble of creating automated tests is not "
"going to make it work any better. If creating the polls application is the "
"last bit of Django programming you will ever do, then true, you don't need "
"to know how to create automated tests. But, if that's not the case, now is "
"an excellent time to learn."
msgstr "Может сложиться впечатление, что вы уже освоили Python/Django и изучение ещё каких-то вещей может быть ненужным. После того, как мы завершили разработку веб-приложения для голосования (и оно даже работает!) написание тестов не сделает его лучше. Если эти уроки - последнее, что вы изучали по Django, то тесты вам действительно не нужны, в ином случае приступим к изучению."

# 7cd43681bc7d41cb95c2f3eeca30130f
#: ../../intro/tutorial05.txt:45
msgid "Tests will save you time"
msgstr "Тестирование экономит ваше время"

# 80f927048e664c1995e3157494df9957
#: ../../intro/tutorial05.txt:47
msgid ""
"Up to a certain point, 'checking that it seems to work' will be a "
"satisfactory test. In a more sophisticated application, you might have "
"dozens of complex interactions between components."
msgstr "До определённого момента проверки 'оно всё ещё работает' будет достаточно, однако чем больше приложение, тем больше и сложнее будут связи между компонентами."

# 87bd83053d2748e6bf0d75d3bb55ce92
#: ../../intro/tutorial05.txt:51
msgid ""
"A change in any of those components could have unexpected consequences on "
"the application's behavior. Checking that it still 'seems to work' could "
"mean running through your code's functionality with twenty different "
"variations of your test data just to make sure you haven't broken something "
"- not a good use of your time."
msgstr "Изменения в любом из этих компонентов могут привести к неожиданным последствиям. Проверка в стиле 'похоже, оно всё ещё работает'' может обернуться беглой проверкой выполнения вашего кода с 12-ю различными вариациями тестовых данных чтобы убедиться, что ничего не сломалось, что не является лучшей тратой вашего времени."

# 14db96f708654177a9972dcb3df34840
#: ../../intro/tutorial05.txt:57
msgid ""
"That's especially true when automated tests could do this for you in "
"seconds. If something's gone wrong, tests will also assist in identifying "
"the code that's causing the unexpected behavior."
msgstr "Особенно, если автоматизированные тесты могут сделать это за секунды. Если же что-то пойдёт не так, тесты также помогут найти какая именно часть кода приводит к неожиданному поведению приложения."

# f3b4beac2f344c6e833bb9bccb585209
#: ../../intro/tutorial05.txt:61
msgid ""
"Sometimes it may seem a chore to tear yourself away from your productive, "
"creative programming work to face the unglamorous and unexciting business of "
"writing tests, particularly when you know your code is working properly."
msgstr "Иногда это может выглядеть как случайный повод чтобы не заниматься по-настоящему продуктивным творческим программированием вместо неблагодарного и неинтересного дела по написанию тестов, особенно, когда вы точно знаете, что ваш код и так работает правильно."

# e4622af65baf4a50bc3781af01441683
#: ../../intro/tutorial05.txt:65
msgid ""
"However, the task of writing tests is a lot more fulfilling than spending "
"hours testing your application manually or trying to identify the cause of a "
"newly-introduced problem."
msgstr "Тем не менее, задача по написанию тестов значительно более плодотворна, чем пустая трата часов ручного труда по поиску причин вновь возникших проблем в коде."

# 8f2d7cc13fde4237abfe62157abb442e
#: ../../intro/tutorial05.txt:70
msgid "Tests don't just identify problems, they prevent them"
msgstr "Тесты не находят проблемы, они их предотвращают"

# 2b1b3745d6cf489d9e293a1b8ce988fc
#: ../../intro/tutorial05.txt:72
msgid ""
"It's a mistake to think of tests merely as a negative aspect of development."
msgstr "Будет ошибкой считать написание тестов негативной стороной разработки."

# 588e18b254bb434caca517c45ddb7851
#: ../../intro/tutorial05.txt:74
msgid ""
"Without tests, the purpose or intended behavior of an application might be "
"rather opaque. Even when it's your own code, you will sometimes find "
"yourself poking around in it trying to find out what exactly it's doing."
msgstr "Без тестов цель и поведение приложения может быть совсем не прозрачным. Даже если это ваш код, вы можете часами биться над ошибкой не понимая откуда она взялась."

# 8e365599872846519060ce21c33c7631
#: ../../intro/tutorial05.txt:78
msgid ""
"Tests change that; they light up your code from the inside, and when "
"something goes wrong, they focus light on the part that has gone wrong - "
"*even if you hadn't even realized it had gone wrong*."
msgstr "С тестами такого не произойдёт. Они подсвечивают код изнутри, и если что-то пошло не так, они обратят на это ваше внимание - *даже если не видно, что то-то сломалось*."

# 51a7967bb7ec486da03e98d843ecf185
#: ../../intro/tutorial05.txt:83
msgid "Tests make your code more attractive"
msgstr "Тесты делают код более привлекательным"

# dbd9ac7091c04be6a6bfe5c530f1c252
#: ../../intro/tutorial05.txt:85
msgid ""
"You might have created a brilliant piece of software, but you will find that "
"many other developers will simply refuse to look at it because it lacks "
"tests; without tests, they won't trust it. Jacob Kaplan-Moss, one of "
"Django's original developers, says \"Code without tests is broken by design."
"\""
msgstr "Возможно, вы написали отличный кусок кода, однако многие разработчики могут отказаться с ним работать из-за того, что к нему нет тестов - они не будут доверять ему. Яков Каплан-Мос (один из разработчиков Django) говорит: \"Код без тестов нарушает дизайн\"."

# 458a0551fb214aca9b66d97d112b957b
#: ../../intro/tutorial05.txt:90
msgid ""
"That other developers want to see tests in your software before they take it "
"seriously is yet another reason for you to start writing tests."
msgstr "То, что другие разработчики хотят видеть тесты в вашей программе для того чтобы воспринимать её всерьёз - ещё одна причина чтобы начать писать тесты."

# ca50389812fa424e990ba6ef9f2db1f0
#: ../../intro/tutorial05.txt:94
msgid "Tests help teams work together"
msgstr "Тесты упрощают совместную работу"

# e9bcd5201b464acd978e2eccdacce4d4
#: ../../intro/tutorial05.txt:96
msgid ""
"The previous points are written from the point of view of a single developer "
"maintaining an application. Complex applications will be maintained by "
"teams. Tests guarantee that colleagues don't inadvertently break your code "
"(and that you don't break theirs without knowing). If you want to make a "
"living as a Django programmer, you must be good at writing tests!"
msgstr "Предыдущие пункты написаны с точки зрения одиночной разработки приложения. Сложные приложения разрабатываются командами. Тесты гарантируют, что коллеги ненароком не поломают ваш код, а вы их, даже не узнав об этом. Если вы хотите зарабатывать на жизнь в качестве разработчика на Django, вы обязаны быть хороши в написании тестов!"

# d86bd06e068e469abcf51eb08739c94f
#: ../../intro/tutorial05.txt:103
msgid "Basic testing strategies"
msgstr "Базовые стратегии тестирования"

# 8ee5898538a3494dacd7d38af15ce20a
#: ../../intro/tutorial05.txt:105
msgid "There are many ways to approach writing tests."
msgstr "Есть много подходов к написанию тестов."

# 3f63916fdac646b4b48f80bc9dc478e4
#: ../../intro/tutorial05.txt:107
msgid ""
"Some programmers follow a discipline called \"`test-driven development`_\"; "
"they actually write their tests before they write their code. This might "
"seem counter-intuitive, but in fact it's similar to what most people will "
"often do anyway: they describe a problem, then create some code to solve it. "
"Test-driven development simply formalizes the problem in a Python test case."
msgstr "Некоторые программисты следуют дисциплине называемую \"`test-driven development`_\"; они, на самом деле, сначала пишут тесты, прежде чем писать код. Это может показаться нелогичным, но, на самом дел,е это похоже на то, что большинство людей будут часто делать в любом случае: они описывают проблемы, а затем создают код, чтобы решить эту проблему. Разработка через тестирование просто формализует задачу в конкретном тесте."

# cad26205101946dbbf01b2a704899671
#: ../../intro/tutorial05.txt:113
msgid ""
"More often, a newcomer to testing will create some code and later decide "
"that it should have some tests. Perhaps it would have been better to write "
"some tests earlier, but it's never too late to get started."
msgstr "Чаще всего новичок сначала пишет код, а потом тесты. Возможно, было бы лучше делать наоборот, но никогда не поздно дописать тесты."

# 0a047a15b0914d718775004717517e5a
#: ../../intro/tutorial05.txt:117
msgid ""
"Sometimes it's difficult to figure out where to get started with writing "
"tests. If you have written several thousand lines of Python, choosing "
"something to test might not be easy. In such a case, it's fruitful to write "
"your first test the next time you make a change, either when you add a new "
"feature or fix a bug."
msgstr "Иногда трудно понять откуда начать написание тестов. Если вы уже написали несколько тысяч строк кода Python, выбор чего-нибудь для теста может быть непростым. В таком случае, довольно плодотворным будет написать ваш первый тест в следующий раз, когда вы внесёте изменения, добавите новую функцию или пофиксите баг."

# a25e5f0bfa6641d7bf31342b5922c603
#: ../../intro/tutorial05.txt:122
msgid "So let's do that right away."
msgstr "Давайте приступим!"

# f58dcbb672084cb4ab1e0e437785eb44
#: ../../intro/tutorial05.txt:127
msgid "Writing our first test"
msgstr "Создаем наш первый тест"

# c0134a2e7d064e4a8b1174232c6a3038
#: ../../intro/tutorial05.txt:130
msgid "We identify a bug"
msgstr "Мы нашли ошибку"

# 82037312102540bd90fac94cae82eded
#: ../../intro/tutorial05.txt:132
msgid ""
"Fortunately, there's a little bug in the ``polls`` application for us to fix "
"right away: the ``Poll.was_published_recently()`` method returns ``True`` if "
"the ``Poll`` was published within the last day (which is correct) but also "
"if the ``Poll``'s ``pub_date`` field is in the future (which certainly "
"isn't)."
msgstr "К счастью, в нашем приложении есть небольшой баг, пригодный для исправления прямо сейчас: метод ``Poll.was_published_recently()`` возвращает ``True``, если ``Poll`` был опубликован в последние сутки (что верно), но также если в поле ``pub_date`` стоит дата в будущем (что неверно)."

# a3532280b09a40e8835e58b0c75f981e
#: ../../intro/tutorial05.txt:137
msgid ""
"You can see this in the Admin; create a poll whose date lies in the future; "
"you'll see that the ``Poll`` change list claims it was published recently."
msgstr "Это можно увидеть в админке: создайте опрос будущей датой и убедитесь, что он вошёл в список недавно опубликованных."

# 33d03950d4a8472e8d3c5ea12189a604
#: ../../intro/tutorial05.txt:140
msgid "You can also see this using the shell::"
msgstr "Это также можно посмотреть через командную строку::"

# 19ec86f5cd014e1b9b10388f0dd2767c
#: ../../intro/tutorial05.txt:151
msgid "Since things in the future are not 'recent', this is clearly wrong."
msgstr "Так как будущее - не 'недавно', то это явная ошибка."

# 6c77887e759b49898444fdede4e42ddd
#: ../../intro/tutorial05.txt:154
msgid "Create a test to expose the bug"
msgstr "Создадим тест на эту ошибку"

# 41066e7c853845f8a38d2be626babf70
#: ../../intro/tutorial05.txt:156
msgid ""
"What we've just done in the shell to test for the problem is exactly what we "
"can do in an automated test, so let's turn that into an automated test."
msgstr "То, что сделали в командой строке по сути повторяется в автоматизированном тесте, так что приступим."

# 95f0168c000640e384c3fc85a9a99f99
#: ../../intro/tutorial05.txt:159
msgid ""
"The best place for an application's tests is in the application's ``tests."
"py`` file - the testing system will look there for tests automatically."
msgstr "Лучшее место для тестов приложения - в файле ``tests.py`` - система будет использовать его для выполнения автоматизированных тестов."

# 4280444928f44242877258a34b1d8a82
#: ../../intro/tutorial05.txt:162
msgid ""
"Put the following in the ``tests.py`` file in the ``polls`` application "
"(you'll notice  ``tests.py`` contains some dummy tests, you can remove "
"those)::"
msgstr "Скопируйте следующий код в файл ``tests.py`` в каталог приложения ``polls`` (в ``tests.py`` есть несколько простых тестов, которые можно удалить)::"

# d678c986a2c74f83a8cb43b08ed44d2a
#: ../../intro/tutorial05.txt:182
msgid ""
"What we have done here is created a :class:`django.test.TestCase` subclass "
"with a method that creates a ``Poll`` instance with a ``pub_date`` in the "
"future. We then check the output of ``was_published_recently()`` - which "
"*ought* to be False."
msgstr "Здесь мы унаследовались от :class:`django.test.TestCase` и добавили метод, который создаёт экземпляр ``Poll`` со значением ``pub_date`` в будущем. Затем проверяем результат выполнения ``was_published_recently()`` - который *должен быть* False."

# df857079e1644057af655727bbee86a9
#: ../../intro/tutorial05.txt:188
msgid "Running tests"
msgstr "Выполнение тестов"

# 0f63fbb90ac44264838ce4caaacf1b80
#: ../../intro/tutorial05.txt:190
msgid "In the terminal, we can run our test::"
msgstr "Для запуска тестов в консоли::"

# 9b5b956249c847098a1e6d65329537f8
#: ../../intro/tutorial05.txt:194
msgid "and you'll see something like::"
msgstr "и вы увидите следующее::"

# 826a4084791a4ae0b21b01eff86d4725
#: ../../intro/tutorial05.txt:212
msgid "What happened is this:"
msgstr "Вот что случилось:"

# 63485cd3e9d04d69b3695262ee06499e
#: ../../intro/tutorial05.txt:214
msgid ""
"``python manage.py test polls`` looked for tests in the ``polls`` application"
msgstr "``python manage.py test polls`` идёт за тестами в каталог приложения ``polls``"

# d40725de5aed4f4f8058cc2c23920ac0
#: ../../intro/tutorial05.txt:216
msgid "it found a subclass of the :class:`django.test.TestCase` class"
msgstr "находит класс, который наследуется от :class:`django.test.TestCase`"

# 32a41d269092490eba5c53f5a2e72b6d
#: ../../intro/tutorial05.txt:218
msgid "it created a special database for the purpose of testing"
msgstr "создаёт специальную базу данных для тестирования"

# 4d71037978b7483a8378580751aa9191
#: ../../intro/tutorial05.txt:220
msgid "it looked for test methods - ones whose names begin with ``test``"
msgstr "ищет тестовые методы - они должны начинаться с ``test``"

# 869078f72a6a4dd0b7ad3079d825dd36
#: ../../intro/tutorial05.txt:222
msgid ""
"in ``test_was_published_recently_with_future_poll`` it created a ``Poll`` "
"instance whose ``pub_date`` field is 30 days in the future"
msgstr "в методе ``test_was_published_recently_with_future_poll`` создаётся экземпляр ``Poll`` с ``pub_date`` в далёком будущем (аж на 30 дней)"

# 8fe56deb03d74e7088c08d4f20a3bfdd
#: ../../intro/tutorial05.txt:225
msgid ""
"... and using the ``assertEqual()`` method, it discovered that its "
"``was_published_recently()`` returns ``True``, though we wanted it to return "
"``False``"
msgstr "... и с помощью метода ``assertEqual()`` проверяется что вернул ``was_published_recently()``. Вернулось ``True``, а мы указали, что хотим ``False``"

# 7eebbcc087e44e9d9a44c52ccfe52d22
#: ../../intro/tutorial05.txt:229
msgid ""
"The test informs us which test failed and even the line on which the failure "
"occurred."
msgstr "Далее идёт информация какой тест не прошёл и на какой строчке возникло расхождение."

# deed5bc5bb3d497a8bb15aebbbb0e693
#: ../../intro/tutorial05.txt:233
msgid "Fixing the bug"
msgstr "Исправление ошибки"

# 1d20ffc0233649d9a5fa208bb35e31f0
#: ../../intro/tutorial05.txt:235
msgid ""
"We already know what the problem is: ``Poll.was_published_recently()`` "
"should return ``False`` if its ``pub_date`` is in the future. Amend the "
"method in ``models.py``, so that it will only return ``True`` if the date is "
"also in the past::"
msgstr "Мы уже знаем, что проблема в ``Poll.was_published_recently()``: он должен вернуть ``False``, если ``pub_date`` находится в будущем. Дополним метод в ``models.py`` проверкой - возвращать ``True`` только если дата в прошлом::"

# 7295723df831487bac03d42abab43081
#: ../../intro/tutorial05.txt:244
msgid "and run the test again::"
msgstr "и заново запустим::"

# 809f5de828394e6cb11a5793553390b4
#: ../../intro/tutorial05.txt:254
msgid ""
"After identifying a bug, we wrote a test that exposes it and corrected the "
"bug in the code so our test passes."
msgstr "После того как ошибка была выявлена мы написали тест, который выявил и исправил ошибку в коде, поэтому наш тест был пройден успешно."

# da3d7125da104ae4bd0e7968edc8358d
#: ../../intro/tutorial05.txt:257
msgid ""
"Many other things might go wrong with our application in the future, but we "
"can be sure that we won't inadvertently reintroduce this bug, because simply "
"running the test will warn us immediately. We can consider this little "
"portion of the application pinned down safely forever."
msgstr "Много где ещё могут быть ошибки, но только не в этом месте, потому что простой запуск тестов немедленно нас об этом предупредит. Можно рассматривать этот маленький кусок кода как гарантию работы нашего приложения."

# 2ed180abd3e248eabf6afdf2dc2978c1
#: ../../intro/tutorial05.txt:263
msgid "More comprehensive tests"
msgstr "Более подробные тесты"

# 67c36072116349d79f4c8c82e2b879a0
#: ../../intro/tutorial05.txt:265
msgid ""
"While we're here, we can further pin down the ``was_published_recently()`` "
"method; in fact, it would be positively embarrassing if in fixing one bug we "
"had introduced another."
msgstr "Пока мы здесь, помучаем ещё метод ``was_published_recently()``; нехорошо, как-то нехорошо при тестировании ошибки воспроизводить другую."

# ca2298f42e9348edb009f1afcb9b9f92
#: ../../intro/tutorial05.txt:269
msgid ""
"Add two more test methods to the same class, to test the behavior of the "
"method more comprehensively::"
msgstr "Добавим ещё тестов для полноты проверки поведения метода::"

# 8061eaa0bfc04e99aa4aadbabecf8a13
#: ../../intro/tutorial05.txt:288
msgid ""
"And now we have three tests that confirm that ``Poll.was_published_recently()"
"`` returns sensible values for past, recent, and future polls."
msgstr "Теперь у нас есть 3 метода, которые проверяют, что ``Poll.was_published_recently()`` возвращает ожидаемое значение для опросов в далёком прошлом, недавных и будущих."

# 544a76945a454d9b96a90b93f405c0ce
#: ../../intro/tutorial05.txt:291
msgid ""
"Again, ``polls`` is a simple application, but however complex it grows in "
"the future and whatever other code it interacts with, we now have some "
"guarantee that the method we have written tests for will behave in expected "
"ways."
msgstr "``polls`` - простое приложение, но каким бы сложным оно не стало в будущем, мы будем уверены, что этот метод будет возвращать ожидаемое значение."

# 89247992209341f38f992c7f9d5fc3f1
#: ../../intro/tutorial05.txt:296
msgid "Test a view"
msgstr "Тестируем представление"

# 8c7d512fd7cf43439e68f79077acc42d
#: ../../intro/tutorial05.txt:298
msgid ""
"The polls application is fairly undiscriminating: it will publish any poll, "
"including ones whose ``pub_date`` field lies in the future. We should "
"improve this. Setting a ``pub_date`` in the future should mean that the Poll "
"is published at that moment, but invisible until then."
msgstr "Наше приложение довольно неразборчивое - оно публикует даже те опросы, которые запланированы в будущем. Давайте это исправим. Значение ``pub_date`` в будущем должно означать, что до этого времени опрос должен оставаться невидимым."

# 7a9cc9bdbf7740aeaac785b5587ddc5c
#: ../../intro/tutorial05.txt:304
msgid "A test for a view"
msgstr "Тесты для представления"

# 81950d48161e4ff3a86220b02f0729da
#: ../../intro/tutorial05.txt:306
msgid ""
"When we fixed the bug above, we wrote the test first and then the code to "
"fix it. In fact that was a simple example of test-driven development, but it "
"doesn't really matter in which order we do the work."
msgstr "когда мы исправляли ошибку выше, мы писали тест, а затем код. Это самый простой пример разработки через тестирование, но на самом деле нет разницы в каком порядке будут проделаны эти действия."

# f43e225fde3f47788d973ec4bda15cb2
#: ../../intro/tutorial05.txt:310
msgid ""
"In our first test, we focused closely on the internal behavior of the code. "
"For this test, we want to check its behavior as it would be experienced by a "
"user through a web browser."
msgstr "В нашем первом тесте мы фокусировались на коде функции. Сейчас же мы проверим поведение как если бы пользователь использовал наше приложение через браузер."

# 24ca89ab83f54f06a020ea691c7a258a
#: ../../intro/tutorial05.txt:314
msgid ""
"Before we try to fix anything, let's have a look at the tools at our "
"disposal."
msgstr "Прежде чем мы попытаемся исправить что-либо, давайте взглянем на инструменты, которые есть в нашем распоряжении."

# 3da6eae46b30472cab98b8fd23694922
#: ../../intro/tutorial05.txt:317
msgid "The Django test client"
msgstr "Клиент для тестирования Django"

# c48764ed43894c069aa7d0810058e6f2
#: ../../intro/tutorial05.txt:319
msgid ""
"Django provides a test :class:`~django.test.client.Client` to simulate a "
"user interacting with the code at the view level.  We can use it in ``tests."
"py`` or even in the shell."
msgstr "Django предоставляет класс для тестов :class:`~django.test.client.Client` для эмуляции пользовательских действий на уровне представления. Мы можем использовать его в ``tests.py`` или в командной строке."

# 7bb1c5e203604f598a9c87d57a941130
#: ../../intro/tutorial05.txt:323
msgid ""
"We will start again with the shell, where we need to do a couple of things "
"that won't be necessary in ``tests.py``. The first is to set up the test "
"environment in the shell::"
msgstr "Давайте начнём снова с командной строки, где мы должны сделать несколько вещей, которые не нужны в ``tests.py``. Сначала проинициализируем тестовую среду::"

# 522a2e1ad68d4d798be8670044c90a62
#: ../../intro/tutorial05.txt:330
msgid ""
":meth:`~django.test.utils.setup_test_environment` installs a template "
"renderer which will allow us to examine some additional attributes on "
"responses such as ``response.context`` that otherwise wouldn't be available. "
"Note that this method *does not* setup a test database, so the following "
"will be run against the existing database and the output may differ slightly "
"depending on what polls you already created."
msgstr ":meth:`~django.test.utils.setup_test_environment` инициализирует шаблон, который позволяет обращаться к некоторым дополнительным атрибутам, например, ``response.context``. Обратите внимание, что этот метод не настраивает базу данных, так что мы будем обращаться к реальным данным, и вывод может отличаться в зависимости от того, что у там содержится."

# 879895e5043b4cd9ac743fc07f1a2673
#: ../../intro/tutorial05.txt:337
msgid ""
"Next we need to import the test client class (later in ``tests.py`` we will "
"use the :class:`django.test.TestCase` class, which comes with its own "
"client, so this won't be required)::"
msgstr "Далее нужно импортировать класс тестового клиента (позже в ``tests.py`` мы будем использовать :class:`django.test.TestCase`, который поставляется со своим клиентом)::"

# bdd2dd9426ae4b7fa88d7ee7f4110a84
#: ../../intro/tutorial05.txt:345
msgid "With that ready, we can ask the client to do some work for us::"
msgstr "Теперь мы готовы для запуска::"

# 25b3bdc3ece745358a65cc5d26d74068
#: ../../intro/tutorial05.txt:376
msgid "Improving our view"
msgstr "Улучшим наше представление"

# 7b287475856347b5aa4c70cf2fc0cec8
#: ../../intro/tutorial05.txt:378
msgid ""
"The list of polls shows polls that aren't published yet (i.e. those that "
"have a ``pub_date`` in the future). Let's fix that."
msgstr "В список опросов полпали и те, которые ещё не должны быть опубликованы (у которых ``pub_date`` в будущем). Исправим это."

# 6cb65003b1a148ea8e469381d25da6f6
#: ../../intro/tutorial05.txt:381
msgid ""
"In :doc:`Tutorial 4 </intro/tutorial04>` we introduced a class-based view, "
"based on :class:`~django.views.generic.list.ListView`::"
msgstr "В :doc:`Tutorial 4 </intro/tutorial04>` мы пронаследовались от :class:`~django.views.generic.list.ListView`::"

# 56d8e4f1391f487fa74449f9ef19b64f
#: ../../intro/tutorial05.txt:392
msgid ""
"``response.context_data['latest_poll_list']`` extracts the data this view "
"places into the context."
msgstr "``response.context_data['latest_poll_list']`` извлекает данные и помещает их в контекст."

# c22303d059c34050b329303e34204e79
#: ../../intro/tutorial05.txt:395
msgid ""
"We need to amend the ``get_queryset`` method and change it so that it also "
"checks the date by comparing it with ``timezone.now()``. First we need to "
"add an import::"
msgstr "Нам нужно изменить метод ``get_queryset`` так, чтобы он сравнивал дату опроса с ``timezone.now()``. сначала добавим импорт::"

# ebd0b44e31094b188fac919734a111d9
#: ../../intro/tutorial05.txt:401
msgid "and then we must amend the ``get_queryset`` method like so::"
msgstr "далее изменим существующую функцию ``get_queryset`` на::"

# 016a16e01a294dffba100001659ea9ff
#: ../../intro/tutorial05.txt:412
msgid ""
"``Poll.objects.filter(pub_date__lte=timezone.now())`` returns a queryset "
"containing Polls whose ``pub_date`` is less than or equal to - that is, "
"earlier than or equal to - ``timezone.now``."
msgstr "``Poll.objects.filter(pub_date__lte=timezone.now())`` возвращает набор данных, содержащий те опросы, у которых ``pub_date`` меньше или равна ``timezone.now``."

# b51fa38bf4334b53bf6d05cd61c69029
#: ../../intro/tutorial05.txt:417
msgid "Testing our new view"
msgstr "Тестирование нового представления"

# fe0ccb3de584451eb0c2316b469f4fc6
#: ../../intro/tutorial05.txt:419
msgid ""
"Now you can satisfy yourself that this behaves as expected by firing up the "
"runserver, loading the site in your browser, creating ``Polls`` with dates "
"in the past and future, and checking that only those that have been "
"published are listed.  You don't want to have to do that *every single time "
"you make any change that might affect this* - so let's also create a test, "
"based on our shell session above."
msgstr "Теперь поведение такое, как и задумывалось. Проверим это: запустим runserver, загрузим сайт, создадим ``Polls`` с датами в прошлом и будущем и убедимся, что видны только даты в прошлом. Но проделывать это вручную каждый раз накладно - давайте напишем тест, который будет выполнять такую последовательность действий."

# 163dd99b91a544fd9c113aa596335b0c
#: ../../intro/tutorial05.txt:426
msgid "Add the following to ``polls/tests.py``::"
msgstr "Добавим следующий код в ``polls/tests.py``::"

# 07102ca8a2b6465bbe20f06fd7fc0092
#: ../../intro/tutorial05.txt:430
msgid ""
"and we'll create a factory method to create polls as well as a new test "
"class::"
msgstr "и мы создадим метод-фабрику для создания опросов как новый тестовый класс::"

# c391e30da3df42bfb32dbcc5c19e13b8
#: ../../intro/tutorial05.txt:497
msgid "Let's look at some of these more closely."
msgstr "Давайте подробнее разберём некоторые моменты."

# c1eee558a3424d50af1737378e5c76ad
#: ../../intro/tutorial05.txt:499
msgid ""
"First is a poll factory method, ``create_poll``, to take some repetition out "
"of the process of creating polls."
msgstr "Во-первых, это метод-фабрика ``create_poll``, который воспроизводит некоторые действия при создании опроса."

# af00d259eb454177a960a96c480ed9b5
#: ../../intro/tutorial05.txt:502
msgid ""
"``test_index_view_with_no_polls`` doesn't create any polls, but checks the "
"message: \"No polls are available.\" and verifies the ``latest_poll_list`` "
"is empty. Note that the :class:`django.test.TestCase` class provides some "
"additional assertion methods. In these examples, we use :meth:`~django.test."
"TestCase.assertContains()` and :meth:`~django.test.TestCase."
"assertQuerysetEqual()`."
msgstr "``test_index_view_with_no_polls`` не создаёт никаких опросов, но проверяет вывод сообщения \"No polls are available.\" и ``latest_poll_list`` на отсутствие содержимого. Обратите внимание, что :class:`django.test.TestCase` использует дополнительные методы для проверки утверждений: :meth:`~django.test.TestCase.assertContains()` and :meth:`~django.test.TestCase.assertQuerysetEqual()`."

# a4c2503a82274a46a1c6f991fe9e252e
#: ../../intro/tutorial05.txt:509
msgid ""
"In ``test_index_view_with_a_past_poll``, we create a poll and verify that it "
"appears in the list."
msgstr "В ``test_index_view_with_a_past_poll`` мы создали опрос и убедились, что он попал в список."

# 6c171019d5e94fa8b044356cc4bd5f9d
#: ../../intro/tutorial05.txt:512
msgid ""
"In ``test_index_view_with_a_future_poll``, we create a poll with a "
"``pub_date`` in the future. The database is reset for each test method, so "
"the first poll is no longer there, and so again the index shouldn't have any "
"polls in it."
msgstr "В ``test_index_view_with_a_future_poll`` мы создаём опрос с ``pub_date`` в будущем. База данных сбрасывается для каждого тестового метода, так что в списке опросов должно быть пусто."

# 3975c37abc894c7785de6a87c13479ad
#: ../../intro/tutorial05.txt:516
msgid ""
"And so on. In effect, we are using the tests to tell a story of admin input "
"and user experience on the site, and checking that at every state and for "
"every new change in the state of the system, the expected results are "
"published."
msgstr "И так далее. По сути, мы используем тесты как эмуляцию ввода данных администратора и для проверки, что на каждом шаге и для каждого изменения программа ведёт себя именно так, как задумывалось."

# 0f4032e10b704d06b947d68ff1b1f65b
#: ../../intro/tutorial05.txt:521
msgid "Testing the ``DetailView``"
msgstr "Тестирование ``DetailView``"

# 5619d695be484f748ec4677ebb4042e9
#: ../../intro/tutorial05.txt:523
msgid ""
"What we have works well; however, even though future polls don't appear in "
"the *index*, users can still reach them if they know or guess the right URL. "
"So we need to add a similar  constraint to ``DetailView``::"
msgstr "мы получили вполне рабочий результат, однако хоть запланированные опросы и не попадут в список, они будут доступны по прямой ссылке. Следовательно, нужно наложить некоторые ограничения на ``DetailView``::"

# 992d5c002122485286fdb94e4ae4ffa1
#: ../../intro/tutorial05.txt:536
msgid ""
"And of course, we will add some tests, to check that a ``Poll`` whose "
"``pub_date`` is in the past can be displayed, and that one with a "
"``pub_date`` in the future is not::"
msgstr "И, конечно, мы добавим тесты, проверяющие, что опросы, у которых ``pub_date`` в прошлом, не показываются, также как и те, у которых ``pub_date`` в будущем::"

# fff49f596ada4b29b832677fc0c9b943
#: ../../intro/tutorial05.txt:560
msgid "Ideas for more tests"
msgstr "Идеи для других тестов"

# 2a1a8f5c1e0b436b87eb3942a15b6616
#: ../../intro/tutorial05.txt:562
msgid ""
"We ought to add a similar ``get_queryset`` method to ``ResultsView`` and "
"create a new test class for that view. It'll be very similar to what we have "
"just created; in fact there will be a lot of repetition."
msgstr "мы должны добавить метод, подобный ``get_queryset``, в ``ResultsView`` и создать для него новый класс тестов. Это несложно, но, в основном, повторит код, который уже был здесь написан."

# ead6ffc189b345208c99f5c87ad5fc60
#: ../../intro/tutorial05.txt:566
msgid ""
"We could also improve our application in other ways, adding tests along the "
"way. For example, it's silly that ``Polls`` can be published on the site "
"that have no ``Choices``. So, our views could check for this, and exclude "
"such ``Polls``. Our tests would create a ``Poll`` without ``Choices`` and "
"then test that it's not published, as well as create a similar ``Poll`` "
"*with* ``Choices``, and test that it *is* published."
msgstr "Мы также могли бы улучшить наше приложение, покрыв всё тестами. Например, ``Polls`` не должен публиковаться, если у него нет ``Choices``. Можно исключать такие опросы в представлении. Тест же может создать ``Poll`` без ``Choices`` и проверить, что он не опубликован, а потом создать ``Poll`` с ``Choices`` и проверить, что он отображается."

# 25d742f110794021afa3dfb68a25105d
#: ../../intro/tutorial05.txt:573
msgid ""
"Perhaps logged-in admin users should be allowed to see unpublished "
"``Polls``, but not ordinary visitors. Again: whatever needs to be added to "
"the software to accomplish this should be accompanied by a test, whether you "
"write the test first and then make the code pass the test, or work out the "
"logic in your code first and then write a test to prove it."
msgstr "Возможно, администраторы и должны иметь возможность видеть неопубликованные опросы, но не обычные посетители. Опять же: каждый новый функционал должен сопровождаться тестами. Неваждно, пишутся ли они до или после кода."

# 7d90358b732341e380e037ad98d11a50
#: ../../intro/tutorial05.txt:579
msgid ""
"At a certain point you are bound to look at your tests and wonder whether "
"your code is suffering from test bloat, which brings us to:"
msgstr "В какой-то момент вы посмотрите на тесты покрывающие функционал и удивитесь, что всё так слаженно работает. Посему:"

# e335795435f64d29976a4ad098b0d971
#: ../../intro/tutorial05.txt:583
msgid "When testing, more is better"
msgstr "Чем больше тестов, тем лучше"

# 2b2bdc6976164cbc8c374062a3952b42
#: ../../intro/tutorial05.txt:585
msgid ""
"It might seem that our tests are growing out of control. At this rate there "
"will soon be more code in our tests than in our application, and the "
"repetition is unaesthetic, compared to the elegant conciseness of the rest "
"of our code."
msgstr "Может показаться, что количество тестов выходит из-под контроля. Их объём превысит размер кода, а методы будут ужасны, по сравнению с кодом приложения."

# 0e1cd79939854091a0e29085949a0985
#: ../../intro/tutorial05.txt:589
msgid ""
"**It doesn't matter**. Let them grow. For the most part, you can write a "
"test once and then forget about it. It will continue performing its useful "
"function as you continue to develop your program."
msgstr "**Это не важно!** Пускай они растут. В основном, вы будете писать тест всего раз и забывать про него. Он же будет работать и помогать развивать приложение."

# dc801b1c25f04c5db7151d901898efb9
#: ../../intro/tutorial05.txt:593
msgid ""
"Sometimes tests will need to be updated. Suppose that we amend our views so "
"that only ``Polls`` with ``Choices`` are published. In that case, many of "
"our existing tests will fail - *telling us exactly which tests need to be "
"amended to bring them up to date*, so to that extent tests help look after "
"themselves."
msgstr "Иногда тесты должны быть обновлены. Например, когда меняется логика функций или объектов. В этом случае многие существующие тесты будут провалены - *это означает, что в эти тесты необходимо обновить*, чтобы поддерживать в актуальном состоянии."

# aaaefc59c9304763a532a210ceec8186
#: ../../intro/tutorial05.txt:598
msgid ""
"At worst, as you continue developing, you might find that you have some "
"tests that are now redundant. Even that's not a problem; in testing "
"redundancy is a *good* thing."
msgstr "В худшем случае может оказаться, что тесты проверяют один и тот же функционал. Не обращайте на это внимание - в тестировании избыточность *хорошая* вешь."

# 24bdb3709fa948cc9327f1256429b0fa
#: ../../intro/tutorial05.txt:602
msgid ""
"As long as your tests are sensibly arranged, they won't become unmanageable. "
"Good rules-of-thumb include having:"
msgstr "Пока ваши тесты логично организованы, они управляемы. Хорошие привычки подразумевают:"

# 6e8dc4a1434845b7b4c0fe494d931274
#: ../../intro/tutorial05.txt:605
msgid "a separate ``TestClass`` for each model or view"
msgstr "разделять ``TestClass`` для каждой одели или представления"

# 56ec7401e2e2488480ffe2a8e75ccc45
#: ../../intro/tutorial05.txt:606
msgid "a separate test method for each set of conditions you want to test"
msgstr "делать отдельный метод для каждого проверяемого условия"

# 0882b9fbc026411e83d11e83fa6162d0
#: ../../intro/tutorial05.txt:607
msgid "test method names that describe their function"
msgstr "имена тестовых методов должны описывать их функционал"

# bf3a8cf396cd4e3fba7bb25553043a3e
#: ../../intro/tutorial05.txt:610
msgid "Further testing"
msgstr "Дальнейшее тестирование"

# 287afa6cfaee4f7abaefd75154727261
#: ../../intro/tutorial05.txt:612
msgid ""
"This tutorial only introduces some of the basics of testing. There's a great "
"deal more you can do, and a number of very useful tools at your disposal to "
"achieve some very clever things."
msgstr "Этот урок показывает только базовые техники тестирования. На самом деле много чего здесь не описано, например, полезные утилиты, которые помогают в разработке."

# 02844daea56d432ebf4be0e6fce7a3cf
#: ../../intro/tutorial05.txt:616
msgid ""
"For example, while our tests here have covered some of the internal logic of "
"a model and the way our views publish information, you can use an \"in-"
"browser\" framework such as Selenium_ to test the way your HTML actually "
"renders in a browser. These tools allow you to check not just the behavior "
"of your Django code, but also, for example, of your JavaScript. It's quite "
"something to see the tests launch a browser, and start interacting with your "
"site, as if a human being were driving it! Django includes :class:`~django."
"test.LiveServerTestCase` to facilitate integration with tools like Selenium."
msgstr "Например, пока наши тесты покрывают внутреннюю логику, вы можете использовать сторонние инструменты для тестирования, например, Selenium. Он позволяет проверять уже конечный результат генерации страницы непосредственно в браузере. Это очень пригодится при тестировании JavaScript. Выглядит это как будто человек открывает сайт и начинает с ним работать. У Django есть класс для интеграции - :class:`~django.test.LiveServerTestCase`."

# 7aafc07806c149b1aeff7b775a6534ed
#: ../../intro/tutorial05.txt:625
msgid ""
"If you have a complex application, you may want to run tests automatically "
"with every commit for the purposes of `continuous integration`_, so that "
"quality control is itself - at least partially - automated."
msgstr "Если у вас сложное приложение, то можно настроить запуск тестов на каждый коммит (часть `continuous integration`_), что позволит автоматически следить за качеством кода."

# f7424ea461f440d482515e7e704c08d7
#: ../../intro/tutorial05.txt:629
msgid ""
"A good way to spot untested parts of your application is to check code "
"coverage. This also helps identify fragile or even dead code. If you can't "
"test a piece of code, it usually means that code should be refactored or "
"removed. Coverage will help to identify dead code. See :ref:`topics-testing-"
"code-coverage` for details."
msgstr "Хороший способ определить какая часть не покрыта тестами - узнать покрытие кода. Это также позволяет выявить неиспользуемый код. Если вы не можете написать тест для тестирования какого-либо куска кода, это означает, что именно здесь требуется рефакторинг. Подробнее тут - :ref:`topics-testing-code-coverage`."

# 7881627aa8c7408c8bb6678671cd4a3b
#: ../../intro/tutorial05.txt:635
msgid ""
":doc:`Testing Django applications </topics/testing/index>` has comprehensive "
"information about testing."
msgstr "Море информации по тестированию можно получить здесь: :doc:`Testing Django applications </topics/testing/index>`"

# 6558e9bd61aa469b87354c244ab8fb6f
#: ../../intro/tutorial05.txt:642
msgid "What's next?"
msgstr "Что дальше?"

# 8ead96120c23486394eac2bc1eee4a7f
#: ../../intro/tutorial05.txt:644
msgid ""
"For full details on testing, see :doc:`Testing in Django </topics/testing/"
"index>`."
msgstr "За дополнительной информацией можно обратиться к :doc:`Testing in Django </topics/testing/index>`."

# c33bcba59da94d158c8f68745d965201
#: ../../intro/tutorial05.txt:647
msgid ""
"When you're comfortable with testing Django views, read :doc:`part 6 of this "
"tutorial</intro/tutorial06>` to learn about static files management."
msgstr "Когда разберётесь с тестированием, прочитайте :doc:`part 6 of this tutorial</intro/tutorial06>`, там разбирается работа со статическими файлами."
