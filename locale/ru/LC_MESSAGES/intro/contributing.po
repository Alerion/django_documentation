# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2013.
# Григорий Крамаренко, 2016.
# paranoid <brain2dump@gmail.com>, 2018.
# Dmitriy Nikitin <brain2dump@gmail.com>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.8.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-08-03 16:48+0300\n"
"PO-Revision-Date: 2018-08-03 18:44+0300\n"
"Last-Translator: Dmitriy Nikitin <brain2dump@gmail.com>\n"
"Language-Team: русский <>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Gtranslator 2.91.7\n"

# d4e12eb2e4c34ff19d4f905f1f5e08d6
#: ../../intro/contributing.txt:3
msgid "Writing your first patch for Django"
msgstr "Составление Вашего первого патча для Django"

# da00b287d8674b7189c3b20870cd7129
#: ../../intro/contributing.txt:6
msgid "Introduction"
msgstr "Введение"

# 7c9b027dca8e4263bee75a14bda29c9a
#: ../../intro/contributing.txt:8
msgid ""
"Interested in giving back to the community a little? Maybe you've found a "
"bug in Django that you'd like to see fixed, or maybe there's a small feature "
"you want added."
msgstr ""
"Заинтересованы в небольшой обратной помощи сообществу? Может быть Вы нашли "
"ошибку в Django, которую хотели бы видеть исправленной, либо имеете "
"небольшое новшество, которое хотели бы добавить."

# 9665f67d395845b69a347bc716bf344f
#: ../../intro/contributing.txt:12
msgid ""
"Contributing back to Django itself is the best way to see your own concerns "
"addressed. This may seem daunting at first, but it's really pretty simple. "
"We'll walk you through the entire process, so you can learn by example."
msgstr ""
"Обратное содействие в Django - сам по себе лучший способ увидеть внутренние "
"проблемы. Это может показаться сложным на первый взгляд, но это "
"действительно довольно просто. Мы проведем Вас через весь процесс так, что "
"Вы сможете научиться на этом примере."

# b868c39abcfb4a489b91d50ac632cc21
#: ../../intro/contributing.txt:17
msgid "Who's this tutorial for?"
msgstr "Для кого это руководство?"

#: ../../intro/contributing.txt:21
msgid ""
"If you are looking for a reference on how to submit patches, see the :doc:`/"
"internals/contributing/writing-code/submitting-patches` documentation."
msgstr ""
"Если вам нужно руководство как отправлять патчи, смотрите :doc:`/internals/"
"contributing/writing-code/submitting-patches`."

# aab485c9dbf34f5abde13044f5c08cb9
#: ../../intro/contributing.txt:25
msgid ""
"For this tutorial, we expect that you have at least a basic understanding of "
"how Django works. This means you should be comfortable going through the "
"existing tutorials on :doc:`writing your first Django app</intro/"
"tutorial01>`. In addition, you should have a good understanding of Python "
"itself. But if you don't, `Dive Into Python`__ is a fantastic (and free) "
"online book for beginning Python programmers."
msgstr ""
"Для использования этого руководства, у Вас должно быть хотя бы общее "
"понимание того, как устроен Django. Как минимум, Вы должны пройти и усвоить "
"руководство по :doc:`написанию Вашего первого приложения Django</intro/"
"tutorial01>`. Кроме того, Вы должны хорошо понимать сам Python. Но, если "
"нет, то `Dive Into Python <http://www.diveintopython3.net/>`_ - это "
"прекрасная (и свободная) онлайн-книга для начинающих Python-программистов."

# 5dbd36be5c074e1b85c29536d098dc05
#: ../../intro/contributing.txt:32
msgid ""
"Those of you who are unfamiliar with version control systems and Trac will "
"find that this tutorial and its links include just enough information to get "
"started. However, you'll probably want to read some more about these "
"different tools if you plan on contributing to Django regularly."
msgstr ""
"Те из вас, кто незнаком с системами контроля версий и Trac, увидят, что это "
"руководство и его ссылки содержат достаточно информации, чтобы начать "
"работу. Впрочем, Вы, вероятно, захотите узнать больше об этих различных "
"инструментах, если планируете содействовать Django постоянно."

# e96fc15be073406ca4a023f65821b074
#: ../../intro/contributing.txt:37
msgid ""
"For the most part though, this tutorial tries to explain as much as "
"possible, so that it can be of use to the widest audience."
msgstr ""
"На самом деле то руководство затрагивает довольно много тем, стараясь быть "
"полезным для самой широкой аудитории."

# 1ef3bfec01484c5aa497a7f9342a046b
#: ../../intro/contributing.txt:40
msgid "Where to get help:"
msgstr "Где получить помощь:"

# 360c8d36f66e4219ad5af7835617bbe7
#: ../../intro/contributing.txt:42
msgid ""
"If you're having trouble going through this tutorial, please post a message "
"to |django-developers| or drop by `#django-dev on irc.freenode.net`__ to "
"chat with other Django users who might be able to help."
msgstr ""
"Если у Вас возникли проблемы с данным руководством, пожалуйста, отправьте "
"сообщение на |django-developers| или посетите канал `#django-dev на irc."
"freenode.net <irc://irc.freenode.net/django-dev>`_ , чтобы пообщаться с "
"другими пользователями Django, которые могут быть в состоянии помочь."

# a055dedf5e6a4c438c4a2bccd469c032
#: ../../intro/contributing.txt:50
msgid "What does this tutorial cover?"
msgstr "Какие вопросы охватывает данное руководство?"

# cd659c3640fe475d8c5bdf0dff5fb9d6
#: ../../intro/contributing.txt:52
msgid ""
"We'll be walking you through contributing a patch to Django for the first "
"time. By the end of this tutorial, you should have a basic understanding of "
"both the tools and the processes involved. Specifically, we'll be covering "
"the following:"
msgstr ""
"Мы будем двигаться к Вашему пониманию того, как отсылать патч для Django в "
"первый раз. К концу этого руководства Вы должны будете иметь базовое "
"понимание как инструментов, так и связанных процессов. В частности, "
"рассмотрим следующее:"

# e40456bc3e3345278569facd0dbc2e90
#: ../../intro/contributing.txt:56
msgid "Installing Git."
msgstr "Установка Git."

# 4dfabfaab785463eaaa7edc61f7a5e66
#: ../../intro/contributing.txt:57
msgid "How to download a development copy of Django."
msgstr "Как скачать разрабатываемую копию Django."

# c8771b05df584a869eaeb3db476bb8ee
#: ../../intro/contributing.txt:58
msgid "Running Django's test suite."
msgstr "Запуск коллекции тестов Django."

# 834ae08263b9435d9671583c4274dc84
#: ../../intro/contributing.txt:59
msgid "Writing a test for your patch."
msgstr "Написание теста для патча."

# 0c8e4b034f894f81b93d6497ec385757
#: ../../intro/contributing.txt:60
msgid "Writing the code for your patch."
msgstr "Написание кода для патча."

# 9c17bd818a134c05b0b059cc566c61bb
#: ../../intro/contributing.txt:61
msgid "Testing your patch."
msgstr "Тестирование Вашего патча."

#: ../../intro/contributing.txt:62
msgid "Submitting a pull request."
msgstr "Отправка запроса на включение (pull request)."

# c7488f9ce11441e4a2e1dc17dae871b7
#: ../../intro/contributing.txt:63
msgid "Where to look for more information."
msgstr "Где искать дополнительные сведения."

# c16ef0d060334c2da8d1ce2473da7bd9
#: ../../intro/contributing.txt:65
msgid ""
"Once you're done with the tutorial, you can look through the rest of :doc:"
"`Django's documentation on contributing</internals/contributing/index>`. It "
"contains lots of great information and is a must read for anyone who'd like "
"to become a regular contributor to Django. If you've got questions, it's "
"probably got the answers."
msgstr ""
"Как только Вы закончите изучать это руководство, то можете полистать "
"напоследок :doc:`Django-документацию по содействию</internals/contributing/"
"index>`. Материал содержит много полезной информации и является обязательным "
"для прочтения всем, кто хотел бы стать постоянным автором Django. Если у вас "
"остались вопросы, наверняка, там есть на них ответы."

#: ../../intro/contributing.txt:71
msgid "Python 3 required!"
msgstr "Только Python 3!"

#: ../../intro/contributing.txt:73
msgid ""
"The current version of Django doesn't support Python 2.7. Get Python 3 at "
"`Python's download page <https://www.python.org/downloads/>`_ or with your "
"operating system's package manager."
msgstr ""
"Текущая версия Django не поддерживает Python 2.7. Скачайте Python 3 со "
"`страницы загрузки Python <https://www.python.org/downloads/>`_ или "
"воспользуйтесь пакетным менеджером вашей операционной системы."

#: ../../intro/contributing.txt:77 ../../intro/contributing.txt:163
msgid "For Windows users"
msgstr "Для пользователей Windows"

#: ../../intro/contributing.txt:79
msgid ""
"When installing Python on Windows, make sure you check the option \"Add "
"python.exe to Path\", so that it is always available on the command line."
msgstr ""
"Для того что бы Python был доступен в командной строке, при установке "
"отметьте опцию \"Add python.exe to Path\"."

#: ../../intro/contributing.txt:83
msgid "Code of Conduct"
msgstr "Кодекс поведения"

#: ../../intro/contributing.txt:85
msgid ""
"As a contributor, you can help us keep the Django community open and "
"inclusive. Please read and follow our `Code of Conduct <https://www."
"djangoproject.com/conduct/>`_."
msgstr ""
"Как контрибьютор Вы должны помогать сообществу Django оставаться открытым и "
"инклюзивным. Пожалуйста, прочитайте и соблюдайте наш `Кодекс поведения "
"<https://www.djangoproject.com/conduct/>`_."

# c3ae4c475f8e4010ae5b89f16d5887ae
#: ../../intro/contributing.txt:89
msgid "Installing Git"
msgstr "Установка Git"

# 19e7c3ab346b4fceb78b34023c2cd084
#: ../../intro/contributing.txt:91
msgid ""
"For this tutorial, you'll need Git installed to download the current "
"development version of Django and to generate patch files for the changes "
"you make."
msgstr ""
"Для этого руководства Вам потребуется установить git, чтобы загрузить "
"текущую разрабатываемую версию Django, а также для создания патч-файлов "
"Ваших изменений."

# b95490f092124738990e234a69764ab7
#: ../../intro/contributing.txt:95
msgid ""
"To check whether or not you have Git installed, enter ``git`` into the "
"command line. If you get messages saying that this command could not be "
"found, you'll have to download and install it, see `Git's download page`__."
msgstr ""
"Чтобы проверить, доступен ли git или Вы ещё не устанавливали его, введите "
"``git`` в командной строке. Если Вы получите сообщение о том, что эта "
"команда не может быть найдена, Вам придется скачать и установить его, см. "
"`страницу скачивания Git <http://git-scm.com/download>`_."

# 7893d77a268649d7b338737ac682c972
#: ../../intro/contributing.txt:99
msgid ""
"If you're not that familiar with Git, you can always find out more about its "
"commands (once it's installed) by typing ``git help`` into the command line."
msgstr ""
"Если Вы не знакомы с git, то всегда можете узнать подробнее о командах "
"(после его установки) путем ввода ``git help`` в командной строке."

# 7f270a5e48e144c0bd535e8e9959a0dd
#: ../../intro/contributing.txt:105
msgid "Getting a copy of Django's development version"
msgstr "Получение копии разрабатываемой версии Django"

# 1465f5c53a0e4d4ca106e638b7ad504a
#: ../../intro/contributing.txt:107
msgid ""
"The first step to contributing to Django is to get a copy of the source "
"code. First, `fork Django on GitHub <https://github.com/django/django/"
"fork>`__. Then, from the command line, use the ``cd`` command to navigate to "
"the directory where you'll want your local copy of Django to live."
msgstr ""
"Первым шагом к внесению вклада в Django, является получение копии исходного "
"кода. Во-первых, `сделайте копию репозитория Django на GitHub <https://"
"github.com/django/django/fork>`__. Затем в командной строке, используя "
"команду ``cd``, перейдите в каталог, который хотите использовать для "
"хранения локальной копии Django."

#: ../../intro/contributing.txt:112
msgid "Download the Django source code repository using the following command:"
msgstr "Скачайте исходный код репозитория Django, используя команду:"

#: ../../intro/contributing.txt:118
msgid ""
"Now that you have a local copy of Django, you can install it just like you "
"would install any package using ``pip``. The most convenient way to do so is "
"by using a *virtual environment* (or virtualenv) which is a feature built "
"into Python that allows you to keep a separate directory of installed "
"packages for each of your projects so that they don't interfere with each "
"other."
msgstr ""
"Теперь у Вас есть локальная копия Django. Его можно установить так же как и "
"любой пакет, используя ``pip``. Удобнее всего это делать используя "
"встроенное в Python *виртуальное окружение* (или virtualenv), которое "
"позволяет создать отдельный каталог для пакетов для каждого из ваших "
"проектов, во избежании конфликтов между ними."

#: ../../intro/contributing.txt:124
msgid ""
"It's a good idea to keep all your virtualenvs in one place, for example in "
"``.virtualenvs/`` in your home directory. Create it if it doesn't exist yet:"
msgstr ""
"Хорошей идеей будет хранить все ваши виртуальные окружения в одном месте, "
"например ``.virtualenvs/`` в Вашей домашней директории. Создайте ее, если ее "
"еще нет:"

#: ../../intro/contributing.txt:131
msgid "Now create a new virtualenv by running:"
msgstr "Создайте новое виртуальное окружение, запустив:"

#: ../../intro/contributing.txt:137
msgid "The path is where the new environment will be saved on your computer."
msgstr "Путь указывает куда ваше новое окружение будет сохранено."

#: ../../intro/contributing.txt:139
msgid "For Ubuntu users"
msgstr "Для пользователей Ubuntu"

#: ../../intro/contributing.txt:141
msgid ""
"On some versions of Ubuntu the above command might fail. Use the "
"``virtualenv`` package instead, first making sure you have ``pip3``:"
msgstr ""
"В некоторых версиях Ubuntu указанная выше команда может завершиться "
"неудачей. Вместо этого используйте пакет ``virtualenv``, предварительно "
"убедившись, что у вас есть ``pip3``:"

#: ../../intro/contributing.txt:151
msgid "The final step in setting up your virtualenv is to activate it:"
msgstr ""
"Последним шагом в настройке виртуального окружения является его активация:"

#: ../../intro/contributing.txt:157
msgid ""
"If the ``source`` command is not available, you can try using a dot instead:"
msgstr ""
"Если команда ``source`` недоступна, можно попробовать вместо нее "
"использовать точку:"

#: ../../intro/contributing.txt:165
msgid "To activate your virtualenv on Windows, run:"
msgstr "Для активации виртуального окружения в Windows запустите:"

#: ../../intro/contributing.txt:171
msgid ""
"You have to activate the virtualenv whenever you open a new terminal window. "
"virtualenvwrapper__ is a useful tool for making this more convenient."
msgstr ""
"Вы должны активировать виртуальное окружение всякий раз, когда вы открываете "
"новое окно терминала. `virtualenvwrapper <https://virtualenvwrapper."
"readthedocs.io/en/latest/>`_ - полезный инструмент, позволяющий сделать это "
"более удобным."

#: ../../intro/contributing.txt:176
msgid ""
"Anything you install through ``pip`` from now on will be installed in your "
"new virtualenv, isolated from other environments and system-wide packages. "
"Also, the name of the currently activated virtualenv is displayed on the "
"command line to help you keep track of which one you are using. Go ahead and "
"install the previously cloned copy of Django:"
msgstr ""
"Все, что вы установили с помощью ``pip``, теперь будет установлено в вашем "
"новом виртуальном окружении, изолированном от других окружений и "
"общесистемных пакетов. Кроме того, в командной строке отображается имя "
"активированного в настоящий момент виртуального окружения, чтобы было проще "
"отслеживать, какое из них вы используете. Теперь установим ранее "
"клонированную копию Django:"

#: ../../intro/contributing.txt:186
msgid ""
"The installed version of Django is now pointing at your local copy. You will "
"immediately see any changes you make to it, which is of great help when "
"writing your first patch."
msgstr ""
"Установленная версия Django теперь указывает на вашу локальную копию. Вы "
"сразу увидите любые изменения, которые вы вносите в Django, что очень "
"полезно при написании вашего первого патча."

# da900fdd5e2840c8a6c75b38e41e4d42
#: ../../intro/contributing.txt:191
msgid "Rolling back to a previous revision of Django"
msgstr "Откат к предыдущей версии Django"

#: ../../intro/contributing.txt:193
msgid ""
"For this tutorial, we'll be using ticket :ticket:`24788` as a case study, so "
"we'll rewind Django's version history in git to before that ticket's patch "
"was applied. This will allow us to go through all of the steps involved in "
"writing that patch from scratch, including running Django's test suite."
msgstr ""
"Для этого урока мы будем использовать тикет :ticket:`24788` как учебное "
"случай, поэтому мы отмотаем назад историю Django версий в git, до того, как "
"патч тикета был применён. Это позволит нам пройти через все этапы написания "
"патча с нуля, включая запуск коллекции тестов Django."

# e76d5ff8b8bc47e7938c0a7a77cbc5d7
#: ../../intro/contributing.txt:198
msgid ""
"**Keep in mind that while we'll be using an older revision of Django for "
"this tutorial, you should always use the current version of the master "
"branch when working on your own patch for a ticket!**"
msgstr ""
"**Имейте в виду, что для учебных целей мы будем использовать старую ревизию "
"Django. Но Вы должны всегда использовать текущую разрабатываемую версию "
"Django при работе над своим собственным патчем тикета!**"

#: ../../intro/contributing.txt:204
msgid ""
"The patch for this ticket was written by Paweł Marczewski, and it was "
"applied to Django as `commit 4df7e8483b2679fc1cba3410f08960bac6f51115`__. "
"Consequently, we'll be using the revision of Django just prior to that, "
"`commit 4ccfc4439a7add24f8db4ef3960d02ef8ae09887`__."
msgstr ""
"Патч для этого тикета был написан Павлом Марджевски, и был применён в Django "
"как `коммит 4df7e8483b2679fc1cba3410f08960bac6f51115 <https://github.com/"
"django/django/commit/4df7e8483b2679fc1cba3410f08960bac6f51115>`_. "
"Следовательно, мы будем использовать еще более раннюю ревизию Django - "
"`коммит 4ccfc4439a7add24f8db4ef3960d02ef8ae09887 <https://github.com/django/"
"django/commit/4ccfc4439a7add24f8db4ef3960d02ef8ae09887>`_."

#: ../../intro/contributing.txt:212
msgid ""
"Navigate into Django's root directory (that's the one that contains "
"``django``, ``docs``, ``tests``, ``AUTHORS``, etc.). You can then check out "
"the older revision of Django that we'll be using in the tutorial below:"
msgstr ""
"Перейдите в корневой каталог Django (это тот, который содержит ``django``, "
"``docs``, ``tests``, ``AUTHORS`` и т.п.). Далее мы будем тестировать старую "
"версию Django, используемую в этом руководстве:"

# bbc1024a3b404b898eeda3167ed38c59
#: ../../intro/contributing.txt:221
msgid "Running Django's test suite for the first time"
msgstr "Запуск коллекции тестов Django впервые"

#: ../../intro/contributing.txt:223
msgid ""
"When contributing to Django it's very important that your code changes don't "
"introduce bugs into other areas of Django. One way to check that Django "
"still works after you make your changes is by running Django's test suite. "
"If all the tests still pass, then you can be reasonably sure that your "
"changes haven't completely broken Django. If you've never run Django's test "
"suite before, it's a good idea to run it once beforehand just to get "
"familiar with what its output is supposed to look like."
msgstr ""
"При внесении изменений непосредственно в Django, очень важно, чтобы ваш код "
"с изменениями не вызывал ошибок в других местах Django. Один из способов "
"убедиться в том, что Django по-прежнему работает после внесения изменений - "
"запустить коллекцию тестов Django. Пока все тесты проходят, Вы можете быть "
"уверены, что Ваши изменения ещё не разрушают целостность Django. Если Вы до "
"этого никогда не запускали коллекцию тестов Django, то неплох будет "
"запустить их хотя бы раз, чтобы знать, как должен выглядеть их вывод."

# fd00404160bd4e3c92142cbb5d906669
#: ../../intro/contributing.txt:231
msgid ""
"Before running the test suite, install its dependencies by first ``cd``-ing "
"into the Django ``tests/`` directory and then running:"
msgstr ""
"Перед первым запуском коллекции тестов нужно устранить зависимости, "
"установив недостающие пакеты. Используя команду ``cd``, перейдите в каталог "
"Django ``tests/`` и запустите:"

#: ../../intro/contributing.txt:238
msgid ""
"If you encounter an error during the installation, your system might be "
"missing a dependency for one or more of the Python packages. Consult the "
"failing package's documentation or search the Web with the error message "
"that you encounter."
msgstr ""
"Если во время установки вы столкнетесь в ошибками - в вашей системе могут "
"остаться не устраненные зависимости от одного или нескольких пакетов Python. "
"Проконсультируйтесь с документацией отказавшего пакета или поищите в "
"Интернете сообщение об ошибке, с которой вы столкнулись."

#: ../../intro/contributing.txt:243
msgid ""
"Now we are ready to run the test suite. If you're using GNU/Linux, macOS, or "
"some other flavor of Unix, run:"
msgstr ""
"Сейчас все готово для запуска коллекции тестов. Если Вы используете GNU/"
"Linux, macOS или Unix-подобную систему, запустите:"

#: ../../intro/contributing.txt:250
msgid ""
"Now sit back and relax. Django's entire test suite has over 9,600 different "
"tests, so it can take anywhere from 5 to 15 minutes to run, depending on the "
"speed of your computer."
msgstr ""
"Теперь посидите сложа руки и расслабьтесь. Вся коллекция тестов Django имеет "
"более 9600 различных проверок, так что это может занять от 5 до 15 минут, в "
"зависимости от скорости Вашего компьютера."

# c6de96aabba949e2bc3d14ca385b6df2
#: ../../intro/contributing.txt:254
msgid ""
"While Django's test suite is running, you'll see a stream of characters "
"representing the status of each test as it's run. ``E`` indicates that an "
"error was raised during a test, and ``F`` indicates that a test's assertions "
"failed. Both of these are considered to be test failures. Meanwhile, ``x`` "
"and ``s`` indicated expected failures and skipped tests, respectively. Dots "
"indicate passing tests."
msgstr ""
"Пока тесты Django выполняются, Вы увидите поток символов, показывающий "
"состояние выполняемого в данный момент теста. ``E`` указывает, что произошла "
"ошибка во время тестирования, а ``F`` - что тест вернул не тот результат, "
"который ожидался. Оба этих результата означают, то тест провален. Между тем, "
"``x`` и ``s`` указывают на ожидаемые неудачи и пропущенные тесты "
"соответственно. Точки показывают удачное прохождение тестов."

# 5b54a57f52fa4e9db4a697e2ab9bc648
#: ../../intro/contributing.txt:261
msgid ""
"Skipped tests are typically due to missing external libraries required to "
"run the test; see :ref:`running-unit-tests-dependencies` for a list of "
"dependencies and be sure to install any for tests related to the changes you "
"are making (we won't need any for this tutorial). Some tests are specific to "
"a particular database backend and will be skipped if not testing with that "
"backend. SQLite is the database backend for the default settings. To run the "
"tests using a different backend, see :ref:`running-unit-tests-settings`."
msgstr ""
"Пропускается тест, как правило, из-за отсутствия внешних библиотек, "
"необходимых для его запуска. Посмотрите :ref:`running-unit-tests-"
"dependencies` для получения списка зависимостей и обязательно установите всё "
"для тестов, связанных с изменениями, которые Вы делаете (для этого "
"руководства ничего делать не нужно). Некоторые тесты специфичны для "
"конкретной СУБД и пропускаются если тестирование проходит на другой. По "
"умолчанию используется бекенд SQLite. Если вам нужно пройти тестирование для "
"разный бекендов баз данных, см. :ref:`running-unit-tests-settings`."

# 907437925c664103bded312ce7a0227c
#: ../../intro/contributing.txt:269
msgid ""
"Once the tests complete, you should be greeted with a message informing you "
"whether the test suite passed or failed. Since you haven't yet made any "
"changes to Django's code, the entire test suite **should** pass. If you get "
"failures or errors make sure you've followed all of the previous steps "
"properly. See :ref:`running-unit-tests` for more information. There will be "
"a couple failures related to deprecation warnings that you can ignore. These "
"failures have since been fixed in Django."
msgstr ""
"По завершение тестирования Вы должны увидеть сообщение, уведомляющее о том, "
"что тесты пройдены либо они провалились. Поскольку Вы ещё не сделали каких "
"либо изменений в коде Django, то всё тестирование **должно** быть успешным. "
"Если Вы получаете отказы или ошибки, убедитесь в том, что выполнили "
"предыдущие шаги правильно. См. :ref:`running-unit-tests` для получения "
"дополнительной информации. Будет несколько сбоев, связанных с "
"предупреждениями об устаревании, которые вы можете игнорировать. Сейчас эти "
"сбои уже исправлены."

# ba7d4e16d5e64b90986119220f419d5e
#: ../../intro/contributing.txt:277
msgid ""
"Note that the latest Django master may not always be stable. When developing "
"against master, you can check `Django's continuous integration builds`__ to "
"determine if the failures are specific to your machine or if they are also "
"present in Django's official builds. If you click to view a particular "
"build, you can view the \"Configuration Matrix\" which shows failures broken "
"down by Python version and database backend."
msgstr ""
"Заметьте, что последняя ревизия основной ветки Django не всегда может быть "
"стабильной. Во время разработки в эту ветку, Вы можете проверить "
"`непрерывное интегрированное построение Django <https://djangoci.com/>`_ "
"чтобы определить, являются ли сбои специфичными для Вашей машины, или они "
"также присутствуют в официальной сборке Django. Если Вы щёлкните на просмотр "
"конкретной сборки, то сможете увидеть \"Матрицу Конфигураций\", которая "
"отображает сбои для версий Python и бекендов баз данных."

# bc89b8a2ad014c7fbf3e49d258c144ef
#: ../../intro/contributing.txt:288
msgid ""
"For this tutorial and the ticket we're working on, testing against SQLite is "
"sufficient, however, it's possible (and sometimes necessary) to :ref:`run "
"the tests using a different database <running-unit-tests-settings>`."
msgstr ""
"Для данного руководства и этого тикета, над которым мы работаем, "
"тестирование с SQLite является достаточным, однако, можно (и иногда нужно) "
"сделать :ref:`запуск тестов с использованием различных баз данных <running-"
"unit-tests-settings>`."

# 834ae08263b9435d9671583c4274dc84
#: ../../intro/contributing.txt:294
msgid "Creating a branch for your patch"
msgstr "Создание отдельной ветки для вашего патча"

#: ../../intro/contributing.txt:296
msgid "Before making any changes, create a new branch for the ticket:"
msgstr "Перед внесением изменений создайте новую ветку для вашего тикета:"

#: ../../intro/contributing.txt:302
msgid ""
"You can choose any name that you want for the branch, \"ticket_24788\" is an "
"example. All changes made in this branch will be specific to the ticket and "
"won't affect the main copy of the code that we cloned earlier."
msgstr ""
"Для вашей ветки вы можете выбрать любое имя, например \"ticket_24788\". Все "
"изменения, сделанные в этой ветке, будут относится к тикету, и не повлияют "
"на ранее скопированную основную копию кода. "

# bd13411516f24691b01f96a0b5445f20
#: ../../intro/contributing.txt:307
msgid "Writing some tests for your ticket"
msgstr "Написание тестов для Вашего тикета"

# 8fb0563d0291435aa9ee3b9e420a7faa
#: ../../intro/contributing.txt:309
msgid ""
"In most cases, for a patch to be accepted into Django it has to include "
"tests. For bug fix patches, this means writing a regression test to ensure "
"that the bug is never reintroduced into Django later on. A regression test "
"should be written in such a way that it will fail while the bug still exists "
"and pass once the bug has been fixed. For patches containing new features, "
"you'll need to include tests which ensure that the new features are working "
"correctly. They too should fail when the new feature is not present, and "
"then pass once it has been implemented."
msgstr ""
"В большинстве случаев, патч, который будет принят в Django, должен включать "
"тесты. Для патчей, исправляющих ошибки, это означает написание "
"регрессионного тестирования, чтобы гарантировать, что эта ошибка больше не "
"появится в Django. Регрессионный тест должен быть написан таким образом, "
"чтобы он не мог быть выполнен, пока ошибка существует и пройден после того, "
"как ошибка была исправлена. Для патчей, содержащих новые возможности, Вам "
"необходимо включить тесты, которые гарантируют, что эти новые возможности "
"работают правильно. Тесты тоже должны завершаться ошибкой, если новая "
"возможность отсутствует, а после её реализации проходить успешно."

# 7f2e9ba8d65646fcba6a12fdc303cdbe
#: ../../intro/contributing.txt:318
msgid ""
"A good way to do this is to write your new tests first, before making any "
"changes to the code. This style of development is called `test-driven "
"development`__ and can be applied to both entire projects and single "
"patches. After writing your tests, you then run them to make sure that they "
"do indeed fail (since you haven't fixed that bug or added that feature yet). "
"If your new tests don't fail, you'll need to fix them so that they do. After "
"all, a regression test that passes regardless of whether a bug is present is "
"not very helpful at preventing that bug from reoccurring down the road."
msgstr ""
"Хороший способ сделать это, во-первых, писать новые тесты перед внесением "
"любых изменений в код. Этот тип разработки называется `разработкой через "
"тестирование <https://en.wikipedia.org/wiki/Test-driven_development>`_ и "
"может быть применена как к целым проектам, так и к отдельным патчам. После "
"написания тестов, Вам нужно запустить их, чтобы убедиться, что они "
"действительно проваливаются (ведь Вы еще не исправили ошибку или не добавили "
"эту возможность). Если Ваши новые тесты не проваливаются, то необходимо "
"исправить их так, чтобы они это делали. Ведь регрессионный тест, который "
"проходит независимо от присутствия ошибки, бесполезен для предотвращения "
"повторения этой ошибки в будущем."

# ec5d00c8290548c187f8e9b9981ee1a1
#: ../../intro/contributing.txt:327
msgid "Now for our hands-on example."
msgstr "Теперь приступим к практическому примеру."

# 6f022223dda0437fa2e3355b875026dc
#: ../../intro/contributing.txt:332
msgid "Writing some tests for ticket #24788"
msgstr "Написание тестов для тикета #24788"

# ce98747fa975452082385abc0185bd52
#: ../../intro/contributing.txt:334
msgid ""
"Ticket :ticket:`24788` proposes a small feature addition: the ability to "
"specify the class level attribute ``prefix`` on Form classes, so that::"
msgstr ""
"Тикет :ticket:`24788` предлагает небольшое расширение функциональности: "
"возможность указать атрибут класса ``prefix`` для классов Form:"

#: ../../intro/contributing.txt:341
msgid ""
"In order to resolve this ticket, we'll add a ``prefix`` attribute to the "
"``BaseForm`` class. When creating instances of this class, passing a prefix "
"to the ``__init__()`` method will still set that prefix on the created "
"instance. But not passing a prefix (or passing ``None``) will use the class-"
"level prefix. Before we make those changes though, we're going to write a "
"couple tests to verify that our modification functions correctly and "
"continues to function correctly in the future."
msgstr ""
"В целях решения этого тикета, мы добавим атрибут ``prefix`` для класса "
"``BaseForm``. При создании экземпляров класса передача префикса в метод "
"``__init__()`` должна устанавливать этот префикс у создаваемого экземпляра. "
"Если не передавать префикс (или передать ``None``) будет использоваться "
"префикс уровня класса. Перед внесением этих изменений напишем пару тестов, "
"что бы убедиться  что наша модификация функционирует правильно и будет "
"функционировать правильно в будущем."

#: ../../intro/contributing.txt:349
msgid ""
"Navigate to Django's ``tests/forms_tests/tests/`` folder and open the "
"``test_forms.py`` file. Add the following code on line 1674 right before the "
"``test_forms_with_null_boolean`` function::"
msgstr ""
"Перейдите в Django-каталог ``tests/forms_tests/tests/`` и откройте файл "
"``test_forms.py``. Добавьте следующий код в строку 1674 непосредственно "
"перед функцией ``test_forms_with_null_boolean``:"

#: ../../intro/contributing.txt:365
msgid ""
"This new test checks that setting a class level prefix works as expected, "
"and that passing a ``prefix`` parameter when creating an instance still "
"works too."
msgstr ""
"Этот новый тест проверяет, что установка префикса уровня класса работает "
"так, как ожидалось, и что установка параметра ``prefix`` тоже работает."

# bcf78d1e1c134057a48b3fc598c80847
#: ../../intro/contributing.txt:368
msgid "But this testing thing looks kinda hard..."
msgstr "Но вся эта суть тестирования выглядит сложновато..."

# b3a87dcea9a54d0c8472ee18ac0450b9
#: ../../intro/contributing.txt:370
msgid ""
"If you've never had to deal with tests before, they can look a little hard "
"to write at first glance. Fortunately, testing is a *very* big subject in "
"computer programming, so there's lots of information out there:"
msgstr ""
"Если Вы никогда не имели дело с тестами прежде, они могут выглядеть, на "
"первый взгляд, немного сложными в написании. К счастью, тестирование - это "
"*очень* обширная тема в компьютерном программировании, поэтому она освещена "
"во множестве источников информации:"

# 56f82d245bdc439ea5c76499f82f0bdd
#: ../../intro/contributing.txt:374
msgid ""
"A good first look at writing tests for Django can be found in the "
"documentation on :doc:`/topics/testing/overview`."
msgstr ""
"Для начала о написании тестов для Django можно почитать в документации в :"
"doc:`/topics/testing/overview`."

# 4cdb80d7a07942019eb260ec9b9a96a3
#: ../../intro/contributing.txt:376
msgid ""
"Dive Into Python (a free online book for beginning Python developers) "
"includes a great `introduction to Unit Testing`__."
msgstr ""
"Погружение в Python (бесплатная онлайн-книга для начинающих Python-"
"разработчиков) включает в себя великолепное `Введение в модульное "
"тестирование <http://www.diveintopython3.net/unit-testing.html>`_."

# 0f80f0df3b014e71853529f9f1a9b48a
#: ../../intro/contributing.txt:378
msgid ""
"After reading those, if you want something a little meatier to sink your "
"teeth into, there's always the Python :mod:`unittest` documentation."
msgstr ""
"После изучения вышеперечисленного, если вам нужно что-то \"позабористей\", "
"всегда есть документация на :mod:`unittest`."

# d8aae36dd99d4c60a25d25cc2f5c517c
#: ../../intro/contributing.txt:384
msgid "Running your new test"
msgstr "Запуск Вашего нового теста"

#: ../../intro/contributing.txt:386
msgid ""
"Remember that we haven't actually made any modifications to ``BaseForm`` "
"yet, so our tests are going to fail. Let's run all the tests in the "
"``forms_tests`` folder to make sure that's really what happens. From the "
"command line, ``cd`` into the Django ``tests/`` directory and run:"
msgstr ""
"Помните, что мы до сих пор не вносили никаких изменений в класс "
"``BaseForm``, поэтому наши тесты будут терпеть неудачу. Давайте запустим все "
"тесты в директории ``forms_tests``, чтобы убедится, что это действительно "
"так. В командной строке перейдите в директорию ``tests/`` и запустите:"

#: ../../intro/contributing.txt:395
msgid ""
"If the tests ran correctly, you should see one failure corresponding to the "
"test method we added. If all of the tests passed, then you'll want to make "
"sure that you added the new test shown above to the appropriate folder and "
"class."
msgstr ""
"Если тесты запущены правильно, вы должны увидеть один сбой, соответствующий "
"методу тестирования, который мы добавили. Если все тесты прошли, то Вы "
"должны удостовериться, что добавили новый тест именно так, как показано "
"выше, в соответствующую папку и класс."

# ca828590fafc4015933109a6c932c13f
#: ../../intro/contributing.txt:400
msgid "Writing the code for your ticket"
msgstr "Написание кода для Вашего тикета"

#: ../../intro/contributing.txt:402
msgid ""
"Next we'll be adding the functionality described in ticket :ticket:`24788` "
"to Django."
msgstr ""
"Далее мы будем добавлять в Django функциональность, описанную в тикете :"
"ticket:`24788`."

# fbb28f00cdf1462798936e893c83f8d3
#: ../../intro/contributing.txt:406
msgid "Writing the code for ticket #24788"
msgstr "Написание кода для тикета #24788"

#: ../../intro/contributing.txt:408
msgid ""
"Navigate to the ``django/django/forms/`` folder and open the ``forms.py`` "
"file. Find the ``BaseForm`` class on line 72 and add the ``prefix`` class "
"attribute right after the ``field_order`` attribute::"
msgstr ""
"Перейдите в папку ``django/django/forms/`` и откройте файл ``forms.py``. "
"Найдите класс ``BaseForm`` на строке 72 и добавьте атрибут ``prefix`` после "
"существующего атрибута ``field_order``:"

# 3378be90ddaa4580bc37e45a8c0a9983
#: ../../intro/contributing.txt:421
msgid "Verifying your test now passes"
msgstr "Запустим тестирование еще раз"

#: ../../intro/contributing.txt:423
msgid ""
"Once you're done modifying Django, we need to make sure that the tests we "
"wrote earlier pass, so we can see whether the code we wrote above is working "
"correctly. To run the tests in the ``forms_tests`` folder, ``cd`` into the "
"Django ``tests/`` directory and run:"
msgstr ""
"Как только Вы закончите изменение Django, то должны убедиться в том, что "
"предварительно написанные тесты успешно выполняются, подтверждая "
"корректность написанного вами кода. Чтобы запустить тесты из папки "
"``forms_tests``, перейдите в Django-директорию ``tests/`` и запустите:"

#: ../../intro/contributing.txt:432
msgid ""
"Oops, good thing we wrote those tests! You should still see one failure with "
"the following exception::"
msgstr ""
"Ой, хорошо, что мы написали эти тесты! Вы должны по-прежнему видеть один "
"провал со следующим исключением:"

#: ../../intro/contributing.txt:437
msgid ""
"We forgot to add the conditional statement in the ``__init__`` method. Go "
"ahead and change ``self.prefix = prefix`` that is now on line 87 of ``django/"
"forms/forms.py``, adding a conditional statement::"
msgstr ""
"Мы забыли добавить условный оператор в метод ``__init__``. Идем дальше и "
"меняем ``self.prefix = prefix``, который теперь находится в строке 87 "
"``django/forms/forms.py``, добавляя условный оператор:"

#: ../../intro/contributing.txt:444
msgid ""
"Re-run the tests and everything should pass. If it doesn't, make sure you "
"correctly modified the ``BaseForm`` class as shown above and copied the new "
"test correctly."
msgstr ""
"Повторный запустите тесты и все должно пройти. Если этого не произошло, "
"убедитесь, что правильно изменили класс ``BaseForm`` так, как показано выше, "
"и правильно скопируйте новые тесты."

# e22471059b1d47aa8a9ed2f4e5187d88
#: ../../intro/contributing.txt:449
msgid "Running Django's test suite for the second time"
msgstr "Запуск коллекции тестов Django во второй раз"

# 9ff9280623804f74bd87316e3d1fdaa3
#: ../../intro/contributing.txt:451
msgid ""
"Once you've verified that your patch and your test are working correctly, "
"it's a good idea to run the entire Django test suite just to verify that "
"your change hasn't introduced any bugs into other areas of Django. While "
"successfully passing the entire test suite doesn't guarantee your code is "
"bug free, it does help identify many bugs and regressions that might "
"otherwise go unnoticed."
msgstr ""
"Как только Вы удостоверились, что Ваш патч и тестирование работают "
"правильно, было бы неплохо запустить всю коллекцию Django-тестов, просто для "
"того, чтобы убедиться, что Ваши изменения не внесли какие-либо ошибки в "
"другие места Django. И хотя успешное выполнение всей коллекции тестов не "
"гарантирует, что ваш код не содержит ошибок, он помогает идентифицировать "
"множество ошибок и регрессий, которые в противном случае могли остаться "
"незамеченными."

#: ../../intro/contributing.txt:457
msgid ""
"To run the entire Django test suite, ``cd`` into the Django ``tests/`` "
"directory and run:"
msgstr ""
"Чтобы запустить всю коллекцию тестов Django, перейдите в директорию ``tests/"
"`` и запустите:"

#: ../../intro/contributing.txt:464
msgid "As long as you don't see any failures, you're good to go."
msgstr "Пока Вы не видите каких-либо сбоев, всё идёт хорошо."

# d8398b05040d4ea99abe93a64cda80d7
#: ../../intro/contributing.txt:467
msgid "Writing Documentation"
msgstr "Написание документации"

#: ../../intro/contributing.txt:469
msgid ""
"This is a new feature, so it should be documented. Add the following section "
"on line 1068 (at the end of the file) of ``django/docs/ref/forms/api.txt``::"
msgstr ""
"Если это новая функциональность, то она должна быть документирована. "
"Добавьте следующий раздел в строку 1068 (в конце файла) файла ``django/docs/"
"ref/forms/api.txt``:"

#: ../../intro/contributing.txt:482
msgid ""
"Since this new feature will be in an upcoming release it is also added to "
"the release notes for Django 1.9, on line 164 under the \"Forms\" section in "
"the file ``docs/releases/1.9.txt``::"
msgstr ""
"Поскольку эта новая функция будет в предстоящей версии, она также "
"добавляется к заметкам о выпуске для Django 1.9, в строке 164 в разделе "
"\"Forms\" в файле ``docs/releases/1.9.txt``:"

# 1b22d63e95014a999de2a055f0b8a4b5
#: ../../intro/contributing.txt:489
msgid ""
"For more information on writing documentation, including an explanation of "
"what the ``versionadded`` bit is all about, see :doc:`/internals/"
"contributing/writing-documentation`. That page also includes an explanation "
"of how to build a copy of the documentation locally, so you can preview the "
"HTML that will be generated."
msgstr ""
"Для более подробной информации о написании документации, в том числе "
"объяснению того, что такое ``versionadded``, см. :doc:`/internals/"
"contributing/writing-documentation`. Эта страница также включает объяснение "
"того, как построить копию документации локально так, чтобы Вы могли "
"просматривать сгенерированный HTML."

# f33ae34e654b466090a2cd02233e4226
#: ../../intro/contributing.txt:496
msgid "Previewing your changes"
msgstr "Предварительный просмотр ваших изменений"

# 6c4851f6f15b49eb9043ac908d1dc438
#: ../../intro/contributing.txt:498
msgid ""
"Now it's time to go through all the changes made in our patch. To display "
"the differences between your current copy of Django (with your changes) and "
"the revision that you initially checked out earlier in the tutorial:"
msgstr ""
"Теперь пришло время просмотреть все изменения сделанные в вашем патче. Для "
"отображения разницы между вашей копией Django (с вашими изменениями) и "
"ревизией, полученной вами в начале этого руководства, запустите:"

#: ../../intro/contributing.txt:506
msgid "Use the arrow keys to move up and down."
msgstr "Используйте клавиши со стрелками для перемещения вверх и вниз."

#: ../../intro/contributing.txt:588
msgid ""
"When you're done previewing the patch, hit the ``q`` key to return to the "
"command line. If the patch's content looked okay, it's time to commit the "
"changes."
msgstr ""
"Как только закончите любоваться патчем, нажмите клавишу ``q`` для возврата "
"обратно в командную строку. Если содержимое патча выглядел хорошо, значит "
"наступило время зафиксировать изменения."

#: ../../intro/contributing.txt:593
msgid "Committing the changes in the patch"
msgstr "Фиксируем изменения, внесенные патчем"

#: ../../intro/contributing.txt:595
msgid "To commit the changes:"
msgstr "Для фиксации изменений:"

#: ../../intro/contributing.txt:601
msgid ""
"This opens up a text editor to type the commit message. Follow the :ref:"
"`commit message guidelines <committing-guidelines>` and write a message like:"
msgstr ""
"Откроется текстовый редактор для ввода сообщения, описывающего фиксацию. "
"Следуя :ref:`рекомендациям по составлению сообщений фиксации <committing-"
"guidelines>`, напишите сообщения типа:"

#: ../../intro/contributing.txt:609
msgid "Pushing the commit and making a pull request"
msgstr ""
"Отправка зафиксированных изменений в удаленный репозиторий  и создание "
"запроса на включение\t"

#: ../../intro/contributing.txt:611
msgid ""
"After committing the patch, send it to your fork on GitHub (substitute "
"\"ticket_24788\" with the name of your branch if it's different):"
msgstr ""
"После фиксации изменений, вносимых патчем, синхронизируйте вашу копию "
"репозитория с GitHub (замените \"ticket_24788\" на ваше имя ветки, если оно "
"отличается):"

#: ../../intro/contributing.txt:618
msgid ""
"You can create a pull request by visiting the `Django GitHub page <https://"
"github.com/django/django/>`_. You'll see your branch under \"Your recently "
"pushed branches\". Click \"Compare & pull request\" next to it."
msgstr ""
"Вы можете создать запрос на включение, посетив `страницу Django на GitHub "
"<https://github.com/django/django/>`_. Вы увидите свою ветку в разделе "
"\"Your recently pushed branches\". Нажмите \"Compare & pull request\" рядом "
"с ней."

#: ../../intro/contributing.txt:622
msgid ""
"Please don't do it for this tutorial, but on the next page that displays a "
"preview of the patch, you would click \"Create pull request\"."
msgstr ""
"Пожалуйста не делайте этого во время изучения этого руководства, но на "
"следующей странице вы должны были бы нажать на \"Create pull request\"."

#: ../../intro/contributing.txt:626
msgid "Next steps"
msgstr "Следующий шаг"

#: ../../intro/contributing.txt:628
msgid ""
"Congratulations, you've learned how to make a pull request to Django! "
"Details of more advanced techniques you may need are in :doc:`/internals/"
"contributing/writing-code/working-with-git`."
msgstr ""
"Поздравляю, вы научились создавать запрос на включение ваших наработок в "
"Django! Подробная информация о более сложных методах, которые могут вам "
"понадобиться, находится в :doc:`/internals/contributing/writing-code/working-"
"with-git`."

#: ../../intro/contributing.txt:632
msgid ""
"Now you can put those skills to good use by helping to improve Django's "
"codebase."
msgstr ""
"Теперь вы можете эффективно использовать эти навыки, помогая улучшить "
"кодовую базу Django."

# a09e2ba8d2f849aea1bbcb2f977e18e4
#: ../../intro/contributing.txt:636
msgid "More information for new contributors"
msgstr "Дополнительная информация для новых контрибьютеров"

# e099929bd6da488bbf4fc977d6dbc92f
#: ../../intro/contributing.txt:638
msgid ""
"Before you get too into writing patches for Django, there's a little more "
"information on contributing that you should probably take a look at:"
msgstr ""
"Прежде чем Вы приступите к написанию патчей для Django, ознакомьтесь с "
"дополнительной информацией для участников сообщества:"

# c2a72d47461d4e008759c0d643170543
#: ../../intro/contributing.txt:641
msgid ""
"You should make sure to read Django's documentation on :doc:`claiming "
"tickets and submitting patches </internals/contributing/writing-code/"
"submitting-patches>`. It covers Trac etiquette, how to claim tickets for "
"yourself, expected coding style for patches, and many other important "
"details."
msgstr ""
"Вы должны обязательно прочитать Django-документацию об :doc:`утверждении "
"тикетов и принятии патчей </internals/contributing/writing-code/submitting-"
"patches>`. Она охватывает правила этикета в Trac, получение тикетов для "
"себя, ожидаемый стиль кодирования для патчей, и многие другие важные детали."

# bc98fda7ac7242338fd54700f7598b6a
#: ../../intro/contributing.txt:646
msgid ""
"First time contributors should also read Django's :doc:`documentation for "
"first time contributors</internals/contributing/new-contributors/>`. It has "
"lots of good advice for those of us who are new to helping out with Django."
msgstr ""
"Новые участники также должны прочитать :doc:`Django-документацию для новых "
"котрибьютеров</internals/contributing/new-contributors/>`. Там вы найдете "
"много хороших советов от тех из нас, кто уже помогал Django."

# 50e0fb0725114f929ac09542072b4010
#: ../../intro/contributing.txt:650
msgid ""
"After those, if you're still hungry for more information about contributing, "
"you can always browse through the rest of :doc:`Django's documentation on "
"contributing</internals/contributing/index>`. It contains a ton of useful "
"information and should be your first source for answering any questions you "
"might have."
msgstr ""
"После этого, если Вас всё еще будет мучить жажда получения дополнительных "
"сведений о вкладе в Django, то Вы всегда можете просмотреть остальную :doc:"
"`Django-документацию по содействию</internals/contributing/index>`. Она "
"содержит массу полезной информации и должна стать Вашим первым источником "
"для ответов на любые возникшие вопросы."

# 3b052a844ec24dfca605a85b0ebabd8a
#: ../../intro/contributing.txt:657
msgid "Finding your first real ticket"
msgstr "Поиск Вашего первого реального тикета"

#: ../../intro/contributing.txt:659
msgid ""
"Once you've looked through some of that information, you'll be ready to go "
"out and find a ticket of your own to write a patch for. Pay special "
"attention to tickets with the \"easy pickings\" criterion. These tickets are "
"often much simpler in nature and are great for first time contributors. Once "
"you're familiar with contributing to Django, you can move on to writing "
"patches for more difficult and complicated tickets."
msgstr ""
"Когда вы изучите документацию и решите, что уже готовы к написанию патча, "
"вам пройдется приступить к поиску тикета. Обратите особое внимание на тикеты "
"с критерием \"easy pickings\". Эти задачи, как правило, гораздо проще по "
"своей природе и великолепно подходят для новоиспечённых контрибьютеров. "
"Когда Вы поближе познакомитесь с контрибуцией в Django, то можете переходить "
"к написанию патчей для более трудных и сложных тикетов."

# 5b65de9eeb714b4aac39999a66aab78f
#: ../../intro/contributing.txt:666
msgid ""
"If you just want to get started already (and nobody would blame you!), try "
"taking a look at the list of `easy tickets that need patches`__ and the "
"`easy tickets that have patches which need improvement`__. If you're "
"familiar with writing tests, you can also look at the list of `easy tickets "
"that need tests`__. Just remember to follow the guidelines about claiming "
"tickets that were mentioned in the link to Django's documentation on :doc:"
"`claiming tickets and submitting patches </internals/contributing/writing-"
"code/submitting-patches>`."
msgstr ""
"Если Вы просто хотите начать работу сейчас (и никто не будет Вас в этом "
"винить!), то попробуйте взглянуть на списки `easy tickets that need patches "
"<https://code.djangoproject.com/query?"
"status=new&status=reopened&has_patch=0&easy=1&col=id&col=summary&col=status&col=owner&col=type&col=milestone&order=priority>`_ "
"и `easy tickets that have patches which need improvement <https://code."
"djangoproject.com/query?"
"status=new&status=reopened&needs_better_patch=1&easy=1&col=id&col=summary&col=status&col=owner&col=type&col=milestone&order=priority>`_. "
"Если Вы знакомы с написанием тестов, то можете также взглянуть на список "
"`easy tickets that need tests <https://code.djangoproject.com/query?"
"status=new&status=reopened&needs_tests=1&easy=1&col=id&col=summary&col=status&col=owner&col=type&col=milestone&order=priority>`_. "
"Только не забывайте следовать рекомендациям, упомянутым в Django-"
"документации об :doc:`утверждении тикетов и принятии патчей </internals/"
"contributing/writing-code/submitting-patches>` о том, как зарезервировать "
"тикеты."

#: ../../intro/contributing.txt:680
msgid "What's next after creating a pull request?"
msgstr "Что происходит после создания запроса на включение?"

# f58ab24bea804005bf0862a06e36e642
#: ../../intro/contributing.txt:682
msgid ""
"After a ticket has a patch, it needs to be reviewed by a second set of eyes. "
"After submitting a pull request, update the ticket metadata by setting the "
"flags on the ticket to say \"has patch\", \"doesn't need tests\", etc, so "
"others can find it for review. Contributing doesn't necessarily always mean "
"writing a patch from scratch. Reviewing existing patches is also a very "
"helpful contribution. See :doc:`/internals/contributing/triaging-tickets` "
"for details."
msgstr ""
"После того, как тикет был запатчен, он должен быть рассмотрен посторонним "
"взглядом. После загрузки патча или его отправки, не забудьте обновить "
"метаданные тикета путем установки флагов \"has patch\", \"doesn't need tests"
"\" и т. д., чтобы другие могли найти его для проведения ревью. Вклад не "
"обязательно всегда означает написание патча с нуля. Ревью существующих "
"патчей тоже очень полезный вклад. См. подробнее :doc:`/internals/"
"contributing/triaging-tickets`."

#~ msgid ""
#~ "When installing Git on Windows, it is recommended that you pick the \"Git "
#~ "Bash\" option so that Git runs in its own shell. This tutorial assumes "
#~ "that's how you have installed it."
#~ msgstr ""
#~ "При установке Git в Windows рекомендуется выбрать опцию \"Git Bash\", "
#~ "чтобы Git запускался в своей оболочке. В этом руководстве предполагается, "
#~ "что вы так и поступили."

#~ msgid ""
#~ "Using the built-in ``venv`` module will not work if you are also using "
#~ "the Git Bash shell on Windows, since activation scripts are only created "
#~ "for the system shell (``.bat``) and PowerShell (``.ps1``). Use the "
#~ "``virtualenv`` package instead:"
#~ msgstr ""
#~ "Если в Windows Вы используете командную оболочку Git Bash, то встроенный "
#~ "модуль ``venv`` не будет работать, т.к. сценарий активации создается "
#~ "только для системной командной оболочки (``.bat``) и PowerShell (``."
#~ "ps1``). В это случае используйте пакет ``virtualenv``:"

# dec8ab0e813c4d1082e5c277d0044684
#~ msgid "Generating a patch file for your changes."
#~ msgstr "Создание файла патча для сделанных изменений."

#~ msgid ""
#~ "Now it's time to generate a patch file that can be uploaded to Trac or "
#~ "applied to another copy of Django. To get a look at the content of your "
#~ "patch, run the following command:"
#~ msgstr ""
#~ "Теперь пришло время для создания патч-файлов, которые могут быть "
#~ "загружены в Trac, либо применены к другой копии Django. Чтобы взглянуть "
#~ "на содержимое Вашего патча, выполните следующую команду::"

#~ msgid ""
#~ "You should now have a file in the root Django directory called ``24788."
#~ "diff``. This patch file contains all your changes and should look this:"
#~ msgstr ""
#~ "Теперь Вы должны иметь файл в корневом каталоге Django, с именем ``17549."
#~ "diff``. Этот патч-файл содержит все Ваши изменения и выглядит так:"

# 2161cd0ae7a149c0a44dcf749188b396
#~ msgid "So what do I do next?"
#~ msgstr "Так что делать дальше?"

# 1a1434c663f6410f8d4d77e740ea07ab
#~ msgid ""
#~ "Congratulations, you've generated your very first Django patch! Now that "
#~ "you've got that under your belt, you can put those skills to good use by "
#~ "helping to improve Django's codebase. Generating patches and attaching "
#~ "them to Trac tickets is useful, however, since we are using git - "
#~ "adopting a more :doc:`git oriented workflow </internals/contributing/"
#~ "writing-code/working-with-git>` is recommended."
#~ msgstr ""
#~ "Поздравляем, Вы создали свой самый первый Django-патч! Теперь, когда Вы "
#~ "знаете, \"что у зайчика внутри\", то можете направить эти навыки для "
#~ "более хорошего применения, помогая улучшить кодовую базу Django. "
#~ "Генерация патчей и прикрепление их к трекеру тикетов полезна, однако, "
#~ "поскольку мы используем git - рекомендуем сильнее адаптироваться к :doc:"
#~ "`рабочему процессу, ориентированному на git </internals/contributing/"
#~ "writing-code/working-with-git>`."

#~ msgid ""
#~ "Since we never committed our changes locally, perform the following to "
#~ "get your git branch back to a good starting point:"
#~ msgstr ""
#~ "Поскольку мы никогда не коммитили наши изменения локально, выполните "
#~ "следующее, чтобы вернуть вашу ветку git обратно, к хорошей отправной "
#~ "точке::"

# 7e2971ae4929446588a2d03da24eface
#~ msgid "What's next?"
#~ msgstr "Что дальше?"

# 177af9de455c46199b5274f41db8b57e
#~ msgid ""
#~ "We can run the test suite by simply ``cd``-ing into the Django ``tests/`` "
#~ "directory and, if you're using GNU/Linux, Mac OS X or some other flavor "
#~ "of Unix, run::"
#~ msgstr ""
#~ "Мы можем запустить набор тестов, просто перейдя с помощью ``cd`` в "
#~ "каталог ``tests/`` и, если Вы используете GNU/Linux, Mac OS X, либо "
#~ "некоторые другие Unix-подобные системы, выполнив::"

#~ msgid ""
#~ "Ticket :ticket:`17549` describes the following, small feature addition:"
#~ msgstr ""
#~ "Тикет :ticket:`17549` описывает следующее, небольшое добавление "
#~ "функциональности:"
