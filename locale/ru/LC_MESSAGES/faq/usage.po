# Russian translations for Django package.
# Copyright (C) Django Software Foundation and contributors
# This file is distributed under the same license as the Django package.
# Automatically generated, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: Django 1.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-27 00:21\n"
"PO-Revision-Date: 2012-02-15 15:13\n"
"Last-Translator: Tyshchenko Viktor <tyvik8@gmail.com>\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 7153e326345f40d0afd9504d931902a4
#: ../../faq/usage.txt:2
msgid "FAQ: Using Django"
msgstr "FAQ: Использование Django"

# e94ac00707bc41f7a452f07c4ffbadfc
#: ../../faq/usage.txt:5
msgid "Why do I get an error about importing DJANGO_SETTINGS_MODULE?"
msgstr "Что за ошибка при импорте DJANGO_SETTINGS_MODULE?"

# 1e8c627c4a2740f3bd1a9999557e43fb
#: ../../faq/usage.txt:7
msgid "Make sure that:"
msgstr "Проверьте:"

# 85739b1df4ad46f694e2a277fe2f0c9d
#: ../../faq/usage.txt:9
msgid ""
"The environment variable DJANGO_SETTINGS_MODULE is set to a fully-qualified "
"Python module (i.e. \"mysite.settings\")."
msgstr ""
"Переменная окружения DJANGO_SETTINGS_MODULE указана полностью "
"(например, \"mysite.settings\") на существующий модуль."

# cc61a152c1474632825f985a1200dc5e
#: ../../faq/usage.txt:12
msgid ""
"Said module is on ``sys.path`` (``import mysite.settings`` should work)."
msgstr "Пропишите модуль в ``sys.path`` (``import mysite.settings`` должно помочь)."

# a307a23f2f124b8c9f582ba40c976697
#: ../../faq/usage.txt:14
msgid "The module doesn't contain syntax errors (of course)."
msgstr "Модуль синтаксически верен и успешно компилируется."

# f86ad99aa07c406ebdc61044b57c94de
#: ../../faq/usage.txt:17
msgid "I can't stand your template language. Do I have to use it?"
msgstr "Мне не нравится язык шаблонов, я обязательно должен использовать именно его?"

# 6ccbee85c94649edbf9707816894d40f
#: ../../faq/usage.txt:19
msgid ""
"We happen to think our template engine is the best thing since chunky bacon, "
"but we recognize that choosing a template language runs close to religion. "
"There's nothing about Django that requires using the template language, so "
"if you're attached to ZPT, Cheetah, or whatever, feel free to use those."
msgstr ""
"Нам нравится наш язык шаблонов, но утверждать что он единственно верный - "
"сродни религии. В Django нет привязки к нему, так что вы можете подключить "
"ZPT, Cheetah и пр."

# 68c14085aa514c8290bc4368c2d9faf4
#: ../../faq/usage.txt:25
msgid "Do I have to use your model/database layer?"
msgstr "Мне обязательно нужно пользоваться слоем с вашей реализацией моделей?"

# 7b35ddf994c94d51a9034be6b85c4567
#: ../../faq/usage.txt:27
msgid ""
"Nope. Just like the template system, the model/database layer is decoupled "
"from the rest of the framework."
msgstr ""
"Неа, как и с языком шаблонов, модели отделены от всего фреймворка."

# 6689a1bcca1e49249790c62158378325
#: ../../faq/usage.txt:30
msgid ""
"The one exception is: If you use a different database library, you won't get "
"to use Django's automatically-generated admin site. That app is coupled to "
"the Django database layer."
msgstr ""
"Небольшое уточнение: если вы используете стороннюю библиотеку для "
"работы с базой данных, то сгенерировать админку автоматически уже не "
"получится. Это приложение связано с моделями Django."

# 7cbdf29d289040179134a4e25ce9871d
#: ../../faq/usage.txt:35
msgid "How do I use image and file fields?"
msgstr "Как использовать поля для загрузки картинок и файлов?"

# e7d07a375ce54fa1a09b420fffe9f8ed
#: ../../faq/usage.txt:37
msgid ""
"Using a :class:`~django.db.models.FileField` or an :class:`~django.db.models."
"ImageField` in a model takes a few steps:"
msgstr ""
"Для них предназначены специальные классы (:class:`~django.db.models.FileField` "
"и :class:`~django.db.models.ImageField`). Использовать их можно так:"

# b43b370d668c43ecadb82634e02797b0
#: ../../faq/usage.txt:40
msgid ""
"In your settings file, you'll need to define :setting:`MEDIA_ROOT` as the "
"full path to a directory where you'd like Django to store uploaded files. "
"(For performance, these files are not stored in the database.) Define :"
"setting:`MEDIA_URL` as the base public URL of that directory. Make sure that "
"this directory is writable by the Web server's user account."
msgstr ""
"В файле настроек нужно указать :setting:`MEDIA_ROOT` - полный путь "
"к каталогу, где Django будет хранить загруженные файлы. Для "
"быстродействия не стоит хранить их в базе данных. Определите "
":setting:`MEDIA_URL` - базовый URL к этому каталогу и убедитесь, "
"что у веб-сервера есть права на запись туда файлов."

# cfccaa1404c4408ea90a0fd45cacfc4e
#: ../../faq/usage.txt:47
msgid ""
"Add the :class:`~django.db.models.FileField` or :class:`~django.db.models."
"ImageField` to your model, making sure to define the :attr:`~django.db."
"models.FileField.upload_to` option to tell Django to which subdirectory of :"
"setting:`MEDIA_ROOT` it should upload files."
msgstr ""
"В полях типа :class:`~django.db.models.FileField` или :class:`~django.db.models."
"ImageField` вашей модели установите :attr:`~django.db.models.FileField.upload_to` "
"равным пути к файлу относительно :setting:`MEDIA_ROOT`."

# b97bb99a6d55471ab513105d38b727ae
#: ../../faq/usage.txt:53
msgid ""
"All that will be stored in your database is a path to the file (relative to :"
"setting:`MEDIA_ROOT`). You'll most likely want to use the convenience :attr:"
"`~django.db.models.fields.files.FieldFile.url` attribute provided by Django. "
"For example, if your :class:`~django.db.models.ImageField` is called "
"``mug_shot``, you can get the absolute path to your image in a template with "
"``{{ object.mug_shot.url }}``."
msgstr ""
"Всё, что будет сохранено в базу данных - путь к файлу (относительно :setting:`MEDIA_ROOT`). "
"Для удобного получения URL к файлу можно использовать :attr:"
"`~django.db.models.fields.files.FieldFile.url`. Например, если поле типа "
":class:`~django.db.models.ImageField` называется ``mug_shot``, то получить "
"абсолютный путь в шаблоне можно следующим образом ``{{ object.mug_shot.url }}``."

# e4c689125b1847a599f97f628917c461
#: ../../faq/usage.txt:62
msgid "How do I make a variable available to all my templates?"
msgstr "Как сделать переменную доступной во всех шаблонах?"

# eeabc24362e4497897f3d1e9dbc525b5
#: ../../faq/usage.txt:64
msgid ""
"Sometimes your templates just all need the same thing. A common example "
"would be dynamically-generated menus. At first glance, it seems logical to "
"simply add a common dictionary to the template context."
msgstr ""
"Порой это действительно нужно, например, в динамически создаваемом "
"меню. На первый взгляд выглядит разумным просто добавить общий "
"словарь в контекст шаблона."

# d05cc8a40b784d8bb710abbca106544c
#: ../../faq/usage.txt:68
msgid ""
"The correct solution is to use a ``RequestContext``. Details on how to do "
"this are here: :ref:`subclassing-context-requestcontext`."
msgstr ""
"Однако верное решение состоит в использовании ``RequestContext``. "
"Подробнее можно посмотреть в :ref:`subclassing-context-requestcontext`."
